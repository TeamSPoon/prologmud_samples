:-multifile lisp_trans/2.
:-dynamic lisp_trans/2.
:-style_check(-singleton).
lisp_trans('$COMMENT'(["; ================================================"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':0).
lisp_trans('$COMMENT'([";      SUMO (Suggested Upper Merged Ontology)"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52).
lisp_trans('$COMMENT'(["; ================================================                                            "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99).
lisp_trans('$COMMENT'(["; The original versions of SUMO incorporated elements from many public sources"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195).
lisp_trans('$COMMENT'(["; which are documented at http://www.ontologyportal.org/SUMOhistory/"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276).
lisp_trans('$COMMENT'(["; The SUMO is freely available, subject to the following IEEE license.  "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346).
lisp_trans('$COMMENT'(["; ----------------------"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421).
lisp_trans('$COMMENT'(["; Copyright ï¿½ 2004 by the Institute of Electrical and Electronics Engineers, Inc."]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448).
lisp_trans('$COMMENT'(["; Three Park Avenue"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533).
lisp_trans('$COMMENT'(["; New York, NY 10016-5997, USA"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':554).
lisp_trans('$COMMENT'(["; All rights reserved."]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586).
lisp_trans('$COMMENT'(["; 1. COPYRIGHT                                                                                                                                                                                                                                                      "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610).
lisp_trans('$COMMENT'(["; The Institute of Electrical and Electronics Engineers, Inc., (\"IEEE\") owns the         "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':883).
lisp_trans('$COMMENT'(["; copyright to this Document in all forms of media. Copyright in the text retrieved,     "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':974).
lisp_trans('$COMMENT'(["; displayed or output from this Document is owned by IEEE and is protected by the        "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1065).
lisp_trans('$COMMENT'(["; copyright laws of the United States and by international treaties. The IEEE reserves   "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1156).
lisp_trans('$COMMENT'(["; all rights not expressly granted herein.                                               "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1247).
lisp_trans('$COMMENT'(["; 2. ROYALTIES                                                                                                                                                                                                                                                     "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1338).
lisp_trans('$COMMENT'(["; The IEEE is providing the Document at no charge. However, the Document is not to be    "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1776).
lisp_trans('$COMMENT'(["; considered \"Public Domain,\" as the IEEE is, and at all times shall remain, the sole    "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1867).
lisp_trans('$COMMENT'(["; copyright holder in the Document. The IEEE intends to revise the Document from time to "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':1958).
lisp_trans('$COMMENT'(["; time; the latest version shall be available at http://standards.ieee.org/catalog/      "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2049).
lisp_trans('$COMMENT'(["; 3. TERMS OF USE                                                                                                                                                                                                                                                        "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2140).
lisp_trans('$COMMENT'(["; The IEEE hereby grants Licensee a perpetual, non-exclusive, royalty-free, world-wide   "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2582).
lisp_trans('$COMMENT'(["; right and license to copy, publish and distribute the Document in any way, and to      "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2673).
lisp_trans('$COMMENT'(["; prepare derivative works that are based on or incorporate all or part of the Document  "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2764).
lisp_trans('$COMMENT'(["; provided that the IEEE is appropriately acknowledged as the source and copyright owner "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2855).
lisp_trans('$COMMENT'(["; in each and every use.                                                                                                                                                         "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':2946).
lisp_trans('$COMMENT'(["; 4. LIMITED WARRANTIES & LIMITATIONS OF REMEDIES                                                                                                                                                                                                                        "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3125).
lisp_trans('$COMMENT'(["; LICENSOR Does not warrant or represent the accuracy or content of the document and     "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3480).
lisp_trans('$COMMENT'(["; Expressly Disclaims any Express or Implied Warranty, including any Implied Warranty of "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3571).
lisp_trans('$COMMENT'(["; Merchantability or Fitness for a Specific Purpose or that the use of the document is   "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3662).
lisp_trans('$COMMENT'(["; free from patent infringement. The document is supplied ONLY \"AS IS.\"                  "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3753).
lisp_trans('$COMMENT'(["; ----------------------"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3844).
lisp_trans('$COMMENT'(["; The SUMO was initially developed at Teknowledge Corp."]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3870).
lisp_trans('$COMMENT'(["; Any questions or comments about this ontology can be directed to the"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':3928).
lisp_trans('$COMMENT'(["; Technical editor, Adam Pease, apease [at] articulatesoftware [dot] com  "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4001).
lisp_trans('$COMMENT'([";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4077).
lisp_trans('$COMMENT'(["; The knowledge representation language in which the SUMO is expressed is SUO-KIF, "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4161).
lisp_trans('$COMMENT'(["; which stands for \"Standard Upper Ontology - Knowledge Interchange Format\".  SUO-KIF "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4247).
lisp_trans('$COMMENT'(["; is a simplified form of the popular KIF knowledge representation language.  A "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4335).
lisp_trans('$COMMENT'(["; specification of SUO-KIF can be found at:  http://www.ontologyportal.org"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4417).
lisp_trans('$COMMENT'(["; The SUMO is a modular ontology.  That is, the ontology is divided into "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4493).
lisp_trans('$COMMENT'(["; self-contained subontologies.  Each subontology is indicated by a section "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4569).
lisp_trans('$COMMENT'(["; header, and the dependencies between the subontologies are specified with "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4647).
lisp_trans('$COMMENT'(["; statements of the form \";; INCLUDES '<SUBONTOLOGY>'\".  These statements are "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4725).
lisp_trans('$COMMENT'(["; found at the beginning of each section.  "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4805).
lisp_trans('$COMMENT'(["; We ask the people using or referencing SUMO cite our primary paper:"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4850).
lisp_trans('$COMMENT'(["; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4922).
lisp_trans('$COMMENT'(["; Proceedings of the 2nd International Conference on Formal Ontology in "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':4999).
lisp_trans('$COMMENT'(["; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5073).
lisp_trans('$COMMENT'(["; Ogunquit, Maine, October 17-19, 2001.  Also see http://www.ontologyportal.org"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5144).
lisp_trans('$COMMENT'(["; BEGIN FILE"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5225).
lisp_trans('$COMMENT'([";;;;;;;;;;;;;;;;;;;;;;;;;;;;"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5240).
lisp_trans('$COMMENT'([";   STRUCTURAL ONTOLOGY   ;;"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5272).
lisp_trans('$COMMENT'([";;;;;;;;;;;;;;;;;;;;;;;;;;;;"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5302).
lisp_trans('$COMMENT'(["; INCLUDES 'BASE ONTOLOGY'"]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5332).
lisp_trans('$COMMENT'(["; The Structural Ontology consists of definitions of certain syntactic "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5361).
lisp_trans('$COMMENT'(["; abbreviations that can be both heuristically useful and computationally "]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5435).
lisp_trans('$COMMENT'(["; advantageous."]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5511).
lisp_trans(rtBinaryPredicate(isa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5528).
lisp_trans(argIsa(isa,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5565).
lisp_trans(argIsa(isa,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5592).
lisp_trans(documentation(isa,vEnglishLanguage,s("An","object","is","an","#$instance","of","a","#$SetOrClass","if","it","is","included","in","that","#$SetOrClass",".","An","individual","may","be","an","#$instance","of","many","classes",",","some","of","which","may","be","subclasses","of","others",".","Thus",",","there","is","no","assumption","in","the","meaning","of","#$instance","about","specificity","or","uniqueness",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5624).
lisp_trans(documentation(isa,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","å","±","\236\","äº","\216\","ä","¸","\200\","ä","¸","ª","#$SetOrClassï","¼","\214\","è","¿","\231\","ç","\211\","©","ä","½","\223\","å","°","±","é","\202\","£","ä","¸","ª","#$SetOrClassç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceã","\200\","\202\","ä","¸","\200\","ä","¸","ªä","¸","ªä","½","\223\","å","\217\","¯","ä","»","¥","æ","\230\","¯","è","®","¸","å","¤","\232\","ç","±","»","å","\210\","«","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceï","¼","\214\","å","\205\","¶","ä","¸","­","æ","\234\","\211\","ä","¸","\200\","äº","\233\","å","\217\","¯","ä","»","¥","æ","\230\","¯","å","\205\","¶","ä","»","\226\","ç","±","»","å","\210\","«","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","æ","\211\","\200\","ä","»","¥","å","¯","¹","äº","\216\","#$instanceå","¹","¶","æ","²","¡","æ","\234\","\211\","å","\201\","\207\","è","®","¾","ä","»","»","ä","½","\225\","å","\205\","·","ä","½","\223\","æ","\210\","\226\","ç","\213\","¬","ç","\211\","¹","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':5941).
lisp_trans(genlPreds(nearestIsa,isa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6265).
lisp_trans(rtAsymmetricRelation(nearestIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6306).
lisp_trans(rtIntransitiveRelation(nearestIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6354).
lisp_trans(rtTotalValuedRelation(nearestIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6404).
lisp_trans(documentation(nearestIsa,vEnglishLanguage,s("An","object","is","an","#$immediateInstance","of","a","#$SetOrClass","if","it","is","an","#$instance","of","the","#$SetOrClass","and","it","is","not","an","#$instance","of","a","proper","subclass","of","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6453).
lisp_trans(documentation(nearestIsa,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$SetOrClassç","\232\","\204\","#$instanceï","¼","\214\","è","\200\","\214\","ä","¸","\224\","å","®","\203\","å","¹","¶","ä","¸","\215\","æ","\230\","¯","è","¯","¥","#$SetOrClassç","\234\","\237\","æ","­","£","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","#$instanceï","¼","\214\","é","\202\","£","è","¿","\231\","ä","¸","ªç","\211\","©","ä","½","\223\","å","°","±","æ","\230\","¯","è","¯","¥","#$SetOrClassç","\232\","\204\","#$immediateInstanceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6668).
lisp_trans(=>(nearestIsa(ENTITY,CLASS),not(exists([SUBCLASS],and(genls(SUBCLASS,CLASS),not(equal(SUBCLASS,CLASS)),isa(ENTITY,SUBCLASS))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':6907).
lisp_trans(rtBinaryPredicate(genlInverse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7108).
lisp_trans(rtIrreflexiveRelation(genlInverse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7143).
lisp_trans(rtIntransitiveRelation(genlInverse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7182).
lisp_trans(rtSymmetricRelation(genlInverse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7222).
lisp_trans(rtPartialValuedRelation(genlInverse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7259).
lisp_trans(argIsa(genlInverse,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7300).
lisp_trans(argIsa(genlInverse,2,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7334).
lisp_trans(documentation(genlInverse,vEnglishLanguage,s("The","inverse","of","a","#$BinaryRelation","is","a","#$Relation","in","which","all","the","tuples","of","the","original","#$Relation","are","reversed",".","In","other","words",",","one","#$BinaryRelation","is","the","inverse","of","another","if","they","are","equivalent","when","their","arguments","are","swapped",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7368).
lisp_trans(documentation(genlInverse,xtChineseLanguage,'BinaryRelationç\232\\204\ç\233\¸å\217\\215\æ\230\¯ä¸\200\ç§\215\#$Relation,è\200\\214\å±\236\äº\216\å®\203\ å\216\\237\æ\234\¬#$Relationæ\211\\200\æ\234\\211\å\205\\203\ç»\204\ç\232\\204\å\200\¼é\203\½é\200\\206\è½¬ã\200\\202\ æ\215\¢å\217\¥è¯\235\è¯´ï¼\214\å½\223\ä¸\200\ç§\215\äº\214\å\205\\203\å\205\³ç³»å\222\\214\å\217\¦ä¸\200\ç§\215\äº\214\å\205\\203\å\205\³ç³»ç\232\\204\å\217\\202\æ\225\°äº¤æ\215\¢ç\232\\204\ç»\223\æ\236\\234\æ\230\¯ç\233\¸ç­\211\ç\232\\204\ è¯\235\ï¼\214\é\202\£è¿\231\#$BinaryRelationå°±æ\230\¯å\217\¦ä¸\200\ç§\215\ç\232\\204\ç\233\¸å\217\\215\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':7646).
lisp_trans(rtBinaryPredicate(genls),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8224).
lisp_trans(rtPartialOrderingRelation(genls),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8260).
lisp_trans(argIsa(genls,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8304).
lisp_trans(argIsa(genls,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8335).
lisp_trans(documentation(genls,vEnglishLanguage,s("(","#$subclass","?","CLASS1","?","CLASS2",")","means","that","?","CLASS1","is","a","#$subclass","of","?","CLASS2",",","i",".","e",".","every","#$instance","of","?","CLASS1","is","also","an","#$instance","of","?","CLASS2",".","A","#$Class","may","have","multiple","superclasses","and","subclasses",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8366).
lisp_trans(documentation(genls,xtChineseLanguage,s("(","#$subclass","?","CLASS1","?","CLASS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","CLASS1","æ","\230\","¯","?","CLASS2","ç","\232\","\204\","#$subclassï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ï","¼","\214\","?","CLASS1","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$instanceå","\220\","\214\","æ","\227\","¶","ä","¹","\237\","æ","\230\","¯","?","CLASS2","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceã","\200\","\202\","ä","¸","\200\","ä","¸","ª","#$Classå","\217\","¯","ä","»","¥","å","\205\","·","æ","\234\","\211\","å","¤","\232\","ä","¸","ªè","¶","\205\","ç","±","»","å","\210\","«","å","\222\","\214\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8610).
lisp_trans(=>(genls(X,Y),and(tCol(X),tCol(Y))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8878).
lisp_trans(=>(and(genls(X,Y),isa(Z,X)),isa(Z,Y)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':8969).
lisp_trans(genlPreds(immediateSubclass,genls),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9044).
lisp_trans(rtAsymmetricRelation(immediateSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9085).
lisp_trans(rtIntransitiveRelation(immediateSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9133).
lisp_trans(documentation(immediateSubclass,vEnglishLanguage,s("A","#$SetOrClass","?","CLASS1","is","an","#$immediateSubclass","of","another","#$SetOrClass","?","CLASS2","just","in","case","?","CLASS1","is","a","subclass","of","?","CLASS2","and","there","is","no","other","subclass","of","?","CLASS2","such","that","?","CLASS1","is","also","a","subclass","of","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9183).
lisp_trans(documentation(immediateSubclass,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$SetOrClassç","\232\","\204\","?","CLASS1","æ","\230\","¯","å","\217\","¦","ä","¸","\200\","ä","¸","ª","#$SetOrClass","?","CLASS2","ç","\232\","\204\","#$immediateSubclass",",","ä","¸","ºå","\205\","\215\","?","CLASS1","æ","\210\","\220\","ä","¸","º","?","CLASS2","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","è","\200\","\214\","?","CLASS2","å","\206\","\215\","æ","²","¡","æ","\234\","\211\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","è","¿","\231\","æ","\240\","·","?","CLASS1","ä","¹","\237\","æ","\230\","¯","?","CLASS2","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9448).
lisp_trans(=>(immediateSubclass(CLASS1,CLASS2),not(exists([CLASS3],and(genls(CLASS3,CLASS2),genls(CLASS1,CLASS3),not(equal(CLASS2,CLASS3)),not(equal(CLASS1,CLASS3)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9714).
lisp_trans(rtBinaryPredicate(genlPreds),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9949).
lisp_trans(rtPartialOrderingRelation(genlPreds),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':9988).
lisp_trans(argIsa(genlPreds,1,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10035).
lisp_trans(argIsa(genlPreds,2,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10067).
lisp_trans(documentation(genlPreds,vEnglishLanguage,s("(","#$subrelation","?","REL1","?","REL2",")","means","that","every","tuple","of","?","REL1","is","also","a","tuple","of","?","REL2",".","In","other","words",",","if","the","#$Relation","?","REL1","holds","for","some","arguments","arg","_","1",",","arg","_","2",",",".",".",".","arg","_","n",",","then","the","#$Relation","?","REL2","holds","for","the","same","arguments",".","A","consequence","of","this","is","that","a","#$Relation","and","its","subrelations","must","have","the","same","#$valence",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10099).
lisp_trans(documentation(genlPreds,xtChineseLanguage,s("(","#$subrelation","?","REL1","?","REL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ï","¼","\237\","REL1ç","\232\","\204\","æ","¯","\217\","ä","¸","ªå","\205\","\203\","ç","»","\204\","ä","¹","\237\","æ","\230\","¯","ï","¼","\237\","REL2ç","\232\","\204\","å","\205\","\203\","ç","»","\204\","ã","\200\","\202\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ï","¼","\214\","å","¦","\202\","æ","\236\","\234\","ï","¼","\237\","REL1ç","\232\","\204\","ä","¸","\200\","äº","\233\","å","\217\","\202\","æ","\225\","°","arg","_","1","ï","¼","\214\","arg","_","2","ï","¼","\214\",".",".",".","arg","_","n","ç","\232\","\204\","ï","¼","\206\","ï","¼","\205\","Relationæ","\210\","\220\","ç","«","\213\","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","ï","¼","\237\","REL2ç","\232\","\204\","ç","\233\","¸","å","\220\","\214\","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","ï","¼","\206\","ï","¼","\205\","Relationä","¹","\237\","å","\220\","\214\","æ","\240\","·","æ","\210\","\220\","ç","«","\213\","ã","\200\","\202\","å","\233\","\240\","æ","­","¤","ï","¼","\214\","ä","¸","\200\","ä","¸","ªï","¼","\206\","ï","¼","\205\","Relationå","\222\","\214\","å","®","\203\","ç","\232\","\204\","#$subrelationå","¿","\205\","é","¡","»","æ","\213\","¥","æ","\234\","\211\","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","#$valenceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10473).
lisp_trans(=>(and(genlPreds(PRED1,PRED2),valence(PRED1,NUMBER)),valence(PRED2,NUMBER)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10864).
lisp_trans(=>(and(genlPreds(PRED1,PRED2),argIsa(PRED2,NUMBER,CLASS1)),argIsa(PRED1,NUMBER,CLASS1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':10972).
lisp_trans(=>(and(genlPreds(REL1,REL2),tPred(REL1),tPred(REL2),[REL1|ROW]),[REL2|ROW]),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11094).
lisp_trans(=>(and(genlPreds(PRED1,PRED2),isa(PRED2,CLASS),genls(CLASS,rtInheritableRelation)),isa(PRED1,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11242).
lisp_trans(rtTernaryPredicate(argIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11394).
lisp_trans(argIsa(argIsa,1,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11429).
lisp_trans(argIsa(argIsa,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11456).
lisp_trans(argIsa(argIsa,3,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11490).
lisp_trans(documentation(argIsa,vEnglishLanguage,s("Provides","a","computationally","and","heuristically","convenient","mechanism","for","declaring","the","argument","types","of","a","given","relation",".","The","formula","(","#$domain","?","REL","?","INT","?","CLASS",")","means","that","the","?","INT","'","th","element","of","each","tuple","in","the","relation","?","REL","must","be","an","instance","of","?","CLASS",".","Specifying","argument","types","is","very","helpful","in","maintaining","ontologies",".","Representation","systems","can","use","these","specifications","to","classify","terms","and","check","integrity","constraints",".","If","the","restriction","on","the","argument","type","of","a","#$Relation","is","not","captured","by","a","#$SetOrClass","already","defined","in","the","ontology",",","one","can","specify","a","#$SetOrClass","compositionally","with","the","functions","#$UnionFn",",","#$IntersectionFn",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':11519).
lisp_trans(documentation(argIsa,xtChineseLanguage,s("ä","¸","ºå","£","°","æ","\230\","\216\","æ","\237\","\220\","ç","§","\215\","ç","\211\","¹","å","®","\232\","å","\205\","³","ç","³","»","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","ç","±","»","å","\236\","\213\","ï","¼","\214\","æ","\217\","\220\","ä","¾","\233\","ä","¸","\200\","ä","¸","ªä","¾","¿","å","\210\","©","è","®","¡","ç","®","\227\","æ","\234\","ºå","\222\","\214\","åº","\224\","ç","\224\","¨","å","\220\","¯","å","\217\","\221\","å","¼","\217\","è","¿","\220\","ç","®","\227\","ç","\232\","\204\","æ","\234\","ºå","\210\","¶","ã","\200\","\202\","å","\205\","¬","å","¼","\217\","ï","¼","\210\","ï","¼","\206\","ï","¼","\205\","domainï","¼","\237\","RELï","¼","\237\","INTï","¼","\237\","CLASS",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","ï","¼","\237\","RELå","\205\","³","ç","³","»","ä","¸","­","ï","¼","\214\","æ","¯","\217\","ä","¸","ªå","\205\","\203\","ç","»","\204\","ç","\232\","\204\","ç","¬","¬","?","INTä","¸","ªå","\205\","\203\","ç","´","\240\","ï","¼","\214\","å","¿","\205\","é","¡","»","æ","\230\","¯","ï","¼","\237\","CLASSç","§","\215\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\","æ","\214\","\207\","å","®","\232\","å","\217\","\202\","æ","\225\","°","ç","±","»","å","\236\","\213\","å","¯","¹","ç","»","´","æ","\212\","¤","ç","\237\","¥","è","¯","\206\","æ","\234\","¬","ä","½","\223\","ç","\224\","\232\","æ","\234\","\211\","è","£","¨","ç","\233\","\212\","ã","\200\","\202\","è","¡","¨","ç","¤","ºç","\237\","¥","è","¯","\206\","ç","\232\","\204\","ç","³","»","ç","»","\237\","å","\217\","¯","ä","»","¥","ä","½","¿","ç","\224\","¨","è","¿","\231\","äº","\233\","è","§","\204\","è","\214\","\203\","æ","\235\","¥","æ","\212\","\212\","æ","\234\","¯","è","¯","­","å","\210\","\206\","ç","±","»","ï","¼","\214\","å","¹","¶","æ","£","\200\","æ","\237\","¥","ç","³","»","ç","»","\237\","ç","\232\","\204\","å","®","\214\","æ","\225\","´","æ","\200\","§","çº","¦","æ","\235\","\237\","æ","\234\","\211\","å","\220\","¦","å","\217\","\227\","å","\210\","°","ç","\240\","´","å","\235\","\217\","ã","\200\","\202\","å","¦","\202\","æ","\236\","\234\","å","\207\","ºç","\216\","°","æ","\237\","\220\","ä","¸","ªï","¼","\205\","Relationå","\217\","\202\","æ","\225\","°","ç","±","»","å","\236\","\213\","ç","\232\","\204\","é","\231\","\220\","å","\210\","¶","ï","¼","\214\","è","¿","\230\","æ","²","¡","æ","\234\","\211\","å","\234\","¨","ç","\237\","¥","è","¯","\206\","æ","\234\","¬","ä","½","\223\","å","\206\","\205\","ç","\216\","°","æ","\234\","\211\","ï","¼","\206\","ï","¼","\205\","SetOrClasså","®","\232\","ä","¹","\211\","æ","\211\","\200\","æ","\217\","\217\","è","¿","°","æ","\227\","¶","ï","¼","\214\","å","\217\","¯","ä","»","¥","ä","½","¿","ç","\224\","¨","ï","¼","\206\","ï","¼","\205\","UnionFnå","\222\","\214\","ï","¼","\206\","ï","¼","\205\","IntersectionFnç","­","\211\","è","¿","\231\","äº","\233\","å","\212\","\237\","è","\203\","½","ï","¼","\214\","æ","\235\","¥","é","\200\","\220\","ä","¸","\200\","æ","\214\","\207\","å","®","\232\","è","¯","¥","ï","¼","\206\","ï","¼","\205\","SetOrClassç","\232\","\204\","é","\231\","\220\","å","\210\","¶","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':12214).
lisp_trans(=>(and(argIsa(REL,NUMBER,CLASS1),argIsa(REL,NUMBER,CLASS2)),or(genls(CLASS1,CLASS2),genls(CLASS2,CLASS1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':12931).
lisp_trans(rtTernaryPredicate(argGenl),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13092).
lisp_trans(argIsa(argGenl,1,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13135).
lisp_trans(argIsa(argGenl,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13170).
lisp_trans(argIsa(argGenl,3,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13212).
lisp_trans(documentation(argGenl,vEnglishLanguage,s("A","#$Predicate","that","is","used","to","specify","argument","type","restrictions","of","#$Predicates",".","The","formula","(","#$domainSubclass","?","REL","?","INT","?","CLASS",")","means","that","the","?","INT","'","th","element","of","each","tuple","in","the","relation","?","REL","must","be","a","subclass","of","?","CLASS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13249).
lisp_trans(documentation(argGenl,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Predicate","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","æ","\214\","\207\","å","®","\232\","#$Predicates","å","\217\","\202\","æ","\225\","°","ç","±","»","å","\236\","\213\","ç","\232\","\204\","é","\231\","\220\","å","\210\","¶","ã","\200\","\202\","å","\205\","¬","å","¼","\217\","(","#$domainSubclass","?","REL","?","INT","?","CLASS",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","ï","¼","\237\","RELå","\205\","³","ç","³","»","ä","¸","­","ï","¼","\214\","æ","¯","\217\","ä","¸","ªå","\205\","\203\","ç","»","\204\","ç","\232\","\204\","ç","¬","¬","?","INTä","¸","ªå","\205\","\203\","ç","´","\240\","ï","¼","\214\","å","¿","\205\","é","¡","»","æ","\230\","¯","ï","¼","\237\","CLASSç","§","\215\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13525).
lisp_trans(=>(and(genlPreds(REL1,REL2),argGenl(REL2,NUMBER,CLASS1)),argGenl(REL1,NUMBER,CLASS1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13801).
lisp_trans(=>(and(argGenl(REL,NUMBER,CLASS1),argGenl(REL,NUMBER,CLASS2)),or(genls(CLASS1,CLASS2),genls(CLASS2,CLASS1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':13935).
lisp_trans(rtBinaryPredicate(equal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14112).
lisp_trans(rtEquivalenceRelation(equal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14145).
lisp_trans(tSumoRelationExtendedToQuantities(equal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14182).
lisp_trans(argIsa(equal,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14228).
lisp_trans(argIsa(equal,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14252).
lisp_trans(documentation(equal,vEnglishLanguage,s("(","equal","?","ENTITY1","?","ENTITY2",")","is","true","just","in","case","?","ENTITY1","is","identical","with","?","ENTITY2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14276).
lisp_trans(documentation(equal,xtChineseLanguage,s("å","\201\","\207\","å","¦","\202\","?","ENTITY1","ç","­","\211\","äº","\216\","?","ENTITY2ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","(","equal","?","ENTITY1","?","ENTITY2",")","å","°","±","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14400).
lisp_trans(=>(equal(THING1,THING2),all([ATTR],<=>(sumoProperty(THING1,ATTR),sumoProperty(THING2,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14530).
lisp_trans(=>(equal(ATTR1,ATTR2),all([THING],<=>(sumoProperty(THING,ATTR1),sumoProperty(THING,ATTR2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14663).
lisp_trans(=>(equal(THING1,THING2),all([CLASS],<=>(isa(THING1,CLASS),isa(THING2,CLASS)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14795).
lisp_trans(=>(equal(CLASS1,CLASS2),all([THING],<=>(isa(THING,CLASS1),isa(THING,CLASS2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':14931).
lisp_trans(=>(equal(LIST1,LIST2),=>(and(equal(LIST1,uN(vTheListFn,ROW1)),equal(LIST2,uN(vTheListFn,ROW2))),all([NUMBER],equal(vSumoListOrderFn(uN(vTheListFn,ROW1),NUMBER),vSumoListOrderFn(uN(vTheListFn,ROW2),NUMBER))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15183).
lisp_trans(rtBinaryPredicate(resultIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15446).
lisp_trans(rtAsymmetricRelation(resultIsa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15479).
lisp_trans(argIsa(resultIsa,1,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15515).
lisp_trans(argIsa(resultIsa,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15541).
lisp_trans(documentation(resultIsa,vEnglishLanguage,s("Gives","the","range","of","a","function",".","In","other","words",",","(","#$range","?","FUNCTION","?","CLASS",")","means","that","all","of","the","values","assigned","by","?","FUNCTION","are","#$instances","of","?","CLASS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15569).
lisp_trans(documentation(resultIsa,xtChineseLanguage,s("å","®","\203\","ä","¸","ºå","\207\","½","æ","\225\","°","æ","\217\","\220\","ä","¾","\233\","ä","¸","\200\","ä","¸","ªè","\214\","\203\","å","\233\","´","ã","\200\","\202\","å","°","±","æ","\230\","¯","è","¯","´","ï","¼","\214\","(","#$range","?","FUNCTION","?","CLASS",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ï","¼","\214\","æ","\211\","\200\","æ","\234\","\211\","ç","\224\","±","?","FUNCTION","æ","\211\","\200\","æ","\214\","\207\","å","®","\232\","ç","\232\","\204\","å","\200\","¼","ï","¼","\214\","é","\203\","½","æ","\230\","¯","è","¿","\231\","ä","¸","ª","?","CLASS","ç","\232\","\204\","#$instanceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15762).
lisp_trans(=>(and(resultIsa(FUNCTION,CLASS),equal(uN(uFn,FUNCTION,ROW),VALUE)),isa(VALUE,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':15967).
lisp_trans(=>(and(genlPreds(REL1,REL2),resultIsa(REL2,CLASS1)),resultIsa(REL1,CLASS1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16092).
lisp_trans(=>(and(resultIsa(REL,CLASS1),resultIsa(REL,CLASS2)),or(genls(CLASS1,CLASS2),genls(CLASS2,CLASS1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16192).
lisp_trans(rtBinaryPredicate(resultGenl),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16335).
lisp_trans(rtAsymmetricRelation(resultGenl),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16376).
lisp_trans(argIsa(resultGenl,1,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16420).
lisp_trans(argGenl(resultGenl,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16454).
lisp_trans(documentation(resultGenl,vEnglishLanguage,s("(","#$rangeSubclass","?","FUNCTION","?","CLASS",")","means","that","all","of","the","values","assigned","by","?","FUNCTION","are","#$subclasses","of","?","CLASS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16498).
lisp_trans(documentation(resultGenl,xtChineseLanguage,s("(","#$rangeSubclass","?","FUNCTION","?","CLASS",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ç","\224\","±","?","FUNCTION","æ","\211\","\200\","æ","\214\","\207\","å","®","\232\","ç","\232\","\204\","å","\200\","¼","ï","¼","\214\","é","\203\","½","æ","\230\","¯","è","¿","\231\","ä","¸","ª","?","CLASS","ç","\232\","\204\","#$subclassã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16660).
lisp_trans(=>(and(resultGenl(FUNCTION,CLASS),equal(uN(uFn,FUNCTION,ROW),VALUE)),genls(VALUE,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16833).
lisp_trans(=>(and(genlPreds(REL1,REL2),resultGenl(REL2,CLASS1)),resultGenl(REL1,CLASS1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':16966).
lisp_trans(=>(and(resultGenl(REL,CLASS1),resultGenl(REL,CLASS2)),or(genls(CLASS1,CLASS2),genls(CLASS2,CLASS1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17082).
lisp_trans(rtBinaryPredicate(valence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17241).
lisp_trans(rtAsymmetricRelation(valence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17276).
lisp_trans(rtSingleValuedRelation(valence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17314).
lisp_trans(argIsa(valence,1,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17354).
lisp_trans(argIsa(valence,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17382).
lisp_trans(documentation(valence,vEnglishLanguage,s("Specifies","the","number","of","arguments","that","a","relation","can","take",".","If","a","relation","does","not","have","a","fixed","number","of","arguments",",","it","does","not","have","a","valence","and","it","is","an","instance","of","#$VariableArityRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17417).
lisp_trans(documentation(valence,xtChineseLanguage,s("æ","\214\","\207\","å","®","\232\","ä","¸","\200\","ä","¸","ªå","\205\","³","ç","³","»","å","\217\","¯","æ","\216\","¥","çº","³","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","æ","\225\","°","ç","\233\","®","ã","\200\","\202\","å","¦","\202\","æ","\236\","\234\","ä","¸","\200\","ä","¸","ªå","\205\","³","ç","³","»","æ","²","¡","æ","\234\","\211\","è","®","¾","å","®","\232\","å","\217\","\202\","æ","\225\","°","æ","\225\","°","ç","\233\","®","ï","¼","\214\","é","\202\","£","ä","¹","\210\","å","®","\203\","å","°","±","æ","²","¡","æ","\234\","\211\","é","\205\","\215\","ä","»","·","ï","¼","\214\","å","®","\203\","ä","¹","\237\","å","°","±","æ","\230\","¯","#$VariableArityRelation","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17654).
lisp_trans(rtTernaryPredicate(documentation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17872).
lisp_trans(argIsa(documentation,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17914).
lisp_trans(argIsa(documentation,2,tHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17946).
lisp_trans(argIsa(documentation,3,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':17985).
lisp_trans(documentation(documentation,vEnglishLanguage,s("A","relation","between","objects","in","the","domain","of","discourse","and","strings","of","natural","language","text","stated","in","a","particular","#$HumanLanguage",".","The","domain","of","#$documentation","is","not","constants","(","names",")",",","but","the","objects","themselves",".","This","means","that","one","does","not","quote","the","names","when","associating","them","with","their","documentation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18025).
lisp_trans(documentation(documentation,xtChineseLanguage,s("å","\234\","¨","è","¯","\235\","è","¯","­","é","¢","\206\","å","\237\","\237\","å","\222\","\214\","è","\207\","ªç","\204\","¶","è","¯","­","è","¨","\200\","ç","\232\","\204\","å","­","\227\","ç","¬","¦","ä","¸","²","ï","¼","\214\","ä","»","¥","æ","\237\","\220\","ç","§","\215\","#$HumanLanguage","æ","\235\","¥","é","\231\","\210\","è","¿","°","ç","\232\","\204\","ç","\211\","©","ä","»","¶","ä","¹","\213\","é","\227\","´","ä","¸","\200\","ç","§","\215\","å","\205\","³","ç","³","»","ã","\200\","\202\","#$documentation","é","¢","\206\","å","\237\","\237\","ä","¸","\215\","æ","\230\","¯","å","¸","¸","é","\207\","\217\","(","å","\220\","\215\","å","­","\227\",")","ï","¼","\214\","è","\200\","\214\","æ","\230\","¯","ç","\211\","©","ä","½","\223\","ç","\232\","\204\","æ","\234\","¬","èº","«","ã","\200\","\202\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","å","\234\","¨","ç","\233\","¸","å","\205\","³","æ","\226\","\207\","æ","¡","£","æ","\217\","\220\","å","\210\","°","è","¯","¥","ç","\211\","©","ä","½","\223\","æ","\227\","¶","ï","¼","\214\","æ","\230\","¯","ä","¸","\215\","ä","¼","\232\","å","¼","\225\","ç","\224\","¨","å","\220\","\215\","å","­","\227\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18383).
lisp_trans(rtTernaryPredicate(formatSumo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18690).
lisp_trans(argIsa(formatSumo,1,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18725).
lisp_trans(argIsa(formatSumo,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18752).
lisp_trans(argIsa(formatSumo,3,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18777).
lisp_trans(documentation(formatSumo,vEnglishLanguage,s("A","relation","that","specifies","how","to","present","an","expression","in","a","natural","language","format",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18810).
lisp_trans(documentation(formatSumo,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","å","\205\","³","ç","³","»","ï","¼","\214\","ç","\224\","¨","äº","\216\","æ","\214\","\207\","å","®","\232\","å","¦","\202\","ä","½","\225\","ä","»","¥","è","\207\","ªç","\204\","¶","è","¯","­","è","¨","\200\","æ","\240\","¼","å","¼","\217\","æ","\235\","¥","ä","»","\213\","ç","»","\215\","è","¡","¨","è","¾","¾","å","¼","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':18936).
lisp_trans(rtTernaryPredicate(termFormat),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19060).
lisp_trans(argIsa(termFormat,1,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19099).
lisp_trans(argIsa(termFormat,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19130).
lisp_trans(argIsa(termFormat,3,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19159).
lisp_trans(documentation(termFormat,vEnglishLanguage,s("A","relation","that","specifies","how","to","present","a","term","in","a","natural","language","format",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19196).
lisp_trans(documentation(termFormat,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","å","\205\","³","ç","³","»","ï","¼","\214\","ç","\224\","¨","äº","\216\","æ","\214\","\207\","å","®","\232\","å","¦","\202\","ä","½","\225\","ä","»","¥","è","\207\","ªç","\204\","¶","è","¯","­","è","¨","\200\","æ","\240\","¼","å","¼","\217\","æ","\235\","¥","ä","»","\213\","ç","»","\215\","ä","¸","\200\","ä","¸","ªæ","\234\","¯","è","¯","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19319).
lisp_trans(rtBinaryPredicate(disjointWith),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19450).
lisp_trans(rtSymmetricRelation(disjointWith),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19486).
lisp_trans(argIsa(disjointWith,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19524).
lisp_trans(argIsa(disjointWith,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19555).
lisp_trans(documentation(disjointWith,vEnglishLanguage,'Classes are #$disjoint only if they share no instances, i.e. just in case the result of applying #$IntersectionFn to them is empty.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19586).
lisp_trans(documentation(disjointWith,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","#$Class","å","\222\","\214\","#$Classä","¹","\213\","é","\227\","´","æ","²","¡","æ","\234\","\211\","å","\205\","±","å","\220\","\214\","æ","¡","\210\","ä","¾","\213\","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","å","®","\203\","ä","»","¬","å","°","±","æ","\230\","¯","#$disjointï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","ä","»","¥","é","\230\","²","ä","¸","\207\","ä","¸","\200\","åº","\224\","ç","\224\","¨","#$IntersectionFn","ç","\232\","\204\","æ","\227\","¶","å","\200\","\231\","å","\207\","ºç","\216\","°","ç","©","ºç","\232\","\204\","ç","\232\","\204\","ç","»","\223\","æ","\236\","\234\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19763).
lisp_trans(=>(disjointWith(CLASS1,CLASS2),all([INST],not(and(isa(INST,CLASS1),isa(INST,CLASS2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':19978).
lisp_trans(rtBinaryPredicate(disjointRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20126).
lisp_trans(rtIrreflexiveRelation(disjointRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20170).
lisp_trans(rtPartialValuedRelation(disjointRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20218).
lisp_trans(argIsa(disjointRelation,1,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20268).
lisp_trans(argIsa(disjointRelation,2,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20305).
lisp_trans(relatedInternalConcept(disjointRelation,disjointWith),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20342).
lisp_trans(documentation(disjointRelation,vEnglishLanguage,s("This","predicate","relates","two","#$Relations",".","(","#$disjointRelation","?","REL1","?","REL2",")","means","that","the","two","relations","have","no","tuples","in","common",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20393).
lisp_trans(documentation(disjointRelation,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\234\","¯","è","¯","­","æ","\212\","\212\","ä","¸","¤","ç","§","\215\","#$Relation","è","¿","\236\","æ","\216\","¥","ã","\200\","\202\","(","#$disjointRelation","?","REL1","?","REL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","æ","\214\","\207\","è","¿","\231\","ä","¸","¤","ç","§","\215\","å","\205\","³","ç","³","»","æ","²","¡","æ","\234\","\211\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","å","\205\","\203\","ç","»","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20572).
lisp_trans(=>(and(argIsa(REL1,NUMBER,CLASS1),argIsa(REL2,NUMBER,CLASS2),disjointWith(CLASS1,CLASS2)),disjointRelation(REL1,REL2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20755).
lisp_trans(=>(and(argGenl(REL1,NUMBER,CLASS1),argGenl(REL2,NUMBER,CLASS2),disjointWith(CLASS1,CLASS2)),disjointRelation(REL1,REL2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':20911).
lisp_trans(=>(and(resultIsa(REL1,CLASS1),resultIsa(REL2,CLASS2),disjointWith(CLASS1,CLASS2)),disjointRelation(REL1,REL2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21083).
lisp_trans(=>(and(resultGenl(REL1,CLASS1),resultGenl(REL2,CLASS2),disjointWith(CLASS1,CLASS2)),disjointRelation(REL1,REL2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21221).
lisp_trans(=>(and(tPred(REL1),tPred(REL2),disjointRelation(REL1,REL2),not(equal(REL1,REL2)),[REL1|ROW2]),not([REL2|ROW2])),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21375).
lisp_trans(tPred(contraryAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21568).
lisp_trans(rtVariableArityRelation(contraryAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21607).
lisp_trans(argIsa(contraryAttribute,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21658).
lisp_trans(documentation(contraryAttribute,vEnglishLanguage,s("A","#$contraryAttribute","is","a","set","of","#$Attributes","such","that","something","can","not","simultaneously","have","more","than","one","of","these","#$Attributes",".","For","example",",","(","#$contraryAttribute","#$Pliable","#$Rigid",")","means","that","nothing","can","be","both","#$Pliable","and","#$Rigid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21697).
lisp_trans(documentation(contraryAttribute,xtChineseLanguage,'contraryAttribute æ\230\¯ä¸\200\ç»\204\ #$Attribute ï¼\214\è\200\\214\æ\237\\220\ä¸\200\ä»¶äº\213\ç\211\©ä¸\215\è\203\½å\220\\214\æ\227\¶æ\213\¥æ\234\\211\è¶\205\è¿\207\ä¸\200\ç§\215\è¿\231\ä¸ªç»\204\é\207\\214\ç\232\\204\ #$Attributesã\200\\202\ ä¸¾ä¾\213\è¯´ï¼\232\ (#$contraryAttribute #$Pliable #$Rigid) æ\214\\207\ç\232\\204\æ\230\¯æ²¡æ\234\\211\ä¸\200\ä»¶ä¸\234\è¥¿æ\230\¯æ\227\¢ #$Pliable å\217\\210\ #$Rigid ç\232\\204\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':21988).
lisp_trans(=>(tN(contraryAttribute,ROW),=>(inList(ELEMENT,uN(vTheListFn,ROW)),vtSumoAttribute(ELEMENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22282).
lisp_trans(=>(and(tN(contraryAttribute,ROW1),identicalListItems(uN(vTheListFn,ROW1),uN(vTheListFn,ROW2))),tN(contraryAttribute,ROW2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22398).
lisp_trans(=>(tN(contraryAttribute,ROW),all([ATTR1,ATTR2],=>(and(equal(ATTR1,vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER1)),equal(ATTR2,vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER2)),not(equal(NUMBER1,NUMBER2))),=>(sumoProperty(OBJ,ATTR1),not(sumoProperty(OBJ,ATTR2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22531).
lisp_trans(tPred(exhaustiveAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22881).
lisp_trans(rtVariableArityRelation(exhaustiveAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22922).
lisp_trans(argGenl(exhaustiveAttribute,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':22975).
lisp_trans(argIsa(exhaustiveAttribute,2,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':23024).
lisp_trans(documentation(exhaustiveAttribute,vEnglishLanguage,s("This","predicate","relates","a","#$Class","to","a","set","of","#$Attributes",",","and","it","means","that","the","elements","of","this","set","exhaust","the","instances","of","the","#$Class",".","For","example",",","(","#$exhaustiveAttribute","#$PhysicalState","#$Solid","#$Fluid","#$Liquid","#$Gas","#$Plasma",")","means","that","there","are","only","five","instances","of","the","class","#$PhysicalState",",","viz",".","#$Solid",",","#$Fluid",",","#$Liquid",",","#$Gas","and","#$Plasma",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':23065).
lisp_trans(documentation(exhaustiveAttribute,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\234\","¯","è","¯","­","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Class","è","\201\","\224\","ç","³","»","å","\210\","°","ä","¸","\200\","ç","»","\204\","#$Attributeï","¼","\214\","å","°","±","æ","\230\","¯","è","¯","´","è","¿","\231\","ä","¸","ªç","»","\204\","ç","\232\","\204\","å","\215\","\225\","å","\205\","\203\","å","·","²","ç","»","\217\","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\","ä","¸","¾","ä","¾","\213\","è","¯","´","ï","¼","\232\","(","#$exhaustiveAttribute","#$PhysicalState","#$Solid","#$Fluid","#$Liquid","#$Gas","#$Plasma",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$PhysicalState","è","¿","\231\","ä","¸","ªç","±","»","å","\210\","«","å","°","±","å","\217\","ªæ","\234\","\211\","#$Solidï","¼","\214\","#$Fluidï","¼","\214\","#$Liquidï","¼","\214\","#$Gas","å","\222\","\214\","#$Plasma","è","¿","\231\","äº","\224\","ä","¸","ªå","®","\236\","ä","¾","\213\","äº","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':23477).
lisp_trans(=>(tN(exhaustiveAttribute,CLASS,ROW),=>(inList(ATTR,uN(vTheListFn,ROW)),vtSumoAttribute(ATTR))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':23881).
lisp_trans(=>(tN(exhaustiveAttribute,CLASS,ROW),all([ATTR1],=>(isa(ATTR1,CLASS),exists([ATTR2],and(inList(ATTR2,uN(vTheListFn,ROW)),equal(ATTR1,ATTR2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24000).
lisp_trans(=>(tN(exhaustiveAttribute,ATTRCLASS,ROW),not(exists([EL],and(isa(EL,ATTRCLASS),not(exists([ATTR,NUMBER],and(equal(EL,ATTR),equal(ATTR,vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER))))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24236).
lisp_trans(tPred(exhaustiveDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24564).
lisp_trans(rtVariableArityRelation(exhaustiveDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24609).
lisp_trans(argIsa(exhaustiveDecomposition,1,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24666).
lisp_trans(argIsa(exhaustiveDecomposition,2,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24707).
lisp_trans(relatedInternalConcept(exhaustiveDecomposition,sumo_partition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24748).
lisp_trans(documentation(exhaustiveDecomposition,vEnglishLanguage,s("An","#$exhaustiveDecomposition","of","a","#$Class","C","is","a","set","of","subclasses","of","C","such","that","every","instance","of","C","is","an","instance","of","one","of","the","subclasses","in","the","set",".","Note",":","this","does","not","necessarily","mean","that","the","elements","of","the","set","are","disjoint","(","see","#$partition","-","a","#$partition","is","a","disjoint","exhaustive","decomposition",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':24807).
lisp_trans(documentation(exhaustiveDecomposition,xtChineseLanguage,s("C","#$Class","ç","\232\","\204\","#$exhaustiveDecomposition","æ","\230\","¯","Cç","\232\","\204\","ä","¸","\200\","ç","»","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","è","\200\","\214\","Cç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","å","°","±","æ","\230\","¯","è","¿","\231\","ä","¸","ªç","»","\204\","å","\206\","\205\","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\","æ","\214\","\211\","ï","¼","\232\","è","¿","\231\","å","¹","¶","ä","¸","\215\","ä","¸","\200\","å","®","\232\","æ","\230\","¯","æ","\204\","\217\","ä","¼","\232\","ç","\235\","\200\","è","¿","\231\","ä","¸","ªç","»","\204\","ç","\232\","\204\","å","\215\","\225\","å","\205\","\203\","é","\203\","½","ä","¸","\215\","ç","\233\","¸","äº","¤","ï","¼","\210\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$partition","-","ä","¸","\200\","ä","¸","ª","#$partition","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","·","²","å","\210\","\227\","ä","¸","¾","å","°","½","ä","¸","\215\","ç","\233\","¸","äº","¤","ç","\232\","\204\","æ","\216\","\217\","ç","©","ºæ","\210\","\220\","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25174).
lisp_trans(=>(tN(exhaustiveDecomposition,ROW),=>(inList(ELEMENT,uN(vTheListFn,ROW)),tSet(ELEMENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25540).
lisp_trans(tPred(disjointDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25658).
lisp_trans(rtVariableArityRelation(disjointDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25701).
lisp_trans(argIsa(disjointDecomposition,1,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25756).
lisp_trans(argIsa(disjointDecomposition,2,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25795).
lisp_trans(relatedInternalConcept(disjointDecomposition,exhaustiveDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25834).
lisp_trans(relatedInternalConcept(disjointDecomposition,disjointWith),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25905).
lisp_trans(documentation(disjointDecomposition,vEnglishLanguage,s("A","#$disjointDecomposition","of","a","#$Class","C","is","a","set","of","subclasses","of","C","that","are","mutually","#$disjoint",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':25961).
lisp_trans(documentation(disjointDecomposition,xtChineseLanguage,s("C","#$Class","ç","\232\","\204\","#$disjointDecomposition","æ","\230\","¯","Cç","\232\","\204\","ä","¸","\200\","ç","»","\204\","ç","\233\","¸","äº","\222\","#$disjoint","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26116).
lisp_trans(=>(tN(disjointDecomposition,ROW),=>(inList(ELEMENT,uN(vTheListFn,ROW)),tSet(ELEMENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26258).
lisp_trans(tPred(sumo_partition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26374).
lisp_trans(rtVariableArityRelation(sumo_partition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26405).
lisp_trans(argIsa(sumo_partition,1,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26448).
lisp_trans(argIsa(sumo_partition,2,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26475).
lisp_trans(documentation(sumo_partition,vEnglishLanguage,s("A","#$partition","of","a","#$Class","C","is","a","set","of","mutually","#$disjoint","classes","(","a","subclass","partition",")","which","covers","C",".","Every","instance","of","C","is","an","instance","of","exactly","one","of","the","subclasses","in","the","partition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26502).
lisp_trans(documentation(sumo_partition,xtChineseLanguage,s("C","#$Class","ç","\232\","\204\","#$partition","æ","\230\","¯","ä","¸","\200\","ç","»","\204\","å","\214\","\205\","æ","\213\","¬","Cï","¼","\214\","è","\200\","\214\","äº","\222\","ä","¸","\215\","#$disjoint","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\210\","ä","¸","\200\","ä","¸","ªå","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","å","\210\","\206\","å","\214\","º",")","ã","\200\","\202\","Cç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","æ","­","£","æ","­","£","æ","\230\","¯","è","¿","\231\","ä","¸","ªå","\210\","\206\","å","\214\","ºå","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26741).
lisp_trans(<=>(tN(sumo_partition,ROW),and(tN(exhaustiveDecomposition,ROW),tN(disjointDecomposition,ROW))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':26962).
lisp_trans(rtBinaryPredicate(relatedInternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27070).
lisp_trans(rtEquivalenceRelation(relatedInternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27120).
lisp_trans(argIsa(relatedInternalConcept,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27174).
lisp_trans(argIsa(relatedInternalConcept,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27215).
lisp_trans(documentation(relatedInternalConcept,vEnglishLanguage,s("Means","that","the","two","arguments","are","related","concepts","within","the","SUMO",",","i",".","e",".","there","is","a","significant","similarity","of","meaning","between","them",".","To","indicate","a","meaning","relation","between","a","SUMO","concept","and","a","concept","from","another","source",",","use","the","Predicate","#$relatedExternalConcept",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27256).
lisp_trans(documentation(relatedInternalConcept,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ä","¸","¤","ä","¸","ªå","\217\","\230\","é","\207\","\217\","å","\234\","¨","SUMOæ","\230\","¯","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","æ","¦","\202\","å","¿","µï","¼","\214\","å","°","±","æ","\230\","¯","è","¯","´","å","®","\203\","ä","»","¬","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","æ","\236\","\201\","ä","¸","ºç","\233\","¸","ä","¼","¼","ã","\200\","\202\","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$relatedExternalConcept","æ","\234\","¯","è","¯","­","ï","¼","\214\","æ","\235\","¥","è","¦","\201\","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ªSUMOæ","¦","\202\","å","¿","µå","\222\","\214\","å","\217\","¦","ä","¸","\200\","ä","¸","ªå","\207\","ºå","¤","\204\","ç","\232\","\204\","æ","¦","\202\","å","¿","µ","å","\234\","¨","å","\220\","«","ä","¹","\211\","ä","¸","\212\","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27578).
lisp_trans(rtTernaryPredicate(relatedExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27861).
lisp_trans(argIsa(relatedExternalConcept,1,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27912).
lisp_trans(argIsa(relatedExternalConcept,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':27961).
lisp_trans(argIsa(relatedExternalConcept,3,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28002).
lisp_trans(relatedInternalConcept(relatedExternalConcept,relatedInternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28045).
lisp_trans(documentation(relatedExternalConcept,vEnglishLanguage,s("Used","to","signify","a","three","-","place","relation","between","a","concept","in","an","external","knowledge","source",",","a","concept","in","the","SUMO",",","and","the","name","of","the","other","knowledge","source",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28116).
lisp_trans(documentation(relatedExternalConcept,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ªæ","¦","\202\","å","¿","µè","\201\","\224\","ç","³","»","ç","\232\","\204\","ä","¸","\211\","é","\207\","\215\","å","\205\","³","ç","³","»","ï","¼","\232\","æ","¦","\202\","å","¿","µç","\232\","\204\","å","¤","\226\","é","\203\","¨","ç","\237\","¥","è","¯","\206\","æ","\235\","¥","æº","\220\","ã","\200\","\201\","SUMOæ","¦","\202\","å","¿","µå","\222\","\214\","å","®","\203\","å","¤","\226\","é","\203\","¨","ç","\237\","¥","è","¯","\206\","æ","\235\","¥","æº","\220\","ç","\232\","\204\","å","\220\","\215\","å","­","\227\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28330).
lisp_trans(genlPreds(synonymousExternalConcept,relatedExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28521).
lisp_trans(disjointRelation(synonymousExternalConcept,subsumedExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28584).
lisp_trans(disjointRelation(synonymousExternalConcept,subsumingExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28653).
lisp_trans(disjointRelation(subsumedExternalConcept,subsumingExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28723).
lisp_trans(documentation(synonymousExternalConcept,vEnglishLanguage,s("(","#$synonymousExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","means","that","the","SUMO","concept","?","THING","has","the","same","meaning","as","?","STRING","in","?","LANGUAGE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28791).
lisp_trans(documentation(synonymousExternalConcept,xtChineseLanguage,s("(","#$synonymousExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","SUMOæ","¦","\202\","å","¿","µ","?","THING","å","\222\","\214\","æ","¦","\202\","å","¿","µ","?","STRING","å","\234\","¨","è","¯","­","è","¨","\200\","?","LANGUAGE","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':28987).
lisp_trans(genlPreds(subsumingExternalConcept,relatedExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':29197).
lisp_trans(documentation(subsumingExternalConcept,vEnglishLanguage,s("(","#$subsumingExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","means","that","the","SUMO","concept","?","THING","subsumes","the","meaning","of","?","STRING","in","?","LANGUAGE",",","i",".","e",".","the","concept","?","THING","is","broader","in","meaning","than","?","STRING",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':29259).
lisp_trans(documentation(subsumingExternalConcept,xtChineseLanguage,s("(","#$subsumingExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","SUMOæ","¦","\202\","å","¿","µ","?","THING","å","\214\","\205\","å","\220\","«","äº","\206\","æ","¦","\202\","å","¿","µ","?","STRING","å","\234\","¨","è","¯","­","è","¨","\200\","?","LANGUAGE","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","æ","¦","\202\","å","¿","µ","?","THING","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","æ","¯","\224\","?","STRING","è","¦","\201\","å","¹","¿","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':29513).
lisp_trans(genlPreds(subsumedExternalConcept,relatedExternalConcept),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':29771).
lisp_trans(documentation(subsumedExternalConcept,vEnglishLanguage,s("(","#$subsumedExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","means","that","the","SUMO","concept","?","THING","is","subsumed","by","the","meaning","of","?","STRING","in","?","LANGUAGE",",","i",".","e",".","the","concept","?","THING","is","narrower","in","meaning","than","?","STRING",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':29832).
lisp_trans(documentation(subsumedExternalConcept,xtChineseLanguage,s("(","#$subsumedExternalConcept","?","STRING","?","THING","?","LANGUAGE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","SUMOæ","¦","\202\","å","¿","µ","?","THING","è","¢","«","çº","³","å","\205\","¥","æ","¦","\202\","å","¿","µ","?","STRING","å","\234\","¨","è","¯","­","è","¨","\200\","?","LANGUAGE","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","æ","¦","\202\","å","¿","µ","?","THING","ç","\232\","\204\","å","\220\","«","ä","¹","\211\","æ","¯","\224\","?","STRING","è","¦","\201\","çª","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30091).
lisp_trans(rtBinaryPredicate(externalImage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30347).
lisp_trans(documentation(externalImage,vEnglishLanguage,s("A","link","between","an","Entity","and","a","URL","that","represents","or","exemplifies","the","term","in","some","way",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30388).
lisp_trans(documentation(externalImage,xtChineseLanguage,s("è","\201\","\224\","ç","³","»","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","½","\223\","å","\222\","\214\","å","\234\","¨","æ","\237\","\220\","æ","\226\","¹","é","\235\","¢","ä","»","£","è","¡","¨","æ","\210\","\226\","ä","¸","¾","ä","¾","\213\","è","¯","\201\","æ","\230\","\216\","è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µç","\232\","\204\","ç","½","\221\","å","\235\","\200\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30524).
lisp_trans(argIsa(externalImage,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30651).
lisp_trans(argIsa(externalImage,2,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30683).
lisp_trans(rtBinaryPredicate(subAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30724).
lisp_trans(rtPartialOrderingRelation(subAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30764).
lisp_trans(argIsa(subAttribute,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30812).
lisp_trans(argIsa(subAttribute,2,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30846).
lisp_trans(disjointRelation(subAttribute,successorAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30880).
lisp_trans(documentation(subAttribute,vEnglishLanguage,s("Means","that","the","second","argument","can","be","ascribed","to","everything","which","has","the","first","argument","ascribed","to","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':30931).
lisp_trans(documentation(subAttribute,xtChineseLanguage,s("è","¿","\231\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","¬","¬","äº","\214\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","å","±","\236\","æ","\200\","§","å","\217\","¯","ä","»","¥","å","½","\222\","å","\233\","\240\","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","ç","¬","¬","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","æ","\211\","\200\","å","½","\222\","å","\233\","\240\","ç","\232\","\204\","å","±","\236\","æ","\200\","§","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31084).
lisp_trans(=>(subAttribute(ATTR1,ATTR2),all([OBJ],=>(sumoProperty(OBJ,ATTR1),sumoProperty(OBJ,ATTR2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31227).
lisp_trans(=>(and(subAttribute(ATTR1,ATTR2),isa(ATTR2,CLASS)),isa(ATTR1,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31359).
lisp_trans(rtBinaryPredicate(successorAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31468).
lisp_trans(rtAsymmetricRelation(successorAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31514).
lisp_trans(argIsa(successorAttribute,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31563).
lisp_trans(argIsa(successorAttribute,2,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31603).
lisp_trans(documentation(successorAttribute,vEnglishLanguage,s("(","#$successorAttribute","?","ATTR1","?","ATTR2",")","means","that","?","ATTR2","is","the","#$Attribute","that","comes","immediately","after","?","ATTR1","on","the","scale","that","they","share",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31643).
lisp_trans(documentation(successorAttribute,xtChineseLanguage,s("(","#$successorAttribute","?","ATTR1","?","ATTR2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","å","®","\203\","ä","»","¬","å","\205\","±","å","\220\","\214\","æ","\234\","\211\","ç","\232\","\204\","å","°","ºåº","¦","ä","¸","\212\","#$Attribute","?","ATTR2","æ","\230\","¯","ç","´","§","æ","\216\","¥","ç","\235\","\200\","?","ATTR1ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':31836).
lisp_trans(=>(and(successorAttribute(ATTR1,ATTR2),holdsDuring(TIME1,sumoProperty(ENTITY,ATTR2))),exists([TIME2],and(temporalPart(TIME2,tColOfPastFn(TIME1)),holdsDuring(TIME2,sumoProperty(ENTITY,ATTR1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32012).
lisp_trans(rtBinaryPredicate(successorAttributeClosure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32257).
lisp_trans(rtTransitiveRelation(successorAttributeClosure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32310).
lisp_trans(rtIrreflexiveRelation(successorAttributeClosure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32366).
lisp_trans(rtPartialValuedRelation(successorAttributeClosure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32423).
lisp_trans(argIsa(successorAttributeClosure,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32482).
lisp_trans(argIsa(successorAttributeClosure,2,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32529).
lisp_trans(relatedInternalConcept(successorAttributeClosure,successorAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32576).
lisp_trans(documentation(successorAttributeClosure,vEnglishLanguage,s("The","transitive","closure","of","#$successorAttribute",".","(","#$successorAttributeClosure","?","ATTR1","?","ATTR2",")","means","that","there","is","a","chain","of","#$successorAttribute","assertions","connecting","?","ATTR1","and","?","ATTR2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32646).
lisp_trans(documentation(successorAttributeClosure,xtChineseLanguage,'successorAttribute ç\232\\204\ ä¼\240\é\200\\222\é\227\­å\214\\205\ï¼\233\(#$successorAttributeClosure ?ATTR1 ?ATTR2) ç\232\\204\æ\204\\217\æ\200\\235\æ\230\¯ #$successorAttribute æ\234\\211\ä¸\200\è¿\236\ä¸² è\201\\224\ç³»ç\235\\200\ ?ATTR1 å\222\\214\ ?ATTR2 ç\232\\204\æ\226\­è¨\200\ã\200\\202\ '),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':32892).
lisp_trans(=>(successorAttribute(ATTR1,ATTR2),successorAttributeClosure(ATTR1,ATTR2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33126).
lisp_trans(rtTernaryPredicate(greaterThanByQuality),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33215).
lisp_trans(documentation(greaterThanByQuality,vEnglishLanguage,s("(","greaterThanByQuality","?","ENTITY1","?","ENTITY2","?","ATT",")","means","that","?","ENTITY1","has","more","of","the","given","quality","?","ATT","than","?","ENTITY2")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33264).
lisp_trans(documentation(greaterThanByQuality,xtChineseLanguage,s("(","greaterThanByQuality","?","ENTITY1","?","ENTITY2","?","ATT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","ENTITY1","æ","\227\","¢","å","®","\232\","ç","\232\","\204\","?","ATT","é","\207\","\217\","æ","¯","\224\","?","ENTITY2","ç","\232\","\204\","å","¤","\232\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33434).
lisp_trans(argIsa(greaterThanByQuality,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33599).
lisp_trans(argIsa(greaterThanByQuality,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33638).
lisp_trans(argIsa(greaterThanByQuality,3,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33677).
lisp_trans(=>(and(greaterThanByQuality(E1,E2,ATT),greaterThanByQuality(E2,E3,ATT)),greaterThanByQuality(E1,E3,ATT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33720).
lisp_trans(=>(greaterThanByQuality(E1,E2,ATT),not(greaterThanByQuality(E2,E1,ATT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33852).
lisp_trans(=>(greaterThanByQuality(E1,E2,ATT),not(equal(E2,E1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':33945).
lisp_trans(rtBinaryPredicate(entails),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34017).
lisp_trans(argIsa(entails,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34052).
lisp_trans(argIsa(entails,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34079).
lisp_trans(documentation(entails,vEnglishLanguage,s("The","operator","of","logical","entailment",".","(","#$entails","?","FORMULA1","?","FORMULA2",")","means","that","?","FORMULA2","can","be","derived","from","?","FORMULA1","by","means","of","the","proof","theory","of","SUO-KIF",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34106).
lisp_trans(documentation(entails,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","é","\200\","»","è","¾","\221\","è","\225\","´","æ","¶","µç","\232\","\204\","è","¿","\220\","ç","®","\227\","ç","¬","¦","ã","\200\","\202\","(","#$entails","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","FORMULA2","å","\217\","¯","ä","»","¥","é","\200\","\232\","è","¿","\207\","SUO","-","KIFç","\232\","\204\","è","¯","\201\","æ","\230\","\216\","ç","\220\","\206\","è","®","ºä","»","\216\","?","FORMULA1","å","¾","\227\","å","\207\","ºæ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34309).
lisp_trans(tFunction(uFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34674).
lisp_trans(rtVariableArityRelation(uFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34707).
lisp_trans(argIsa(uFn,1,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34753).
lisp_trans(argIsa(uFn,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34786).
lisp_trans(resultIsa(uFn,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34817).
lisp_trans(documentation(uFn,vEnglishLanguage,s("If","F","is","a","#$Function","with","a","value","for","the","objects","denoted","by","N1",",",".",".",".",",","NK",",","then","(","#$AssignmentFn","F","N1",".",".",".","NK",")","is","the","value","of","applying","F","to","the","objects","denoted","by","N1",",",".",".",".",",","NK",".","Otherwise",",","the","value","is","undefined",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':34845).
lisp_trans(documentation(uFn,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","Fæ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Functionï","¼","\214\","å","®","\203\","æ","\211\","\200\","ä","»","£","è","¡","¨","ç","\211\","©","ä","½","\223\","ç","\232\","\204\","å","\200\","¼","ä","»","¥","N1ï","¼","\214\",".",".",".","ï","¼","\214\","NKè","¡","¨","ç","¤","ºï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$AssignmentFn","F","N1",".",".",".","NK",")","å","°","±","æ","\230\","¯","åº","\224\","ç","\224\","¨","Få","\210\","°","è","¿","\231\","äº","\233\","ç","\211\","©","ä","½","\223\","ä","»","¥","N1",",",".",".",".",",","NKæ","\211\","\200\","ä","»","£","è","¡","¨","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\","å","\234\","¨","å","\205\","¶","ä","»","\226\","æ","\203\","\205\","å","\206\","µä","¸","\213\","ï","¼","\214\","è","¿","\231\","ä","¸","ªå","\200\","¼","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","è","¢","«","ä","¸","\213\","å","®","\232\","ä","¹","\211\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35100).
lisp_trans(rtUnaryFunction(tSetOfPowerSetFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35383).
lisp_trans(rtTotalValuedRelation(tSetOfPowerSetFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35419).
lisp_trans(argIsa(tSetOfPowerSetFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35461).
lisp_trans(resultGenl(tSetOfPowerSetFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35494).
lisp_trans(documentation(tSetOfPowerSetFn,vEnglishLanguage,s("(","#$PowerSetFn","?","CLASS",")","maps","the","#$SetOrClass","?","CLASS","to","the","#$SetOrClass","of","all","#$subclasses","of","?","CLASS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35532).
lisp_trans(documentation(tSetOfPowerSetFn,xtChineseLanguage,s("(","#$PowerSetFn","?","CLASS",")","æ","\212\","\212\","#$SetOrClass","?","CLASS","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","#$subclassï","¼","\214\","é","\203\","½","çº","³","å","\205\","¥","#$SetOrClassç","\232\","\204\","?","CLASSä","¸","\212\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':35679).
lisp_trans(sumo_partition(tThing,tSumoPhysical,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36089).
lisp_trans(documentation(tThing,vEnglishLanguage,s("The","universal","class","of","individuals",".","This","is","the","root","node","of","the","ontology",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36126).
lisp_trans(exists([THING],tThing(THING)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36406).
lisp_trans(<=>(tSet(CLASS),genls(CLASS,tThing)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36452).
lisp_trans(genls(tSumoPhysical,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36512).
lisp_trans(sumo_partition(tSumoPhysical,tSumoObject,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36539).
lisp_trans(documentation(tSumoPhysical,vEnglishLanguage,s("An","entity","that","has","a","location","in","space","-","time",".","Note","that","locations","are","themselves","understood","to","have","a","location","in","space","-","time",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36575).
lisp_trans(documentation(tSumoPhysical,xtChineseLanguage,s("å","­","\230\","å","\234\","¨","æ","\227\","¶","ç","©","ºä","¸","­","æ","\237\","\220\","ä","½","\215\","ç","½","®","ç","\232\","\204\","ä","¸","ªä","½","\223\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","½","\215\","ç","½","®","æ","\234\","¬","èº","«","åº","\224\","ç","\220\","\206\","è","§","£","ä","¸","ºï","¼","\214\","å","­","\230\","å","\234\","¨","äº","\216\","æ","\237\","\220\","ä","¸","ªæ","\227\","¶","ç","©","º","ç","\232\","\204\","ä","½","\215\","ç","½","®","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36743).
lisp_trans(=>(tSumoPhysical(PHYS),exists([LOC,TIME],and(located(PHYS,LOC),time(PHYS,TIME)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':36891).
lisp_trans(genls(tSumoObject,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37011).
lisp_trans(documentation(tSumoObject,vEnglishLanguage,s("Corresponds","roughly","to","the","class","of","ordinary","objects",".","Examples","include","normal","physical","objects",",","geographical","regions",",","and","locations","of","#$Processes",",","the","complement","of","#$Objects","in","the","#$Physical","class",".","In","a","4","D","ontology",",","an","#$Object","is","something","whose","spatiotemporal","extent","is","thought","of","as","dividing","into","spatial","parts","roughly","parallel","to","the","time","-","axis",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37038).
lisp_trans(documentation(tSumoObject,xtChineseLanguage,s("è","¿","\231\","å","\217\","¯","ç","²","\227\","ç","\225\","¥","å","\234\","°","å","¯","¹","åº","\224\","ä","¸","ºä","¸","\200\","è","\210\","¬","ç","\211\","©","ä","½","\223\","ã","\200\","\202\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","æ","­","£","å","¸","¸","ç","\211\","©","ç","\220\","\206\","å","¯","¹","è","±","¡","ã","\200\","\201\","å","\234\","°","ç","\220\","\206\","å","\214\","ºå","\237\","\237\","å","\222\","\214\","#$Process","ç","\232\","\204\","ä","½","\215\","ç","½","®","ï","¼","\214\","å","\234\","¨","#$Physical","ç","±","»","å","\210\","«","#$Object","ç","\232\","\204\","è","¡","¥","å","\205\","\205\","ã","\200\","\202\","å","\234\","¨","å","\233\","\233\","ç","»","´","æ","\234\","¬","ä","½","\223\","è","®","ºä","¸","\212\","ï","¼","\214\","#$Object","ç","\232\","\204\","æ","\227\","¶","ç","©","ºè","\214\","\203\","ç","\225\","´","å","\217\","¯","å","¤","§","è","\207\","´","å","\210\","\222\","å","\210\","\206\","ä","¸","ºä","¸","\216\","æ","\227\","¶","é","\227\","´","è","½","´","å","¹","³","è","¡","\214\","ç","\232\","\204\","ç","©","ºé","\227\","´","é","\227\","´","é","\232\","\224\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37433).
lisp_trans(genls(tSumoSelfConnectedObject,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37735).
lisp_trans(documentation(tSumoSelfConnectedObject,vEnglishLanguage,s("A","#$SelfConnectedObject","is","any","#$Object","that","does","not","consist","of","two","or","more","disconnected","parts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37773).
lisp_trans(documentation(tSumoSelfConnectedObject,xtChineseLanguage,s("#$SelfConnectedObject","æ","\230\","¯","ä","»","»","ä","½","\225\","å","¹","¶","é","\235\","\236\","ç","\224\","±","ä","¸","¤","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","ä","¸","\215\","ç","\233\","¸","è","¿","\236\","é","\203\","¨","å","\210\","\206\","æ","\211\","\200\","ç","»","\204\","æ","\210\","\220\","ç","\232\","\204\","#$Objectã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':37924).
lisp_trans(genls(actOrganicThing,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38075).
lisp_trans(documentation(actOrganicThing,vEnglishLanguage,s("A","#$SelfConnectedObject","that","is","produced","by","a","non","-","intentional","process","from","an","#$Organism",".","Note","that","this","refers","only","to","the","primary","cause",".","That","is",",","a","#$PlantAgriculturalProduct","is","firstly","produced","by","a","#$Plant",",","and","only","secondarily","by","a","#$Human","that","is","tending","the","plant",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38119).
lisp_trans(documentation(actOrganicThing,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","»","\216\","#$Organism","é","\200\","\232\","è","¿","\207\","é","\235\","\236\","å","\210\","»","æ","\204\","\217\","è","¿","\207\","ç","¨","\213\","æ","\211\","\200\","äº","§","ç","\224\","\237\","ç","\232\","\204\","#$SelfConnectedObjectã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","é","\207\","\214\","æ","\214\","\207\","å","\217\","ªæ","\230\","¯","ä","¸","»","è","¦","\201\","å","\216\","\237\","å","\233\","\240\","ï","¼","\214\","å","°","±","æ","\230\","¯","è","¯","´","#$PlantAgriculturalProduct","é","¦","\226\","å","\205\","\210\","ä","»","\216\","#$Plant","ç","\224\","\237\","é","\225\","¿","å","\207\","ºæ","\235\","¥","ï","¼","\214\","æ","¬","¡","è","¦","\201\","æ","\211\","\215\","ç","\224\","±","#$Human","äº","§","ç","\224\","\237\","ï","¼","\214\","çº","¦","å","°","±","æ","\230\","¯","è","\200\","\225\","ç","§","\215\","æ","¤","\215\","ç","\211\","©","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38440).
lisp_trans(rtSpatialRelation(uFrontFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38734).
lisp_trans(rtPartialValuedRelation(uFrontFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38769).
lisp_trans(rtUnaryFunction(uFrontFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38810).
lisp_trans(rtAsymmetricRelation(uFrontFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38843).
lisp_trans(rtIrreflexiveRelation(uFrontFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38881).
lisp_trans(argIsa(uFrontFn,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38920).
lisp_trans(resultIsa(uFrontFn,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38959).
lisp_trans(documentation(uFrontFn,vEnglishLanguage,s("A","#$Function","that","maps","an","#$Object","to","the","side","that","generally","receives","the","most","attention","or","that","typically","faces","the","direction","in","which","the","#$Object","moves",".","Note","that","this","is","a","partial","function",",","since","some","#$Objects","do","not","have","sides",",","e",".","g",".","apples","and","spheres",".","Note","too","that","the","#$range","of","this","#$Function","is","indefinite","in","much","the","way","that","#$ImmediateFutureFn","and","#$ImmediatePastFn","are","indefinite",".","Although","this","indefiniteness","is","undesirable","from","a","theoretical","standpoint",",","it","does","not","have","significant","practical","implications",",","since","there","is","widespread","intersubjective","agreement","about","the","most","common","cases",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':38995).
lisp_trans(documentation(uFrontFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Function","ï","¼","\214\","å","®","\203\","è","\203\","½","æ","\212\","\212\","#$Object","è","½","¬","å","\210\","°","ä","¸","\200\","è","\210\","¬","è","\203\","½","å","¤","\237\","å","¾","\227\","å","\210\","°","æ","\234\","\200\","å","¤","§","ç","¨","\213\","åº","¦","å","\205\","³","æ","³","¨","æ","\210\","\226\","è","\200\","\205\","è","¯","´","é","\200\","\232\","å","¸","¸","æ","\230\","¯","é","\235\","¢","å","¯","¹","è","¯","¥","#$Object","ç","§","»","å","\212\","¨","ç","\232\","\204\","æ","\226\","¹","å","\220\","\221\","ç","\232\","\204\","é","\202\","£","ä","¸","\200\","é","\235\","¢","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ï","¼","\214\","å","\233\","\240\","ä","¸","ºæ","\234\","\211\","ä","¸","\200\","äº","\233\","#$Object","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","ä","¾","§","é","\235\","¢","ç","\232\","\204\","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","è","\213\","¹","æ","\236\","\234\","å","\222\","\214\","ç","\220\","\203\","ä","½","\223\","ã","\200\","\202\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","è","¿","\231\","ä","¸","ª","#$Function","ç","\232\","\204\","#$range","æ","\230\","¯","æ","\227\","\240\","é","\231\","\220\","ç","\232\","\204\","ï","¼","\214\","å","°","±","å","\203\","\217\","#$ImmediateFutureFn","å","\222\","\214\","#$ImmediatePastFn","ä","¸","\200\","æ","\240\","·","ä","¹","\237\","æ","\230\","¯","æ","\227\","\240\","é","\231\","\220\","ç","\232\","\204\","ã","\200\","\202\","ä","»","\216\","ç","\220\","\206\","è","®","ºç","\232\","\204\","è","§","\202\","ç","\202\","¹","æ","\235\","¥","è","¯","´","ï","¼","\214\","è","\231\","½","ç","\204\","¶","è","¿","\231\","ä","¸","ªæ","\227\","\240\","é","\231\","\220\","æ","\200\","§","å","¹","¶","ä","¸","\215\","ç","\220\","\206\","æ","\203\","³","ï","¼","\214\","ä","½","\206\","å","®","\203\","æ","²","¡","æ","\234\","\211\","å","¤","ªå","¤","§","ç","\232\","\204\","å","®","\236\","é","\231\","\205\","å","½","±","å","\223\","\215\","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","\234\","¨","å","\205\","±","å","\220\","\214\","æ","\204\","\217\","æ","\200\","\235\","é","\227\","´","å","¯","¹","äº","\216\","æ","\234\","\200\","å","¸","¸","è","§","\201\","ç","\232\","\204\","æ","\203\","\205\","å","\206\","µå","·","²","ç","»","\217\","è","¾","¾","æ","\210\","\220\","å","¹","¿","æ","³","\233\","ç","\232\","\204\","å","\205\","±","è","¯","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':39646).
lisp_trans(=>(tSumoSelfConnectedObject(OBJ),side(uFrontFn(OBJ),OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40258).
lisp_trans(rtSpatialRelation(uBackFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40333).
lisp_trans(rtPartialValuedRelation(uBackFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40367).
lisp_trans(rtUnaryFunction(uBackFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40407).
lisp_trans(rtAsymmetricRelation(uBackFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40439).
lisp_trans(rtIrreflexiveRelation(uBackFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40476).
lisp_trans(argIsa(uBackFn,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40514).
lisp_trans(resultIsa(uBackFn,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40552).
lisp_trans(documentation(uBackFn,vEnglishLanguage,s("A","#$Function","that","maps","an","#$Object","to","the","side","that","is","opposite","the","#$FrontFn","of","the","#$Object",".","Note","that","this","is","a","partial","function",",","since","some","#$Objects","do","not","have","sides",",","e",".","g",".","apples","and","spheres",".","Note","too","that","the","#$range","of","this","#$Function","is","indefinite","in","much","the","way","that","#$ImmediateFutureFn","and","#$ImmediatePastFn","are","indefinite",".","Although","this","indefiniteness","is","undesirable","from","a","theoretical","standpoint",",","it","does","not","have","significant","practical","implications",",","since","there","is","widespread","intersubjective","agreement","about","the","most","common","cases",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':40587).
lisp_trans(documentation(uBackFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Function","æ","\212\","\212\","#$Object","è","½","¬","å","\210\","°","ä","¸","\216\","è","¿","\231\","ä","¸","ª","#$Object","ç","\232\","\204\","#$FrontFn","ç","\233\","¸","å","\217\","\215\","ç","\232\","\204\","é","\202\","£","é","\235\","¢","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ï","¼","\214\","å","\233\","\240\","ä","¸","ºæ","\234\","\211\","ä","¸","\200\","äº","\233\","#$Object","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","ä","¾","§","é","\235\","¢","ç","\232\","\204\","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","è","\213\","¹","æ","\236\","\234\","å","\222\","\214\","ç","\220\","\203\","ä","½","\223\","ã","\200\","\202\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","è","¿","\231\","ä","¸","ª","#$Function","ç","\232\","\204\","#$range","æ","\230\","¯","æ","\227\","\240\","é","\231\","\220\","ç","\232\","\204\","ï","¼","\214\","å","°","±","å","\203\","\217\","#$ImmediateFutureFn","å","\222\","\214\","#$ImmediatePastFn","ä","¸","\200\","æ","\240\","·","ä","¹","\237\","æ","\230\","¯","æ","\227\","\240\","é","\231\","\220\","ç","\232\","\204\","ã","\200\","\202\","ä","»","\216\","ç","\220\","\206\","è","®","ºç","\232\","\204\","è","§","\202\","ç","\202\","¹","æ","\235\","¥","è","¯","´","ï","¼","\214\","è","\231\","½","ç","\204\","¶","è","¿","\231\","ä","¸","ªæ","\227\","\240\","é","\231\","\220\","æ","\200\","§","å","¹","¶","ä","¸","\215\","ç","\220\","\206\","æ","\203\","³","ï","¼","\214\","ä","½","\206\","å","®","\203\","æ","²","¡","æ","\234\","\211\","å","¤","ªå","¤","§","ç","\232\","\204\","å","®","\236\","é","\231\","\205\","å","½","±","å","\223\","\215\","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","\234\","¨","å","\205\","±","å","\220\","\214\","æ","\204\","\217\","æ","\200\","\235\","é","\227\","´","å","¯","¹","äº","\216\","æ","\234\","\200\","å","¸","¸","è","§","\201\","ç","\232\","\204\","æ","\203\","\205\","å","\206\","µå","·","²","ç","»","\217\","è","¾","¾","æ","\210\","\220\","å","¹","¿","æ","³","\233\","ç","\232\","\204\","å","\205\","±","è","¯","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41175).
lisp_trans(=>(tSumoSelfConnectedObject(OBJ),side(uBackFn(OBJ),OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41722).
lisp_trans(rtSpatialRelation(part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41796).
lisp_trans(rtPartialOrderingRelation(part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41828).
lisp_trans(argIsa(part,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41868).
lisp_trans(argIsa(part,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41891).
lisp_trans(documentation(part,vEnglishLanguage,s("The","basic","mereological","relation",".","All","other","mereological","relations","are","defined","in","terms","of","this","one",".","(","#$part","?","PART","?","WHOLE",")","simply","means","that","the","#$Object","?","PART","is","part","of","the","#$Object","?","WHOLE",".","Note","that",",","since","#$part","is","a","#$ReflexiveRelation",",","every","#$Object","is","a","part","of","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':41914).
lisp_trans(documentation(part,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\237\","ºæ","\234\","¬","ç","\232\","\204\","é","\200\","»","è","¾","\221\","å","\210\","\206\","ä","½","\223\","å","\205\","³","ç","³","»","ã","\200\","\202\","å","\205\","¶","ä","»","\226\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","é","\200\","»","è","¾","\221\","å","\210\","\206\","ä","½","\223\","å","\205\","³","ç","³","»","é","\203\","½","æ","\230\","¯","æ","\240\","¹","æ","\215\","®","å","®","\203\","æ","\235\","¥","ä","¸","\213\","å","®","\232\","ä","¹","\211\","ç","\232\","\204\","ã","\200\","\202\","(","#$part","?","PART","?","WHOLE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","å","°","±","æ","\230\","¯","#$Object","?","PART","æ","\230\","¯","#$Object","?","WHOLE","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","å","\233\","\240\","ä","¸","º","#$part","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$ReflexiveRelationï","¼","\214\","æ","\211\","\200\","ä","»","¥","æ","¯","\217\","ä","¸","ª","#$Object","é","\203\","½","æ","\230\","¯","å","®","\203\","è","\207\","ªå","·","±","æ","\234\","¬","èº","«","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42232).
lisp_trans(rtAsymmetricRelation(properPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42581).
lisp_trans(rtTransitiveRelation(properPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42622).
lisp_trans(genlPreds(properPart,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42663).
lisp_trans(documentation(properPart,vEnglishLanguage,s("(","#$properPart","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","a","part","of","?","OBJ2","other","than","?","OBJ2","itself",".","This","is","a","#$TransitiveRelation","and","#$AsymmetricRelation","(","hence","an","#$IrreflexiveRelation",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42693).
lisp_trans(documentation(properPart,xtChineseLanguage,s("(","#$properPart","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","é","\231\","¤","äº","\206\","?","OBJ2","æ","\234\","¬","èº","«","?","OBJ1","æ","\230\","¯","?","OBJ2","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TransitiveRelation","å","\222\","\214\","#$AsymmetricRelation","(","å","\233\","\240\","æ","­","¤","ä","¹","\237\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$IrreflexiveRelation",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':42916).
lisp_trans(<=>(properPart(OBJ1,OBJ2),and(part(OBJ1,OBJ2),not(part(OBJ2,OBJ1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43158).
lisp_trans(genlPreds(piece,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43267).
lisp_trans(argIsa(piece,1,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43292).
lisp_trans(argIsa(piece,2,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43319).
lisp_trans(documentation(piece,vEnglishLanguage,s("A","specialized","common","sense","notion","of","part","for","arbitrary","parts","of","#$Substances",".","Quasi","-","synonyms","are",":","chunk",",","hunk",",","bit",",","etc",".","Compare","#$component",",","another","subrelation","of","#$part",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43346).
lisp_trans(documentation(piece,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¯","¹","#$Substance","æ","\237\","\220\","äº","\233\","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªä","¸","\223\","ä","¸","\232\","å","¸","¸","è","¯","\206\","æ","¦","\202\","å","¿","µã","\200\","\202\","ç","±","»","ä","¼","¼","ç","\232\","\204\","å","\220\","\214\","æ","\204\","\217\","è","¯","\215\","æ","\234\","\211\","ï","¼","\232\","å","\235\","\227\","ã","\200\","\201\","å","¤","§","å","\235\","\227\","ã","\200\","\201\","å","°","\217\","å","\235\","\227\","ç","­","\211\","ã","\200\","\202\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","æ","¯","\224\","è","¾","\203\","#$part","ç","\232\","\204\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªå","­","\220\","å","\205\","³","ç","³","»","#$component","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43562).
lisp_trans(=>(piece(SUBSTANCE1,SUBSTANCE2),all([CLASS],=>(isa(SUBSTANCE1,CLASS),isa(SUBSTANCE2,CLASS)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43783).
lisp_trans(genlPreds(component,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43934).
lisp_trans(argIsa(component,1,tSumoCorpuscularObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':43963).
lisp_trans(argIsa(component,2,tSumoCorpuscularObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44002).
lisp_trans(documentation(component,vEnglishLanguage,s("A","specialized","common","sense","notion","of","part","for","heterogeneous","parts","of","complexes",".","(","#$component","?","COMPONENT","?","WHOLE",")","means","that","?","COMPONENT","is","a","component","of","?","WHOLE",".","Examples","of","component","include","the","doors","and","walls","of","a","house",",","the","states","or","provinces","of","a","country",",","or","the","limbs","and","organs","of","an","animal",".","Compare","#$piece",",","which","is","also","a","subrelation","of","#$part",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44041).
lisp_trans(documentation(component,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¯","¹","å","¤","\215\","å","\220\","\210\","ç","\211\","©","å","\220\","\204\","ä","¸","ªä","¸","\215\","å","\220\","\214\","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªä","¸","\223\","ä","¸","\232\","å","¸","¸","è","¯","\206\","æ","¦","\202\","å","¿","µã","\200\","\202\","(","#$component","?","COMPONENT","?","WHOLE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","COMPONENT","æ","\230\","¯","?","WHOLE","ç","\232\","\204\","ç","»","\204\","ä","»","¶","ã","\200\","\202\","ç","»","\204\","ä","»","¶","ç","\232\","\204\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","æ","\210\","¿","å","­","\220\","ç","\232\","\204\","é","\227\","¨","å","\222\","\214\","å","¢","\231\","å","£","\201\","ã","\200\","\201\","å","\233\","½","å","®","¶","ç","\232\","\204\","å","·","\236\","æ","\210\","\226\","ç","\234\","\201\","ï","¼","\214\","ä","¸","\216\","å","\212\","¨","ç","\211\","©","ç","\232\","\204\","å","\233\","\233\","è","\202\","¢","å","\222\","\214\","å","\231\","¨","å","®","\230\","ã","\200\","\202\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","æ","¯","\224\","è","¾","\203\","#$part","ç","\232\","\204\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªå","­","\220\","å","\205\","³","ç","³","»","#$pieceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44440).
lisp_trans(rtBinaryPredicate(material),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44789).
lisp_trans(argGenl(material,1,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44825).
lisp_trans(argIsa(material,2,tSumoCorpuscularObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44863).
lisp_trans(documentation(material,vEnglishLanguage,s("(","#$material","?","SUBSTANCE","?","OBJECT",")","means","that","?","OBJECT","is","structurally","made","up","in","part","of","?","SUBSTANCE",".","This","relation","encompasses","the","concepts","of","'","composed","of","'",",","'","made","of","'",",","and","'","formed","of","'",".","For","example",",","plastic","is","a","#$material","of","my","computer","monitor",".","Compare","#$part","and","its","subrelations",",","viz","#$component","and","#$piece",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':44901).
lisp_trans(documentation(material,xtChineseLanguage,s("(","#$material","?","SUBSTANCE","?","OBJECT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJECT","æ","\230\","¯","ç","\224\","±","?","SUBSTANCE","ä","½","\234\","ä","¸","ºé","\203\","¨","ä","»","¶","æ","\211\","\200\","æ","\236\","\204\","æ","\210\","\220\","ç","\232\","\204\","ã","\200\","\202\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","å","\214\","\205\","æ","\213\","¬","ã","\200\","\214\","ç","»","\204\","æ","\210\","\220\","ã","\200\","\215\","ã","\200\","\201\","ã","\200\","\214\","å","\201\","\232\","æ","\210\","\220\","ã","\200\","\215\","å","\222\","\214\","ã","\200\","\214\","å","½","¢","æ","\210\","\220\","ã","\200\","\215\","ç","­","\211\","æ","¦","\202\","å","¿","µã","\200\","\202\","ä","¾","\213\","å","­","\220\","æ","\234\","\211\","å","¡","\221\","æ","\226\","\231\","æ","\230\","¯","æ","\210\","\221\","ç","\224\","µç","®","\227\","è","®","¡","å","±","\217\","å","¹","\225\","ç","\232\","\204\","ä","¸","\200\","ç","§","\215\","#$materialã","\200\","\202\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","æ","¯","\224\","è","¾","\203\","#$part","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","å","­","\220\","å","\205\","³","ç","³","»","ï","¼","\214\","å","\215\","³","#$component","å","\222\","\214\","#$pieceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45255).
lisp_trans(genlPreds(contains,partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45606).
lisp_trans(rtSpatialRelation(contains),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45643).
lisp_trans(rtAsymmetricRelation(contains),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45679).
lisp_trans(rtPartialValuedRelation(contains),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45718).
lisp_trans(disjointRelation(contains,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45760).
lisp_trans(argIsa(contains,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45793).
lisp_trans(argIsa(contains,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45833).
lisp_trans(documentation(contains,vEnglishLanguage,s("The","relation","of","spatial","containment","for","two","separable","objects",".","When","the","two","objects","are","not","separable","(","e",".","g",".","an","automobile","and","one","of","its","seats",")",",","the","relation","of","#$part","should","be","used",".","(","#$contains","?","OBJ1","?","OBJ2",")","means","that","the","#$SelfConnectedObject","?","OBJ1","has","a","space","(","i",".","e",".","a","#$Hole",")","which","is","at","least","partially","filled","by","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':45860).
lisp_trans(documentation(contains,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","¤","ä","¸","ªå","\217\","¯","å","\210\","\206\","ç","¦","»","ç","\211\","©","ä","½","\223\","ç","\232\","\204\","ç","©","ºé","\227\","´","å","®","¹","é","\207\","\217\","å","\205\","³","ç","³","»","ã","\200\","\202\","ç","\224\","¨","äº","\216\","ä","¸","\215\","å","\217\","¯","å","\210\","\206\","ç","¦","»","ç","\232\","\204\","ç","\211\","©","ä","½","\223\","ï","¼","\210\","å","¦","\202\","æ","±","½","è","½","¦","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","åº","§","ä","½","\215\",")","æ","\227\","¶","ï","¼","\214\","åº","\224\","è","¯","¥","ç","\224\","¨","#$part","è","¿","\231\","å","\205\","³","ç","³","»","ã","\200\","\202\","(","#$contains","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$SelfConnectedObject","?","OBJ1","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªç","©","ºé","\227\","´","ï","¼","\210\","å","\215\","³","ä","¸","\200\","ä","¸","ª","#$Hole",")","ï","¼","\214\","è","\200\","\214\","å","®","\203\","è","\207\","³","å","°","\221\","ç","\224\","±","?","OBJ2","å","¡","«","æ","»","¡","äº","\206\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46229).
lisp_trans(<=>(contains(OBJ1,OBJ2),exists([HOLE],and(hole(HOLE,OBJ1),properlyFills(OBJ2,HOLE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46566).
lisp_trans(genls(tSumoSubstance,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46696).
lisp_trans(sumo_partition(tSumoSubstance,tPureSubstance,tMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46737).
lisp_trans(sumo_partition(tSumoSubstance,tSumoSyntheticSubstance,tSumoNaturalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46781).
lisp_trans(documentation(tSumoSubstance,vEnglishLanguage,s("An","#$Object","in","which","every","part","is","similar","to","every","other","in","every","relevant","respect",".","More","precisely",",","something","is","a","#$Substance","when","it","has","only","arbitrary","pieces","as","parts","-","any","parts","have","properties","which","are","similar","to","those","of","the","whole",".","Note","that","a","#$Substance","may","nonetheless","have","physical","properties","that","vary",".","For","example",",","the","temperature",",","chemical","constitution",",","density",",","etc",".","may","change","from","one","part","to","another",".","An","example","would","be","a","body","of","water",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':46839).
lisp_trans(documentation(tSumoSubstance,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ªæ","¯","\217\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","å","\234\","¨","å","\220\","\204\","ä","¸","ªç","\233\","¸","å","\205\","³","æ","\226\","¹","é","\235\","¢","è","·","\237\","æ","\211\","\200\","æ","\234\","\211\","å","\220\","\214\","ç","±","»","é","\203\","½","ç","\233\","¸","ä","¼","¼","ç","\232\","\204\","#$Objectã","\200\","\202\","æ","\233\","´","ç","¡","®","å","\210\","\207\","è","\200\","\214\","è","¨","\200\","ï","¼","\214\","#$Substanceæ","\230\","¯","å","½","\223\","ä","¸","\200\","ä","¸","ªä","¸","\234\","è","¥","¿","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","å","\217\","ªæ","\234\","\211\","ä","»","»","æ","\204\","\217\","æ","\225\","£","ä","»","¶","æ","\227\","¶","-","ä","»","»","ä","½","\225\","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ç","\211\","¹","è","´","¨","è","·","\237\","å","®","\203\","æ","\225\","´","ä","½","\223\","ç","\232\","\204\","ç","\211\","¹","è","´","¨","ç","\233\","¸","ä","¼","¼","æ","\227\","¶","ã","\200\","\202\","è","¿","\231\","å","°","±","æ","\230\","¯","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","½","\206\","#$Substance","ç","\232\","\204\","ä","¸","\200\","äº","\233\","ç","\211\","©","ç","\220\","\206\","ç","\211\","¹","è","´","¨","å","\217\","¯","è","\203\","½","ä","¼","\232\","æ","\234\","\211\","å","·","®","å","¼","\202\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","æ","¸","©","åº","¦","ã","\200\","\201\","å","\214\","\226\","å","­","¦","æ","\210\","\220\","å","\210\","\206\","ã","\200\","\201\","å","¯","\206\","åº","¦","ç","­","\211\","å","\217\","¯","ä","»","\216\","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","æ","\224\","¹","å","\217\","\230\","æ","\210\","\220\","å","\217\","¦","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","ã","\200\","\202\","ä","¸","\200\","æ","»","©","æ","°","´","å","°","±","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':47344).
lisp_trans(=>(and(genls(OBJECTTYPE,tSumoSubstance),isa(OBJECT,OBJECTTYPE),part(PART,OBJECT)),isa(PART,OBJECTTYPE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':47802).
lisp_trans(=>(and(tSumoSubstance(OBJ),sumoAttribute(OBJ,ATTR),part(PART,OBJ)),sumoAttribute(PART,ATTR)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':47952).
lisp_trans(genls(tSumoSyntheticSubstance,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48079).
lisp_trans(documentation(tSumoSyntheticSubstance,vEnglishLanguage,s("Any","#$Substance","that","is","the","result","of","an","#$IntentionalProcess",",","i",".","e",".","any","substance","that","is","created","by","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48119).
lisp_trans(documentation(tSumoSyntheticSubstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","»","ä","½","\225\","ç","\224\","±","#$IntentionalProcess","æ","\211\","\200\","é","\200\","\240\","æ","\210\","\220\","ç","\232\","\204\","#$Substance","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","ä","»","»","ä","½","\225\","ç","\224\","±","#$Humans","æ","\211\","\200\","å","\210\","¶","é","\200\","\240\","ç","\232\","\204\","ç","\211\","©","è","´","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48283).
lisp_trans(<=>(tSumoSyntheticSubstance(SUBSTANCE),exists([PROCESS],and(actIntentionalProcess(PROCESS),result(PROCESS,SUBSTANCE),tSumoSubstance(SUBSTANCE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48453).
lisp_trans(genls(tSumoNaturalSubstance,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48666).
lisp_trans(documentation(tSumoNaturalSubstance,vEnglishLanguage,s("Any","#$Substance","that","is","not","the","result","of","an","#$IntentionalProcess",",","i",".","e",".","any","substance","that","occurs","naturally",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48704).
lisp_trans(documentation(tSumoNaturalSubstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","»","ä","½","\225\","ä","¸","\215\","æ","\230\","¯","ç","\224\","±","#$IntentionalProcess","æ","\211\","\200\","é","\200\","\240\","æ","\210\","\220\","ç","\232\","\204\","#$Substance","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","ä","»","»","ä","½","\225\","è","\207\","ªç","\204\","¶","å","\234\","°","äº","§","ç","\224\","\237\","ç","\232\","\204\","ç","\211\","©","è","´","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':48864).
lisp_trans(genls(tPureSubstance,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49032).
lisp_trans(sumo_partition(tPureSubstance,tSumoCompoundSubstance,tSumoElementalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49067).
lisp_trans(documentation(tPureSubstance,vEnglishLanguage,s("The","#$Class","of","#$Substances","with","constant","composition",".","A","#$PureSubstance","can","be","either","an","element","(","#$ElementalSubstance",")","or","a","compound","of","elements","(","#$CompoundSubstance",")",".","Examples",":","Table","salt","(","sodium","chloride",",","NaCl",")",",","sugar","(","sucrose",",","C","_","{","12","}","H","_","{","22","}","O","_","{","11","}",")",",","water","(","H","_","2","O",")",",","iron","(","Fe",")",",","copper","(","Cu",")",",","and","oxygen","(","O","_","2",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49130).
lisp_trans(documentation(tPureSubstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\213\","¥","æ","\234\","\211\","ä","¸","\215\","å","\217\","\230\","æ","\210\","\220\","å","\210\","\206\","#$Substance","ç","\232\","\204\","#$Class","ã","\200\","\202\","#$PureSubstance","å","\217\","¯","ä","»","¥","æ","\230\","¯","å","\205\","\203\","ç","´","\240\","(","#$ElementalSubstance",")","ï","¼","\214\","å","\217\","\210\","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","æ","\213\","¥","æ","\234\","\211\","å","¤","\232\","ä","¸","ªå","\205\","\203\","ç","´","\240\","ç","\232\","\204\","å","\214\","\226\","å","\220\","\210\","ç","\211\","©","(","#$CompoundSubstance",")","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","é","£","\237\","ç","\233\","\220\","ï","¼","\210\","æ","°","¯","å","\214\","\226\","é","\222\","\240\","ï","¼","\214\","NaCl",")","ã","\200\","\201\","ç","³","\226\","ï","¼","\210\","è","\224\","\227\","ç","³","\226\","ï","¼","\214\","C","_","{","12","}","H","_","{","22","}","O","_","{","11","}",")","ã","\200\","\201\","æ","°","´","ï","¼","\210\","H","_","2","O",")","ã","\200\","\201\","é","\223\","\201\","ï","¼","\210\","Fe",")","ã","\200\","\201\","é","\223\","\234\","ï","¼","\210\","Cu",")","å","\222\","\214\","æ","°","§","ï","¼","\210\","O","_","2",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49489).
lisp_trans(genls(tSumoElementalSubstance,tPureSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49844).
lisp_trans(documentation(tSumoElementalSubstance,vEnglishLanguage,s("The","#$Class","of","#$PureSubstances","that","cannot","be","separated","into","two","or","more","#$Substances","by","ordinary","chemical","(","or","physical",")","means",".","This","excludes","nuclear","reactions",".","#$ElementalSubstances","are","composed","of","only","one","kind","of","atom",".","Examples",":","Iron","(","Fe",")",",","copper","(","Cu",")",",","and","oxygen","(","O","_","2",")",".","#$ElementalSubstances","are","the","simplest","#$PureSubstances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':49888).
lisp_trans(documentation(tSumoElementalSubstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$PureSubstance","#$Classï","¼","\214\","å","®","\203\","æ","\230\","¯","ä","¸","\215\","è","\203\","½","é","\200\","\232\","è","¿","\207\","æ","\231\","®","é","\200\","\232\","ç","\232\","\204\","å","\214\","\226\","å","­","¦","ï","¼","\210\","æ","\210\","\226\","ç","\211\","©","ç","\220\","\206\",")","æ","\211\","\213\","æ","®","µå","\210\","\206\","å","\211\","²","æ","\210\","\220\","ä","¸","¤","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","#$Substanceã","\200\","\202\","è","¿","\231\","ä","¸","\215\","å","\214\","\205\","æ","\213\","¬","æ","\240\","¸","å","\217\","\215\","åº","\224\","ã","\200\","\202\","#$ElementalSubstance","ç","\224\","±","å","\215\","\225\","ä","¸","\200\","ä","¸","\200\","ä","¸","ªå","\216\","\237\","å","­","\220\","ç","»","\204\","æ","\210\","\220\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","é","\223\","\201\","(","Fe",")","ã","\200\","\201\","é","\223\","\234\","(","Cu",")","å","\222\","\214\","æ","°","§","(","O","_","2",")","ã","\200\","\202\","#$ElementalSubstance","æ","\230\","¯","æ","\234\","\200\","ç","®","\200\","å","\215\","\225\","ç","\232\","\204\","#$PureSubstanceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':50274).
lisp_trans(genls(tMetal,tSumoElementalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':50631).
lisp_trans(documentation(tMetal,vEnglishLanguage,s("A","#$Metal","is","an","#$ElementalSubstance","that","conducts","heat","and","electricity",",","is","shiny","and","reflects","many","colors","of","light",",","and","can","be","hammered","into","sheets","or","drawn","into","wire",".","About","80","%","of","the","known","chemical","elements","(","#$ElementalSubstances",")","are","metals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':50667).
lisp_trans(documentation(tMetal,xtChineseLanguage,s("#$Metal","æ","\230\","¯","è","\203\","½","ä","¼","\240\","ç","\203\","­","å","\222\","\214\","ç","\224\","µ","ç","\232\","\204\","#$ElementalSubstanceï","¼","\214\","å","®","\203\","æ","\234\","\211\","å","\205\","\211\","æ","³","½","ã","\200\","\201\","è","\203\","½","å","\217\","\215\","å","°","\204\","å","\205\","\211\","ç","\232\","\204\","è","®","¸","å","¤","\232\","é","¢","\234\","è","\211\","²","ï","¼","\214\","å","¹","¶","ä","¸","\224\","å","\217\","¯","ä","»","¥","æ","\211\","\223\","é","\200\","\240\","æ","\210\","\220\","ç","\211\","\207\","æ","\235\","\220\","æ","\210\","\226\","æ","\213\","\211\","æ","\210\","\220\","çº","¿","ã","\200\","\202\","çº","¦","æ","\234\","\211\","80","ï","¼","\205\","ç","\232\","\204\","å","·","²","ç","\237\","¥","å","\214\","\226\","å","­","¦","å","\205\","\203\","ç","´","\240\","(","#$ElementalSubstance",")","æ","\230\","¯","é","\207\","\221\","å","±","\236\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':50954).
lisp_trans(genls(tSumoAtomMolecule,tSumoElementalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':51207).
lisp_trans(documentation(tSumoAtomMolecule,vEnglishLanguage,s("An","extremely","small","unit","of","matter","that","retains","its","identity","in","Chemical","reactions",".","It","consists","of","an","#$AtomicNucleus","and","#$Electrons","surrounding","the","#$AtomicNucleus",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':51242).
lisp_trans(documentation(tSumoAtomMolecule,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\236\","\201\","å","°","\217\","ç","\232\","\204\","ç","\211\","©","è","´","¨","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","è","\203\","½","å","\234\","¨","å","\214\","\226\","å","­","¦","å","\217\","\215\","åº","\224\","ä","¸","­","ä","¿","\235\","æ","\214\","\201\","è","\207\","ªå","·","±","ç","\232\","\204\","æ","\234\","¬","æ","\200\","§","ã","\200\","\202\","å","®","\203\","ç","\224\","±","ä","¸","\200\","ä","¸","ª","#$AtomicNucleus","å","\222\","\214\","ä","»","¥","ä","¸","ªå","\214\","\205\","å","\233\","´","ç","\235\","\200\","#$AtomicNucleus","ç","\232\","\204\","#$Electron","æ","\211\","\200\","ç","»","\204\","æ","\210\","\220\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':51448).
lisp_trans(=>(tSumoAtomMolecule(ATOM),exists([PROTON,ELECTRON],and(component(PROTON,ATOM),component(ELECTRON,ATOM),tProton(PROTON),tElectron(ELECTRON)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':51666).
lisp_trans(=>(tSumoAtomMolecule(ATOM),all([NUCLEUS1,NUCLEUS2],=>(and(component(NUCLEUS1,ATOM),component(NUCLEUS2,ATOM),tAtomicNucleus(NUCLEUS1),tAtomicNucleus(NUCLEUS2)),equal(NUCLEUS1,NUCLEUS2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':51887).
lisp_trans(genls(tSumoSubatomicParticle,tSumoElementalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52189).
lisp_trans(documentation(tSumoSubatomicParticle,vEnglishLanguage,s("The","class","of","#$ElementalSubstances","that","are","smaller","than","#$Atoms","and","compose","#$Atoms",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52237).
lisp_trans(documentation(tSumoSubatomicParticle,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","¯","\224\","#$Atom","è","¿","\230\","è","¦","\201\","å","°","\217\","ã","\200\","\201\","ç","\224\","±","#$Atom","ç","»","\204\","æ","\210\","\220\","ç","\232\","\204\","#$ElementalSubstance","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52375).
lisp_trans(=>(tSumoSubatomicParticle(PARTICLE),exists([ATOM],and(tSumoAtomMolecule(ATOM),part(PARTICLE,ATOM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52510).
lisp_trans(genls(tAtomicNucleus,tSumoSubatomicParticle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52653).
lisp_trans(documentation(tAtomicNucleus,vEnglishLanguage,s("The","core","of","the","#$Atom",".","It","is","composed","of","#$Protons","and","#$Neutrons",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52696).
lisp_trans(documentation(tAtomicNucleus,xtChineseLanguage,'Atom ç\232\\204\æ\240\¸å¿\203\ï¼\214\ ç\224\± #$Proton å\222\\214\ #$Neutron  ç»\204\æ\210\\220\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52813).
lisp_trans(=>(tAtomicNucleus(NUCLEUS),exists([NEUTRON,PROTON],and(component(NEUTRON,NUCLEUS),component(PROTON,NUCLEUS),tNeutron(NEUTRON),tProton(PROTON)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':52920).
lisp_trans(genls(tElectron,tSumoSubatomicParticle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53155).
lisp_trans(documentation(tElectron,vEnglishLanguage,'SubatomicParticles that surround the #$AtomicNucleus.  They have a negative charge.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53193).
lisp_trans(documentation(tElectron,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\214\","\205\","å","\233\","´","ç","\235\","\200\","#$AtomicNucleus","ç","\232\","\204\","#$SubatomicParticle",",","å","®","\203\","ä","»","¬","å","\205\","·","æ","\234\","\211\","è","´","\237\","ç","\224\","µè","\215\","·","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53322).
lisp_trans(genls(tProton,tSumoSubatomicParticle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53449).
lisp_trans(documentation(tProton,vEnglishLanguage,s("Components","of","the","#$AtomicNucleus",".","They","have","a","positive","charge",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53485).
lisp_trans(documentation(tProton,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$AtomicNucleus","ç","\232\","\204\","ç","»","\204\","ä","»","¶","ï","¼","\214\","å","®","\203\","ä","»","¬","å","\205\","·","æ","\234\","\211\","æ","­","£","ç","\224\","µè","\215\","·","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53591).
lisp_trans(genls(tNeutron,tSumoSubatomicParticle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53694).
lisp_trans(documentation(tNeutron,vEnglishLanguage,s("Components","of","the","#$AtomicNucleus",".","They","have","no","charge",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53731).
lisp_trans(documentation(tNeutron,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$AtomicNucleus","ç","\232\","\204\","ç","»","\204\","ä","»","¶","ï","¼","\214\","å","®","\203\","ä","»","¬","ä","¸","\215\","å","\220\","«","ç","\224\","µè","\215\","·","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53830).
lisp_trans(genls(tSumoCompoundSubstance,tPureSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53931).
lisp_trans(documentation(tSumoCompoundSubstance,vEnglishLanguage,s("The","#$Class","of","#$Substances","that","contain","two","or","more","elements","(","#$ElementalSubstances",")",",","in","definite","proportion","by","weight",".","The","composition","of","a","pure","compound","will","be","invariant",",","regardless","of","the","method","of","preparation",".","Compounds","are","composed","of","more","than","one","kind","of","atom","(","element",")",".","The","term","molecule","is","often","used","for","the","smallest","unit","of","a","compound","that","still","retains","all","of","the","properties","of","the","compound",".","Examples",":","Table","salt","(","sodium","chloride",",","NaCl",")",",","sugar","(","sucrose",",","C","_","{","12","}","H","_","{","22","}","O","_","{","11","}",")",",","and","water","(","H","_","2","O",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':53974).
lisp_trans(documentation(tSumoCompoundSubstance,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Substance","#$Class","ï","¼","\214\","ä","»","¥","ç","¡","®","å","®","\232\","ç","\232\","\204\","é","\207\","\215\","é","\207\","\217\","æ","¯","\224\","ä","¾","\213\","ï","¼","\214\","æ","\213\","¥","æ","\234\","\211\","ä","¸","¤","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","å","\205\","\203\","ç","´","\240\","(","#$ElementalSubstance",")","ã","\200\","\202\","ä","¸","\215\","ç","®","¡","äº","\213\","ç","\224\","¨","ä","»","\200\","éº","½","æ","\226\","¹","æ","³","\225\","æ","\217\","\220\","ç","\202\","¼","ï","¼","\214\","çº","¯","å","¤","\215\","å","\220\","\210\","ç","\211\","©","ç","\232\","\204\","æ","\210\","\220\","å","\210\","\206\","ä","¿","\235\","æ","\214\","\201\","ä","¸","\215\","å","\217\","\230\","ã","\200\","\202\","å","¤","\215\","å","\220\","\210\","ç","\211\","©","ç","\224\","±","è","¶","\205\","è","¿","\207\","ä","¸","\200\","ä","¸","­","å","\216\","\237\","å","­","\220\","ï","¼","\210\","å","\205\","\203\","ç","´","\240\",")","ç","»","\204\","æ","\210\","\220\","ã","\200\","\202\","å","\210\","\206\","å","­","\220\","è","¿","\231\","ä","¸","ªæ","\234\","¯","è","¯","­","é","\200\","\232\","å","¸","¸","ç","\224\","¨","æ","\235\","¥","è","¯","\206\","å","\210\","«","å","\223\","ªäº","\233\","ä","»","\215\","ç","\204\","¶","ä","¿","\235\","ç","\225\","\231\","å","\214\","\226\","å","\220\","\210\","ç","\211\","©","æ","\211\","\200\","æ","\234\","\211\","æ","\200\","§","è","´","¨","ç","\232\","\204\","æ","\234\","\200\","å","°","\217\","å","\215\","\225\","å","\205\","\203\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","é","£","\237\","ç","\233\","\220\","ï","¼","\210\","æ","°","¯","å","\214\","\226\","é","\222\","\240\","ï","¼","\214\","NaCl",")","ã","\200\","\201\","ç","³","\226\","ï","¼","\210\","è","\224\","\227\","ç","³","\226\","ï","¼","\214\","C","_","{","12","}","H","_","{","22","}","O","_","{","11","}",")","ã","\200\","\201\","æ","°","´","ï","¼","\210\","H","_","2","O",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':54535).
lisp_trans(genls(tMixture,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':55002).
lisp_trans(documentation(tMixture,vEnglishLanguage,s("A","#$Mixture","is","two","or","more","#$PureSubstances",",","combined","in","varying","proportions","-","each","retaining","its","own","specific","properties",".","The","components","of","a","#$Mixture","can","be","separated","by","physical","means",",","i",".","e",".","without","the","making","and","breaking","of","chemical","bonds",".","Examples",":","Air",",","table","salt","thoroughly","dissolved","in","water",",","milk",",","wood",",","and","concrete",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':55031).
lisp_trans(documentation(tMixture,xtChineseLanguage,s("#$Mixture","æ","\230\","¯","ä","¸","¤","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","ã","\200\","\201\","ä","»","¥","å","\220\","\204\","ç","§","\215\","æ","¯","\224\","ä","¾","\213\","ç","»","\204\","æ","\210\","\220\","-","å","\220\","\204\","è","\207\","ªä","¿","\235\","ç","\225\","\231\","è","\207\","ªèº","«","ç","\211\","¹","å","®","\232\","æ","\200\","§","è","´","¨","ç","\232\","\204\","#$PureSubstanceã","\200\","\202\","#$Mixture","ç","\232\","\204\","æ","\210\","\220\","å","\210\","\206\","å","\217\","¯","ä","»","¥","é","\200\","\232\","è","¿","\207\","ç","\211\","©","ç","\220\","\206\","é","\200\","\224\","å","¾","\204\","å","\210\","\206\","ç","¦","»","ï","¼","\214\","å","\215\","³","ä","¸","\215\","æ","\233\","¾","å","»","ºç","«","\213\","æ","\210\","\226\","æ","\211\","\223\","ç","\240\","´","æ","\210\","\220\","å","\210\","\206\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\214\","\226\","å","­","¦","é","\224\","®","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ç","©","ºæ","°","\224\","ã","\200\","\201\","å","½","»","åº","\225\","æº","¶","äº","\216\","æ","°","´","ä","¸","­","ç","\232\","\204\","é","£","\237\","ç","\233\","\220\","ã","\200\","\201\","ç","\211\","\233\","å","¥","¶","ã","\200\","\201\","æ","\234\","¨","æ","\235\","\220\","å","\222\","\214\","æ","·","·","å","\207\","\235\","å","\234\","\237\","ä","¸","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':55402).
lisp_trans(=>(tMixture(MIXTURE),exists([PURE1,PURE2],and(tPureSubstance(PURE1),tPureSubstance(PURE2),not(equal(PURE1,PURE2)),part(PURE1,MIXTURE),part(PURE2,MIXTURE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':55741).
lisp_trans(=>(and(tMixture(MIXTURE),part(SUBSTANCE,MIXTURE),not(tMixture(SUBSTANCE))),tPureSubstance(SUBSTANCE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56001).
lisp_trans(genls(tSumoCorpuscularObject,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56164).
lisp_trans(disjointWith(tSumoCorpuscularObject,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56213).
lisp_trans(documentation(tSumoCorpuscularObject,vEnglishLanguage,s("A","#$SelfConnectedObject","whose","parts","have","properties","that","are","not","shared","by","the","whole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56252).
lisp_trans(documentation(tSumoCorpuscularObject,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\225\","´","ä","½","\223\","å","\222\","\214\","é","\203\","¨","å","\210\","\206\","ä","¹","\213\","é","\227\","´","ä","¸","\215\","å","­","\230\","å","\234\","¨","å","\205\","±","æ","\234\","\211\","ç","\232\","\204\","ç","\211\","¹","æ","\200\","§","#$SelfConnectedObjectã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56390).
lisp_trans(=>(tSumoCorpuscularObject(OBJ),exists([SUBSTANCE1,SUBSTANCE2],and(genls(SUBSTANCE1,tSumoSubstance),genls(SUBSTANCE2,tSumoSubstance),material(SUBSTANCE1,OBJ),material(SUBSTANCE2,OBJ),not(equal(SUBSTANCE1,SUBSTANCE2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56527).
lisp_trans(genls(tPlaceLikeRegion,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56825).
lisp_trans(documentation(tPlaceLikeRegion,vEnglishLanguage,s("A","topographic","location",".","#$Regions","encompass","surfaces","of","#$Objects",",","imaginary","places",",","and","#$GeographicAreas",".","Note","that","a","#$Region","is","the","only","kind","of","#$Object","which","can","be","located","at","itself",".","Note","too","that","#$Region","is","not","a","subclass","of","#$SelfConnectedObject",",","because","some","#$Regions",",","e",".","g",".","archipelagos",",","have","#$parts","which","are","not","#$connected","with","one","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':56850).
lisp_trans(documentation(tPlaceLikeRegion,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\234\","°","ç","\220\","\206\","ä","½","\215\","ç","½","®","ã","\200\","\202\","#$Region","å","\214\","\205\","æ","\213\","¬","#$Object","ç","\232\","\204\","è","¡","¨","é","\235\","¢","ã","\200\","\201\","è","\231\","\232\","æ","\236\","\204\","ç","\232\","\204\","å","\234\","°","æ","\226\","¹","å","\222\","\214\","#$GeographicArea","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$Region","æ","\230\","¯","å","\224\","¯","ä","¸","\200\","è","\203\","½","å","¤","\237\","å","®","\232\","ä","½","\215\","äº","\216\","ä","½","\234\","è","\207\","ªèº","«","ç","\232\","\204\","#$Object","ã","\200\","\202\","å","\217\","¦","å","¤","\226\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","#$Region","ä","¸","\215\","æ","\230\","¯","#$SelfConnectedObject","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\233\","\240\","ä","¸","ºæ","\234\","\211\","ä","¸","\200\","äº","\233\","#$Region","ï","¼","\214\","å","\203\","\217\","ç","¾","¤","å","²","\233\","æ","\234\","\211\","äº","\233\","#$part","è","·","\237\","å","\205\","¶","ä","»","\226\","é","\203\","¨","å","\210\","\206\","ä","¸","\215\","#$connected","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':57251).
lisp_trans(=>(tPlaceLikeRegion(REGION),exists([PHYS],located(PHYS,REGION))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':57627).
lisp_trans(genls(ttSumoCollection,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':57712).
lisp_trans(disjointWith(ttSumoCollection,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':57741).
lisp_trans(documentation(ttSumoCollection,vEnglishLanguage,s("Collections","have","#$members","like","#$Classes",",","but",",","unlike","#$Classes",",","they","have","a","position","in","space","-","time","and","#$members","can","be","added","and","subtracted","without","thereby","changing","the","identity","of","the","#$Collection",".","Some","examples","are","toolkits",",","football","teams",",","and","flocks","of","sheep",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':57783).
lisp_trans(documentation(ttSumoCollection,xtChineseLanguage,s("ç","¾","¤","ä","½","\223\","å","\222\","\214\","#$Class","ä","¸","\200\","æ","\240\","·","ï","¼","\214\","æ","\213\","¥","æ","\234\","\211\","#$member","ï","¼","\214\","å","\217\","¯","å","®","\203\","å","\217\","\210\","ä","¸","\215\","å","\203\","\217\","#$Classï","¼","\214\","å","\233\","\240\","ä","¸","ºå","®","\203\","ä","»","¬","å","\234\","¨","æ","\227\","¶","ç","©","ºæ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","®","\232\","ä","½","\215\","ï","¼","\214\","è","\200\","\214\","ä","¸","\224\","#$Collection","å","\217\","¯","ä","»","¥","å","\212\","\240\","å","\222\","\214\","å","\207\","\217\","#$member","å","\215\","´","ä","¸","\215\","ä","¼","\232\","æ","\224\","¹","å","\217\","\230\","è","\207\","ªèº","«","ç","\232\","\204\","èº","«","ä","»","½","ã","\200\","\202\","å","®","\203\","ç","\232\","\204\","ä","¾","\213\","å","­","\220\","æ","\234\","\211\","å","·","¥","å","\205\","·","å","\214\","\205\","ã","\200\","\201\","è","¶","³","ç","\220\","\203\","é","\230\","\237\","å","\222\","\214\","ç","¾","\212\","ç","¾","¤","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58096).
lisp_trans(=>(ttSumoCollection(COLL),exists([OBJ],member(OBJ,COLL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58382).
lisp_trans(genlPreds(member,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58460).
lisp_trans(rtAsymmetricRelation(member),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58486).
lisp_trans(rtIntransitiveRelation(member),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58523).
lisp_trans(argIsa(member,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58562).
lisp_trans(argIsa(member,2,ttSumoCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58587).
lisp_trans(relatedInternalConcept(member,isa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58616).
lisp_trans(relatedInternalConcept(member,element),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58657).
lisp_trans(documentation(member,vEnglishLanguage,s("A","specialized","common","sense","notion","of","part","for","uniform","parts","of","#$Collections",".","For","example",",","each","sheep","in","a","flock","of","sheep","would","have","the","relationship","of","member","to","the","flock",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58697).
lisp_trans(documentation(member,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¯","¹","å","±","\236\","äº","\216\","#$Collection","ç","\233\","¸","å","\220\","\214\","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ä","¸","\223\","ä","¸","\232\","å","¸","¸","è","¯","\206\","æ","¦","\202\","å","¿","µã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ç","¾","\212\","ç","¾","¤","ä","¸","­","ç","\232\","\204\","æ","¯","\217\","å","\217\","ªç","¾","\212\","ï","¼","\214\","è","·","\237\","ç","¾","\212\","ç","¾","¤","é","\227\","´","ï","¼","\214\","æ","\230\","¯","æ","\210\","\220\","å","\221\","\230\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':58913).
lisp_trans(rtBinaryPredicate(subCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59088).
lisp_trans(rtPartialOrderingRelation(subCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59129).
lisp_trans(argIsa(subCollection,1,ttSumoCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59178).
lisp_trans(argIsa(subCollection,2,ttSumoCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59214).
lisp_trans(documentation(subCollection,vEnglishLanguage,s("(","#$subCollection","?","COLL1","?","COLL2",")","means","that","the","#$Collection","?","COLL1","is","a","proper","part","of","the","#$Collection","?","COLL2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59251).
lisp_trans(documentation(subCollection,xtChineseLanguage,s("(","#$subCollection","?","COLL1","?","COLL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Collection","?","COLL1","æ","\230\","¯","#$Collection","?","COLL2","ç","\232\","\204\","ç","\234\","\237\","æ","­","£","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59411).
lisp_trans(genlPreds(subCollection,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59567).
lisp_trans(<=>(subCollection(COLL1,COLL2),all([MEMBER],=>(member(MEMBER,COLL1),member(MEMBER,COLL2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59601).
lisp_trans(genls(tSumoContentBearingPhysical,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59730).
lisp_trans(documentation(tSumoContentBearingPhysical,vEnglishLanguage,s("Any","#$Object","or","#$Process","that","expresses","content",".","This","covers","#$Objects","that","contain","a","#$Proposition",",","such","as","a","book",",","as","well","as","#$ManualSignLanguage",",","which","may","similarly","contain","a","#$Proposition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':59773).
lisp_trans(documentation(tSumoContentBearingPhysical,xtChineseLanguage,s("ä","»","»","ä","½","\225\","è","\203\","½","è","¡","¨","è","¾","¾","å","\206\","\205\","å","®","¹","ç","\232\","\204\","#$Object","æ","\210\","\226\","#$Process","ã","\200\","\202\","è","¿","\231\","å","\214\","\205\","æ","\213\","¬","æ","\234\","\211\","#$Proposition","ç","\232\","\204\","#$Object","ï","¼","\214\","å","\203\","\217\","ä","¸","\200\","æ","\234\","¬","ä","¹","¦","å","\222\","\214\","å","\220\","\214\","æ","\240\","·","æ","\234\","\211\","#$Proposition","ç","\232\","\204\","#$ManualSignLanguageã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60027).
lisp_trans(=>(tSumoContentBearingPhysical(OBJ),exists([THING],represents(OBJ,THING))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60246).
lisp_trans(genls(actContentBearingProcess,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60346).
lisp_trans(genls(actContentBearingProcess,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60425).
lisp_trans(documentation(actContentBearingProcess,vEnglishLanguage,s("Any","#$Process",",","for","example","#$ManualHumanLanguage",",","which","may","contain","a","#$Proposition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60589).
lisp_trans(documentation(actContentBearingProcess,xtChineseLanguage,s("ä","»","»","ä","½","\225\","ç","\232\","\204\","#$Process","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","æ","\234\","\211\","#$Proposition","ç","\232\","\204\","#$ManualHumanLanguage","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60730).
lisp_trans(genls(tSumoContentBearingObject,tSumoCorpuscularObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60864).
lisp_trans(genls(tSumoContentBearingObject,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60914).
lisp_trans(relatedInternalConcept(tSumoContentBearingObject,containsInformation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':60969).
lisp_trans(documentation(tSumoContentBearingObject,vEnglishLanguage,s("Any","#$SelfConnectedObject","that","expresses","content",".","This","content","may","be","a","#$Proposition",",","e",".","g",".","when","the","#$ContentBearingObject","is","a","#$Sentence","or","#$Text",",","or","it","may","be","a","representation","of","an","abstract","or","physical","object",",","as","with","an","#$Icon",",","a","#$Word","or","a","#$Phrase",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61035).
lisp_trans(documentation(tSumoContentBearingObject,xtChineseLanguage,s("ä","»","»","ä","½","\225\","è","\203\","½","è","¡","¨","è","¾","¾","å","\206\","\205\","å","®","¹","ç","\232\","\204\","#$SelfConnectedObject","å","\206\","\205\","å","®","¹","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","¸","\200\","ç","¯","\207\","#$Proposition","ï","¼","\214\","ä","¸","¾","ä","¾","\213\","è","¯","´","å","½","\223\","#$ContentBearingObject","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Sentence","æ","\210\","\226\","#$Text","ï","¼","\214\","å","\217\","\210\","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","æ","\212\","½","è","±","¡","æ","\210\","\226\","æ","\234\","\211\","å","½","¢","ç","\211\","©","ä","½","\223\","å","\203\","\217\","ä","¸","\200\","ä","¸","ª","#$Icon","ã","\200\","\201\","ä","¸","\200\","ä","¸","ª","#$Word","æ","\210\","\226\","ä","¸","\200\","ä","¸","ª","#$Phrase","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61350).
lisp_trans(genls(ftString,tSumoContentBearingObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61655).
lisp_trans(documentation(ftString,vEnglishLanguage,s("The","#$Class","of","alphanumeric","sequences",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61702).
lisp_trans(documentation(ftString,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\226\","\207\","æ","\225\","°","å","­","\227\","åº","\217\","å","\210\","\227\","ç","\232\","\204\","#$Class","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61790).
lisp_trans(genls(ftCharacter,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61878).
lisp_trans(documentation(ftCharacter,vEnglishLanguage,s("An","element","of","an","alphabet",",","a","set","of","numerals",",","etc",".","Note","that","a","#$Character","may","or","may","not","be","part","of","a","#$Language",".","#$Character","is","a","subclass","of","#$SymbolicString",",","because","every","instance","of","#$Character","is","an","alphanumeric","sequence","consisting","of","a","single","element",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':61914).
lisp_trans(documentation(ftCharacter,xtChineseLanguage,s("å","­","\227\","æ","¯","\215\","è","¡","¨","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\205\","\203\","ç","´","\240\","ã","\200\","\201\","ä","¸","\200\","ç","»","\204\","æ","\225\","°","å","­","\227\","ç","­","\211\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$Character","å","\217\","¯","è","\203\","½","æ","\230\","¯","ä","¹","\237\","å","\217\","¯","è","\203\","½","ä","¸","\215\","æ","\230\","¯","#$Language","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","#$Character","æ","\230\","¯","#$SymbolicString","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\233\","\240\","ä","¸","º","#$Character","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\220\","«","å","\217\","\210\","å","\215\","\225\","ä","¸","\200\","å","\205\","\203\","ç","´","\240\","ç","\232\","\204\","æ","\226\","\207\","æ","\225\","°","å","­","\227\","åº","\217\","å","\210\","\227\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62220).
lisp_trans(=>(ftString(STRING),exists([PART],and(part(PART,STRING),ftCharacter(PART)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62523).
lisp_trans(rtBinaryPredicate(containsInformation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62674).
lisp_trans(rtAsymmetricRelation(containsInformation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62721).
lisp_trans(genlPreds(containsInformation,represents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62771).
lisp_trans(argIsa(containsInformation,1,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62816).
lisp_trans(argIsa(containsInformation,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62870).
lisp_trans(documentation(containsInformation,vEnglishLanguage,s("A","subrelation","of","#$represents",".","This","predicate","relates","a","#$ContentBearingPhysical","to","the","#$Proposition","that","is","expressed","by","the","#$ContentBearingPhysical",".","Examples","include","the","relationships","between","a","physical","novel","and","its","story","and","between","a","printed","score","and","its","musical","content",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':62913).
lisp_trans(documentation(containsInformation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$represents","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\","è","¿","\231\","ä","¸","ªæ","\234\","¯","è","¯","­","æ","\212\","\212\","#$ContentBearingPhysical","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$ContentBearingPhysical","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","#$Proposition","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","å","®","\203\","ç","\232\","\204\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","ä","¸","\200\","æ","\234\","¬","å","®","\236\","ä","½","\223\","å","°","\217\","è","¯","´","å","\222\","\214\","å","®","\203\","æ","\211\","\200\","è","®","²","æ","\225\","\205\","äº","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","ä","»","¥","å","\217\","\212\","ä","¸","\200\","ç","¯","\207\","æ","\200\","»","æ","\233\","²","è","°","±","å","\222\","\214\","ç","\232\","\204\","å","®","\203\","é","\237\","³","ä","¹","\220\","å","\206\","\205\","å","®","¹","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':63248).
lisp_trans(genls(tSumoIcon,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':63591).
lisp_trans(documentation(tSumoIcon,vEnglishLanguage,s("This","is","the","subclass","of","#$ContentBearingPhysical","which","are","not","part","of","a","#$Language","and","which","have","some","sort","of","similarity","with","the","#$Objects","that","they","represent",".","This","#$Class","would","include","symbolic","roadway","signs",",","representational","art","works",",","photographs",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':63630).
lisp_trans(documentation(tSumoIcon,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$ContentBearingPhysical","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","è","¿","\231\","ä","¸","\215\","å","±","\236\","äº","\216\","#$Language","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","å","¹","¶","ä","¸","\224\","å","\222\","\214\","#$Object","æ","\211\","\200\","ä","»","£","è","¡","¨","æ","\234\","\211\","ç","\233\","¸","ä","¼","¼","ç","\232\","\204\","å","\234\","°","æ","\226\","¹","è","¿","\231\","#$Class","å","\217\","¯","å","\214\","\205\","æ","\213\","¬","å","\205\","·","æ","\234\","\211\","è","±","¡","å","¾","\201\","æ","\200\","§","ç","\232\","\204\","è","·","¯","æ","\240\","\207\","ã","\200\","\201\","å","\205\","·","ä","»","£","è","¡","¨","æ","\200\","§","ç","\232\","\204\","è","\211\","ºæ","\234\","¯","å","\223\","\201\","ã","\200\","\201\","ç","\205\","§","ç","\211\","\207\","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':63930).
lisp_trans(genls(tSumoMotionPicture,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64190).
lisp_trans(documentation(tSumoMotionPicture,vEnglishLanguage,s("A","#$ContentBearingObject","which","depicts","motion","(","and","which","may","have","an","audio","or","text","component","as","well",")",".","This","#$Class","covers","films",",","videos",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64220).
lisp_trans(documentation(tSumoMotionPicture,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\217\","\217\","è","¿","°","å","\212\","¨","ä","½","\234\","ï","¼","\210\","å","¹","¶","ä","¸","\224\","å","\205\","¶","ä","¹","\237\","å","\217\","¯","ä","»","¥","å","\205\","·","æ","\234\","\211\","é","\237\","³","é","¢","\221\","æ","\210\","\226\","æ","\226\","\207\","æ","\234\","¬","æ","\210\","\220\","å","\210\","\206\",")","ç","\232\","\204\","#$ContentBearingObject","ã","\200\","\202\","è","¿","\231\","ä","¸","ª","#$Class","æ","¶","µç","\233\","\226\","ç","\224\","µå","½","±","ï","¼","\214\","è","§","\206\","é","¢","\221\","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64412).
lisp_trans(genls(ftLinguisticExpression,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64603).
lisp_trans(disjointWith(ftLinguisticExpression,tSumoIcon),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64658).
lisp_trans(documentation(ftLinguisticExpression,vEnglishLanguage,s("This","is","the","subclass","of","#$ContentBearingPhysical","which","are","language","-","related",".","Note","that","this","#$Class","encompasses","both","#$Language","and","the","the","elements","of","#$Languages",",","e",".","g",".","#$Words",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64695).
lisp_trans(documentation(ftLinguisticExpression,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$ContentBearingPhysical","å","\222\","\214\","è","¯","­","è","¨","\200\","æ","\234\","\211\","å","\205\","³","è","\201\","\224\","ç","\232\","\204\","å","­","\220\","ç","±","»","æ","\234\","¬","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ª","#$Class","æ","¶","µç","\233\","\226\","#$Language","å","\222\","\214\","å","±","\236\","äº","\216\","#$Language","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","#$Words","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':64930).
lisp_trans(genls(tLanguage,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65143).
lisp_trans(disjointDecomposition(tLanguage,xtAnimalLanguage,tHumanLanguage,tClazzComputerLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65184).
lisp_trans(documentation(tLanguage,vEnglishLanguage,s("A","system","of","signs","for","expressing","thought",".","The","system","can","be","either","natural","or","artificial",",","i",".","e",".","something","that","emerges","gradually","as","a","cultural","artifact","or","something","that","is","intentionally","created","by","a","person","or","group","of","people",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65263).
lisp_trans(documentation(tLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","¡","¨","è","¾","¾","æ","\200\","\235\","æ","\203\","³","ç","\232\","\204\","ç","¬","¦","å","\217\","·","ç","³","»","ç","»","\237\","ã","\200\","\202\","è","¿","\231\","ç","³","»","ç","»","\237\","å","\217\","¯","ä","»","¥","æ","\230\","¯","è","\207\","ªç","\204\","¶","æ","\210\","\226\","æ","\230\","¯","äººå","·","¥","ç","\232\","\204\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","é","\200\","\220\","æ","¸","\220\","å","½","¢","æ","\210\","\220\","ç","\232\","\204\","æ","\226\","\207\","å","\214\","\226\","äº","§","å","\223\","\201\","ï","¼","\214\","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","ç","\224\","±","ä","¸","\200\","ä","¸","ªäººæ","\210\","\226\","ä","¸","\200\","ç","¾","¤","äººæ","\211\","\200\","æ","\225\","\205\","æ","\204\","\217\","å","\210\","\233\","é","\200\","\240\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65533).
lisp_trans(genls(xtAnimalLanguage,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65762).
lisp_trans(documentation(xtAnimalLanguage,vEnglishLanguage,s("The","#$subclass","of","#$Languages","used","by","#$Animals","other","than","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65797).
lisp_trans(documentation(xtAnimalLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","é","\231\","¤","äº","\206\","#$Human","ä","»","¥","å","¤","\226\","#$Animal","æ","\211\","\200\","ç","\224\","¨","ç","\232\","\204\","#$Language","ç","\232\","\204\","#$subclassã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':65915).
lisp_trans(=>(and(xtAnimalLanguage(LANG),agent(PROC,AGENT),instrument(PROC,LANG)),and(tClazzAnimal(AGENT),not(tSumoHuman(AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66042).
lisp_trans(genls(tArtificialLanguage,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66229).
lisp_trans(documentation(tArtificialLanguage,vEnglishLanguage,s("The","#$subclass","of","#$Languages","that","are","designed","by","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66268).
lisp_trans(documentation(tArtificialLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","±","#$Human","æ","\211\","\200\","è","®","¾","è","®","¡","ç","\232\","\204\","#$Language","ç","\232\","\204\","#$subclass","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66382).
lisp_trans(genls(tClazzComputerLanguage,tArtificialLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66497).
lisp_trans(documentation(tClazzComputerLanguage,vEnglishLanguage,s("The","class","of","#$Languages","designed","for","and","interpreted","by","a","computer",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66544).
lisp_trans(documentation(tClazzComputerLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","»","\204\","ä","¸","ºç","\202\","¹","ç","®","\227\","è","®","¡","è","\200\","\214\","è","®","¾","ï","¼","\214\","ä","¹","\237\","æ","\230\","¯","ç","\224\","±","ç","\224\","µç","®","\227\","è","®","¡","æ","\235\","¥","è","§","£","è","¯","»","ç","\232\","\204\","#$Languages","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66664).
lisp_trans(=>(and(tClazzComputerLanguage(LANG),agent(PROC,AGENT),instrument(PROC,LANG)),tSumoMachine(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66803).
lisp_trans(genls(tHumanLanguage,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66945).
lisp_trans(sumo_partition(tHumanLanguage,tNaturalLanguage,xtConstructedLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':66979).
lisp_trans(sumo_partition(tHumanLanguage,xtSpokenHumanLanguage,xtManualHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67041).
lisp_trans(documentation(tHumanLanguage,vEnglishLanguage,s("The","#$subclass","of","#$Languages","used","by","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67107).
lisp_trans(documentation(tHumanLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Human","æ","\211\","\200\","ç","\224\","¨","#$Language","ç","\232\","\204\","#$subclass","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67203).
lisp_trans(=>(and(tHumanLanguage(LANG),agent(PROC,AGENT),instrument(PROC,LANG)),tSumoHuman(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67304).
lisp_trans(genls(xtConstructedLanguage,tHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67441).
lisp_trans(genls(xtConstructedLanguage,tArtificialLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67486).
lisp_trans(documentation(xtConstructedLanguage,vEnglishLanguage,s("An","#$ConstructedLanguage","is","a","#$HumanLanguage","that","did","not","evolve","spontaneously","within","a","language","community",",","but","rather","had","its","core","grammar","and","vocabulary","invented","by","one","or","more","language","experts",",","often","with","an","aim","to","produce","a","more","grammatically","regular","language","than","any","language","that","has","evolved","naturally",".","This","#$Class","includes","languages","like","Esperanto","that","were","created","to","facilitate","international","communication")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':67536).
lisp_trans(documentation(xtConstructedLanguage,xtChineseLanguage,s("#$ConstructedLanguage","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","æ","²","¡","æ","\234\","\211\","æ","\234\","ºä","¼","\232\","å","\234\","¨","è","¯","­","è","¨","\200\","ç","¤","¾","å","\214\","ºè","\207\","ªç","\204\","¶","ç","\232\","\204\","æ","¼","\224\","å","\217\","\230\","ç","\232\","\204\","#$HumanLanguage","ï","¼","\214\","å","\217\","\215\","è","\200\","\214\","å","®","\203\","ç","\232\","\204\","æ","\240\","¸","å","¿","\203\","è","¯","­","æ","³","\225\","å","\222\","\214\","è","¯","\215\","æ","±","\207\","æ","\230\","¯","ç","\224\","±","ä","¸","\200\","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","ç","\232\","\204\","è","¯","­","è","¨","\200\","ä","¸","\223\","å","®","¶","æ","\211\","\200\","ç","¼","\226\","é","\200\","\240\","ï","¼","\214\","ä","¸","\200\","è","\210\","¬","ç","\232\","\204\","ç","\233\","®","ç","\232\","\204\","æ","\230\","¯","ä","¸","ºäº","\206\","ç","¼","\226\","å","\210\","¶","ä","¸","\200\","ä","¸","ªæ","\226\","\207\","æ","³","\225\","æ","¯","\224\","å","\205\","¶","ä","»","\226\","ä","»","»","ä","½","\225\","è","\207\","ªç","\204\","¶","æ","¼","\224\","å","\214\","\226\","è","¯","­","è","¨","\200\","æ","\233\","´","æ","\234\","\211\","è","§","\204\","å","\210\","\231\","ç","\232\","\204\","è","¯","­","è","¨","\200\","ã","\200\","\202\","è","¿","\231\","ä","¸","ª","#$Class","å","\214\","\205\","æ","\213\","¬","å","\203\","\217\","ã","\200\","\214\","ä","¸","\226\","ç","\225\","\214\","è","¯","­","ã","\200\","\215\","ç","\232\","\204\","è","¯","­","è","¨","\200\","ï","¼","\214\","å","®","\203\","ä","»","¬","ç","\232\","\204\","å","\207\","º","ç","\216\","°","æ","\230\","¯","ä","¸","ºäº","\206\","ä","¿","\203\","è","¿","\233\","å","\233\","½","é","\231\","\205\","é","\227\","´","ç","\232\","\204\","æ","²","\237\","é","\200\","\232\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':68009).
lisp_trans(=>(xtConstructedLanguage(LANG),exists([PLAN],and(actPlanning(PLAN),result(PLAN,LANG)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':68447).
lisp_trans(genls(tNaturalLanguage,tHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':68590).
lisp_trans(documentation(tNaturalLanguage,vEnglishLanguage,s("The","#$subclass","of","#$HumanLanguages","which","are","not","designed","and","which","evolve","from","generation","to","generation",".","This","#$Class","includes","all","of","the","national","languages",",","e",".","g",".","English",",","Spanish",",","Japanese",",","etc",".","Note","that","this","class","includes","dialects","of","natural","languages",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':68631).
lisp_trans(documentation(tNaturalLanguage,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$subclass","ç","\232\","\204\","#$HumanLanguage","ï","¼","\214\","é","\235\","\236\","ç","\224\","±","è","®","¾","è","®","¡","è","\200\","\214\","æ","\235\","¥","ï","¼","\214\","è","\200\","\214\","æ","\230\","¯","ç","»","\217\","è","¿","\207\","ä","¸","\226\","ä","¸","\226\","ä","»","£","ä","»","£","æ","¼","\224\","å","\217\","\230\","è","\200\","\214\","æ","\210\","\220\","ã","\200\","\202\","è","¿","\231\","ä","¸","ª","#$Class","å","\214\","\205\","æ","\213\","¬","æ","\211\","\200\","æ","\234\","\211\","å","\233\","½","å","®","¶","è","¯","­","è","¨","\200\","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","è","\213\","±","è","¯","­","ã","\200\","\201\","è","¥","¿","ç","\217\","­","ç","\211\","\231\","è","¯","­","ã","\200\","\201\","æ","\227\","¥","æ","\234\","¬","è","¯","­","ç","­","\211\","ç","­","\211\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ªç","±","»","å","\210\","«","ä","¹","\237\","å","\214\","\205\","æ","\213\","¬","è","\207\","ªç","\204\","¶","è","¯","­","è","¨","\200\","ç","\232\","\204\","æ","\226\","¹","è","¨","\200\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':68941).
lisp_trans(genls(xtManualHumanLanguage,tHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69241).
lisp_trans(documentation(xtManualHumanLanguage,vEnglishLanguage,s("A","#$ManualHumanLanguage","is","a","#$HumanLanguage","which","has","as","its","medium","gestures","and","movement",",","such","as","the","shape",",","position",",","and","movement","of","the","hands",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69286).
lisp_trans(documentation(xtManualHumanLanguage,xtChineseLanguage,s("#$ManualHumanLanguage","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","ç","\224\","¨","æ","\211\","\213\","å","\212\","¿","å","\222\","\214\","å","\212\","¨","ä","½","\234\","æ","\235\","¥","è","¡","¨","è","¾","¾","ç","\232\","\204\","#$HumanLanguage","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","å","\203\","\217\","æ","\211\","\213\","ç","\232\","\204\","å","½","¢","ç","\212\","¶","ã","\200\","\201\","ä","½","\215\","ç","½","®","å","\222\","\214\","å","\212\","¨","ä","½","\234\","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69488).
lisp_trans(genls(xtSpokenHumanLanguage,tHumanLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69673).
lisp_trans(documentation(xtSpokenHumanLanguage,vEnglishLanguage,s("A","#$SpokenHumanLanguage","is","a","#$HumanLanguage","which","has","as","its","medium","the","human","voice",".","It","can","also","be","represented","visually","through","writing",",","although","not","all","#$SpokenHumanLanguages","have","a","codified","written","form",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69718).
lisp_trans(documentation(xtSpokenHumanLanguage,xtChineseLanguage,s("#$SpokenHumanLanguage","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","ç","\224\","¨","äººç","±","»","ç","\232\","\204\","å","£","°","é","\237\","³","æ","\235\","¥","è","¡","¨","è","¾","¾","ç","\232\","\204\","#$HumanLanguage","ã","\200\","\202\","å","®","\203\","ä","¹","\237\","å","\217\","¯","ä","»","¥","ç","\224\","¨","ä","¹","¦","å","\206\","\231\","ï","¼","\214\","ä","»","¥","è","§","\206\","å","\203\","\217\","ç","\232\","\204\","å","½","¢","å","¼","\217\","æ","\235\","¥","è","¡","¨","è","¾","¾","ï","¼","\214\","å","\217\","¯","æ","\230\","¯","ä","¸","\215\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$SpokenHumanLanguage","é","\203\","½","ç","¼","\226\","çº","\202\","æ","\234\","\211\","ä","¹","¦","é","\235\","¢","è","¯","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':69981).
lisp_trans(tNaturalLanguage(vEnglishLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70242).
lisp_trans(xtSpokenHumanLanguage(vEnglishLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70285).
lisp_trans(documentation(vEnglishLanguage,vEnglishLanguage,s("A","Germanic","language","that","incorporates","many","roots","from","the","Romance","languages",".","It","is","the","official","language","of","the","#$UnitedStates",",","the","#$UnitedKingdom",",","and","many","other","countries",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70332).
lisp_trans(documentation(vEnglishLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","å","\214\","\205\","æ","\213\","¬","å","¾","\210\","å","¤","\232\","ç","½","\227\","æ","\233\","¼","è","¯","­","æ","\227\","\217\","å","­","\227\","æ","\240\","¹","ç","\232\","\204\","æ","\227\","¥","è","\200\","³","æ","\233\","¼","è","¯","­","æ","\227\","\217\","ï","¼","\214\","å","®","\203\","æ","\230\","¯","#$UnitedStates","ï","¼","\214\","#$UnitedKingdom","å","\222\","\214\","å","¾","\210\","å","¤","\232\","å","\205\","¶","ä","»","\226\","å","\233\","½","å","®","¶","ç","\232\","\204\","å","®","\230\","æ","\226\","¹","è","¯","­","è","¨","\200\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70558).
lisp_trans(genls(tSumoWord,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70754).
lisp_trans(documentation(tSumoWord,vEnglishLanguage,s("A","term","of","a","#$Language","that","represents","a","concept",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70791).
lisp_trans(documentation(tSumoWord,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\237\","\220\","ç","§","\215\","#$Language","æ","\235\","¥","è","¡","¨","è","¾","¾","ä","¸","\200\","ä","¸","ªæ","¦","\202\","å","¿","µç","\232\","\204\","è","¯","\215\","è","¯","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70880).
lisp_trans(genls(ftFormula,ftSentence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':70978).
lisp_trans(documentation(ftFormula,vEnglishLanguage,s("A","syntactically","well","-","formed","formula","in","the","SUO-KIF","knowledge","representation","language",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71006).
lisp_trans(documentation(ftFormula,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ªå","\217\","¥","æ","³","\225\","ç","»","\223\","æ","\236\","\204\","è","\211\","¯","å","¥","½","ã","\200\","\201\","ä","»","¥","SUO","-","KIFç","\237\","¥","è","¯","\206\","è","¡","¨","ç","¤","ºè","¯","­","è","¨","\200\","ç","\232\","\204\","å","\205\","¬","å","¼","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71134).
lisp_trans(genls(tAgent,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71446).
lisp_trans(documentation(tAgent,vEnglishLanguage,s("Something","or","someone","that","can","act","on","its","own","and","produce","changes","in","the","world",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71470).
lisp_trans(documentation(tAgent,xtChineseLanguage,s("è","\203\","½","å","¤","\237\","è","\207\","ªä","¸","»","è","¡","\214\","å","\212\","¨","ã","\200\","\201\","å","¹","¶","å","¯","¹","ä","¸","\226\","ç","\225\","\214\","ä","½","\234\","å","\207\","ºæ","\224\","¹","å","\217\","\230\","ç","\232\","\204\","äººå","\222\","\214\","ç","\211\","©","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71589).
lisp_trans(=>(tAgent(AGENT),exists([PROC],capability(PROC,agent,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71691).
lisp_trans(genls(mobSentientAgent,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':71778).
lisp_trans(documentation(mobSentientAgent,vEnglishLanguage,s("A","#$SentientAgent","is","an","#$Agent","that","is","capable","of","#$Perception","and","experiences","some","level","of","consciousness","(","see","#$ConsciousnessAttribute",")",".","If","the","#$Agent","is","able","to","reason","at","a","comparatively","high","level","(","evinced","by","the","ability","to","learn",",","plan",",","and","feel","emotions",")",",","then","it","is","also","an","instance","of","#$CognitiveAgent",".","A","#$DomesticAnimal","is","a","#$SentientAgent",",","but","may","or","may","not","be","a","#$CognitiveAgent",",","depending","on","the","type","of","#$Animal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':72175).
lisp_trans(documentation(mobSentientAgent,xtChineseLanguage,s("#$SentientAgent","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\203\","½","å","¤","\237\","#$Perception","(","æ","\204\","\237\","ç","\237\","¥",")","ç","\232\","\204\","#$Agentï","¼","\214\","å","¹","¶","ä","¸","\224\","å","\234\","¨","æ","\237\","\220\","ç","¨","\213\","åº","¦","ä","¸","\212\","è","\203\","½","æ","\204\","\237\","å","\217\","\227\","å","\210\","°","æ","\204\","\217\","è","¯","\206\","ï","¼","\210\","å","\220\","\214\","æ","\227\","¶","å","\217\","\202\","è","\200\","\203\","#$ConsciousnessAttribute",")","ã","\200\","\202\","å","¦","\202\","æ","\236\","\234\","ä","¸","\200\","ä","¸","ª","#$Agent","è","\203\","½","å","¤","\237\","ä","»","¥","ç","\233\","¸","å","¯","¹","é","«","\230\","å","±","\202\","æ","¬","¡","ç","\232\","\204\","ç","\220\","\206\","æ","\231\","ºå","\216\","»","æ","\200\","\235\","è","\200\","\203\","ç","\232\","\204\","è","¯","\235\","ï","¼","\210\","è","¡","¨","ç","\216\","°","å","\207\","ºè","\203\","½","å","¤","\237\","å","­","¦","ä","¹","\240\","ã","\200\","\201\","è","®","¡","å","\210\","\222\","å","\222\","\214\","ä","½","\223\","ä","¼","\232\","æ","\203\","\205\","æ","\204\","\237\",")","ï","¼","\214\","é","\202\","£","ä","¹","\210\","è","¿","\231\","ä","¸","ªä","¹","\237\","æ","\230\","¯","#$CognitiveAgent","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\","#$DomesticAnimal","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$SentientAgentï","¼","\214\","ä","½","\206\","æ","\230\","¯","å","®","\203\","æ","\230\","¯","ä","¸","\215\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$CognitiveAgent","å","\215\","´","ç","¡","®","å","®","\232\","äº","\216\","ç","©","¶","ç","«","\237\","å","®","\203\","æ","\230\","¯","å","\223\","ªä","¸","\200\","ç","§","\215\","#$Animalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':72655).
lisp_trans(genls(mobCognitiveAgent,mobSentientAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':73166).
lisp_trans(documentation(mobCognitiveAgent,vEnglishLanguage,s("A","#$CognitiveAgent","is","an","#$Agent","that","has","the","ability","to","reason",",","deliberate",",","make","plans",",","and","experience","emotions",".","Although","#$Human","is","a","subclass","of","#$CognitiveAgent",",","there","may","be","instances","of","#$CognitiveAgent","which","are","not","also","instances","of","#$Human",".","For","example",",","#$Primates",",","dolphins",",","whales",",","and","some","extraterrestrials","(","if","they","exist",")","might","be","considered","#$CognitiveAgents",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':73734).
lisp_trans(documentation(mobCognitiveAgent,xtChineseLanguage,s("#$CognitiveAgent","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\203\","½","å","¤","\237\","æ","\200\","\235\","è","\200\","\203\","ã","\200\","\201\","æ","·","±","æ","\200\","\235\","ç","\206\","\237\","è","\231\","\221\","ã","\200\","\201\","è","®","¡","å","\210\","\222\","å","\222\","\214\","ä","½","\223\","ä","¼","\232\","æ","\204\","\237\","æ","\203\","\205\","ç","\232\","\204\","#$Agentã","\200\","\202\","è","\231\","½","ç","\204\","¶","#$Human","æ","\230\","¯","#$CognitiveAgent","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","ä","¹","\237\","å","\217\","¯","ä","»","¥","å","\207\","ºç","\216\","°","é","\235\","\236\","#$Human","è","\200\","\214\","å","\215\","´","æ","\230\","¯","#$CognitiveAgent","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$Primateã","\200\","\201\","æµ","·","è","±","\232\","ã","\200\","\201\","é","²","¸","é","±","¼","å","\222\","\214\","å","¤","\226\","æ","\230\","\237\","äººï","¼","\210\","å","¦","\202\","æ","\236\","\234\","å","®","\203\","ä","»","¬","å","­","\230\","å","\234\","¨","ç","\232\","\204\","è","¯","\235\",")","å","\217\","¯","ä","»","¥","ç","®","\227\","æ","\230\","¯","#$CognitiveAgentã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':74160).
lisp_trans(genls(mobLegalAgent,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':74745).
lisp_trans(documentation(mobLegalAgent,vEnglishLanguage,s("A","#$LegalAgent","is","an","#$Agent","that","is","allowed","by","law","to","to","act","and","be","treated","as","a","legal","person","for","certain","purposes",",","such","as","being","a","party","to","a","lawsuit",",","owning","property",",","and","entering","into","a","contract",".","Typically",",","a","#$LegalAgent","is","either","an","adult","#$Human","or","some","type","of","#$Organization",".","Depending","on","the","prevailing","legal","system","in","a","given","time","and","location",",","#$Humans","in","general",",","as","well","as","other","#$CognitiveAgents",",","typically","will","have","additional","legal","rights","and","obligations","beyond","those","accorded","to","#$LegalAgents",".","See","the","Wikipedia","description","of","<","a","href","=","http",":","/","/","en",".","wikipedia",".","org","/","wiki","/","Juristic","_","person",">","Juristic","person","<","/","a",">",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':74786).
lisp_trans(documentation(mobLegalAgent,xtChineseLanguage,s("#$LegalAgent","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\234\","¨","æ","³","\225\","å","¾","\213\","ä","¸","\212\","è","\203\","½","å","¤","\237\","ä","¸","ºæ","\237\","\220\","ç","§","\215\","ç","\233\","®","ç","\232\","\204\","ä","»","¥","æ","³","\225\","äººèº","«","ä","»","½","è","¡","\214\","äº","\213\","å","\222\","\214\","è","¢","«","äººå","¯","¹","å","¾","\205\","ç","\232\","\204\","#$Agentï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","½","\234\","ä","¸","ºè","¯","\211\","è","®","¼","ç","\232\","\204\","å","½","\223\","äº","\213\","äººã","\200\","\201\","æ","\213\","¥","æ","\234\","\211\","è","´","¢","äº","§","å","\222\","\214\","ç","­","¾","è","®","¢","å","\220\","\210\","å","\220\","\214\","ã","\200\","\202\","é","\200\","\232\","å","¸","¸","ä","¸","\200\","ä","¸","ª","#$LegalAgent","è","¦","\201\","ä","¸","\215\","æ","\230\","¯","æ","\210\","\220\","å","¹","´","ç","\232\","\204\","#$Human","å","°","±","æ","\230\","¯","æ","\237\","\220\","ç","±","»","#$Organizationã","\200\","\202\","è","§","\206\","ä","¹","\216\","å","½","\223\","æ","\227\","¶","å","½","\223\","å","\234\","°","ç","\233\","\233\","è","¡","\214\","ç","\232\","\204\","æ","³","\225\","å","\210\","¶","ï","¼","\214\","ä","¸","\200\","è","\210\","¬","æ","\235\","¥","è","¯","´","#$Human","å","\222\","\214\","å","\205\","¶","ä","»","\226\","ç","\232\","\204\","#$CognitiveAgent","é","\200\","\232\","å","¸","¸","æ","\213\","¥","æ","\234\","\211\","è","¶","\205\","è","¿","\207\","èµ","\213\","äº","\210\","ç","»","\231\","#$LegalAgent","ç","\232\","\204\","é","¢","\235\","å","¤","\226\","ç","\232\","\204\","æ","³","\225\","å","®","\232\","æ","\235\","\203\","å","\210\","©","å","\222\","\214\","ä","¹","\211\","å","\212\","¡","ã","\200\","\202\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","è","¿","\231\","ä","¸","ªç","»","´","å","\237\","ºç","\231\","¾","ç","§","\221\","ç","½","\221\","å","\235\","\200\","ç","\232\","\204\","æ","³","¨","è","§","£","<","ahref","=","http",":","/","/","en",".","wikipedia",".","org","/","wiki","/","Juristic","_","person",">","Juristicperson","<","/","a",">","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':75454).
lisp_trans(<=>(holdsDuring(TIME,mobLegalAgent(AGENT)),holdsDuring(TIME,or(capability(actLegalAction,agent,AGENT),capability(actLegalAction,patient,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76052).
lisp_trans(rtBinaryPredicate(leader),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76235).
lisp_trans(rtAsymmetricRelation(leader),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76269).
lisp_trans(rtSingleValuedRelation(leader),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76306).
lisp_trans(argIsa(leader,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76345).
lisp_trans(argIsa(leader,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76369).
lisp_trans(documentation(leader,vEnglishLanguage,s("(","#$leader","?","INSTITUTION","?","PERSON",")","means","that","the","leader","of","?","INSTITUTION","is","?","PERSON",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76393).
lisp_trans(=>(holdsDuring(TIME,leader(X,Y)),holdsDuring(TIME,sumoAttribute(Y,actLiving))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76517).
lisp_trans(genls(actProcess,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76604).
lisp_trans(documentation(actProcess,vEnglishLanguage,s("The","class","of","things","that","happen","and","have","temporal","parts","or","stages",".","Examples","include","extended","events","like","a","football","match","or","a","race",",","actions","like","#$Pursuing","and","#$Reading",",","and","biological","processes",".","The","formal","definition","is",":","anything","that","occurs","in","time","but","is","not","an","#$Object",".","Note","that","a","#$Process","may","have","participants","'","inside","'","it","which","are","#$Objects",",","such","as","the","players","in","a","football","match",".","In","a","4","D","ontology",",","a","#$Process","is","something","whose","spatiotemporal","extent","is","thought","of","as","dividing","into","temporal","stages","roughly","perpendicular","to","the","time","-","axis",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':76632).
lisp_trans(documentation(actProcess,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªç","±","»","å","\210\","«","å","±","\236\","äº","\216\","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","äº","\213\","ç","\211\","©","ï","¼","\214\","å","®","\203\","å","\205\","·","æ","\234\","\211\","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","æ","\210\","\226\","é","\230\","¶","æ","®","µã","\200\","\202\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","ï","¼","\232\","å","\216\","\206\","æ","\227\","¶","é","¢","\207\","é","\225\","¿","ç","\232\","\204\","äº","\213\","ä","»","¶","å","¦","\202\","è","¶","³","ç","\220\","\203\","æ","¯","\224\","èµ","\233\","æ","\210\","\226\","èµ","\233\","è","·","\221\","ï","¼","\214\","è","¡","\214\","å","\212\","¨","å","¦","\202\","è","¿","½","è","¸","ªã","\200\","\201\","é","\230\","\205\","è","¯","»","å","\222\","\214\","å","\217\","\212\","å","\220\","\204\","ç","§","\215\","ç","\224\","\237\","ç","\211\","©","è","¿","\207\","ç","¨","\213\","ã","\200\","\202\","å","®","\203\","ç","\232\","\204\","å","½","¢","å","¼","\217\","å","®","\232\","ä","¹","\211\","æ","\230\","¯","ï","¼","\232\","ä","»","»","ä","½","\225\","å","\234\","¨","æ","\237\","\220\","æ","\227\","¶","é","\227\","´","å","\217\","\221\","ç","\224\","\237\","è","\200\","\214\","å","\217\","\210\","ä","¸","\215\","æ","\230\","¯","#$Object","ç","\232\","\204\","å","­","\230\","å","\234\","¨","ç","\235\","\200\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$Process","å","\206\","\205\","å","\217\","¯","ä","»","¥","æ","\234\","\211\","#$Object","å","\217\","\202\","å","\212\","\240\","è","\200\","\205\","ä","»","\213\","å","\205\","¥","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ç","\220\","\203\","èµ","\233\","ç","\232\","\204\","ç","\220\","\203\","å","\221\","\230\","ã","\200\","\202\","å","\233\","\233\","ç","»","´","ç","\232\","\204\","ç","\237\","¥","è","¯","\206\","æ","\234\","¬","ä","½","\223\","è","®","ºè","®","¤","ä","¸","º","#$Process","ç","\232\","\204\","æ","\227\","¶","ç","©","ºå","¹","\205\","åº","¦","å","\217\","¯","å","\210\","\206\","æ","\210\","\220\","å","¤","§","çº","¦","å","\222\","\214\","æ","\227\","¶","é","\227\","´","è","½","´","å","¹","³","è","¡","¡","ç","\232\","\204\","æ","\225\","°","ä","¸","ªæ","\227\","¶","é","\227\","´","é","\230\","¶","æ","®","µã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':77230).
lisp_trans(genls(actDualObjectProcess,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':77743).
lisp_trans(documentation(actDualObjectProcess,vEnglishLanguage,s("Any","#$Process","that","requires","two",",","nonidentical","#$patients",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':77780).
lisp_trans(documentation(actDualObjectProcess,xtChineseLanguage,s("ä","»","»","ä","½","\225\","é","\234\","\200\","è","¦","\201\","ä","¸","¤","ä","¸","ªä","¸","\215\","å","\220\","\214\","#$patient","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':77890).
lisp_trans(=>(actDualObjectProcess(PROCESS),exists([OBJ1,OBJ2],and(patient(PROCESS,OBJ1),patient(PROCESS,OBJ2),not(equal(OBJ1,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':77995).
lisp_trans(genls(actSingleAgentProcess,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78183).
lisp_trans(documentation(actSingleAgentProcess,vEnglishLanguage,'SingleAgentProcess is the #$Class of all #$Processes that require exactly one #$agent in order to occur.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78221).
lisp_trans(documentation(actSingleAgentProcess,xtChineseLanguage,s("#$SingleAgentProcess","è","¿","\231\","ä","¸","ª","#$Class","é","\207\","\214\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$Process","é","\203\","½","é","\234\","\200\","è","¦","\201\","æ","\201\","°","å","¥","½","ä","¸","\200\","ä","¸","ª","#$agent","æ","\211\","\215\","è","\203\","½","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78381).
lisp_trans(=>(actSingleAgentProcess(PROC),exists([AGENT],agent(PROC,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78542).
lisp_trans(=>(and(actSingleAgentProcess(PROC),agent(PROC,AGENT_1),agent(PROC,AGENT_2)),and(equal(AGENT_1,AGENT_2),not(exists([AGENT_3],and(agent(PROC,AGENT_3),not(equal(AGENT_3,AGENT_1))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78631).
lisp_trans(genls(tSumoAbstract,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78938).
lisp_trans(disjointDecomposition(tSumoAbstract,vtQuantity,vtSumoAttribute,tCol,tRelation,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':78965).
lisp_trans(documentation(tSumoAbstract,vEnglishLanguage,s("Properties","or","qualities","as","distinguished","from","any","particular","embodiment","of","the","properties","/","qualities","in","a","physical","medium",".","Instances","of","Abstract","can","be","said","to","exist","in","the","same","sense","as","mathematical","objects","such","as","sets","and","relations",",","but","they","cannot","exist","at","a","particular","place","and","time","without","some","physical","encoding","or","embodiment",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':79049).
lisp_trans(documentation(tSumoAbstract,xtChineseLanguage,s("è","¿","\231\","äº","\233\","ç","\211\","¹","è","´","¨","æ","\210\","\226\","è","´","¨","é","\207\","\217\","ï","¼","\214\","å","\222\","\214\","ä","»","»","ä","½","\225\","ä","»","¥","ç","\211\","©","ç","\220\","\206\","åª","\222\","ä","»","\213\","å","\214\","\226\","èº","«","ç","\232\","\204\","ç","\211\","¹","è","´","¨","/","è","´","¨","é","\207\","\217\","ä","¸","\215\","å","\220\","\214\","ã","\200\","\202\","æ","\212\","½","è","±","¡","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\234\","¨","æ","\204\","\217\","ä","¹","\211\","ä","¸","\212\","ï","¼","\214\","å","\217\","¯","ä","»","¥","è","¯","´","æ","\230\","¯","å","\203\","\217\","æ","\225\","°","å","­","¦","ç","\211\","©","ä","½","\223\","å","¦","\202\","é","\233\","\206\","å","\220\","\210\","å","\222\","\214\","å","\205\","³","ç","³","»","è","\210\","¬","å","­","\230\","å","\234\","¨","ï","¼","\214\","ä","½","\206\","æ","\230\","¯","å","®","\203\","ä","»","¬","ä","¸","\215\","è","\203\","½","æ","²","¡","æ","\234\","\211\","ä","»","»","ä","½","\225\","ç","\211\","©","ç","\220\","\206\","ç","¼","\226\","ç","\240\","\201\","æ","\210\","\226\","å","\214\","\226\","èº","«","ä","¾","¿","å","­","\230\","å","\234\","¨","äº","\216\","ç","\211\","¹","å","®","\232\","ç","\232\","\204\","æ","\227\","¶","é","\227\","´","å","\222\","\214\","å","\234\","°","ç","\202\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':79426).
lisp_trans(=>(tSumoAbstract(ABS),not(exists([POINT],or(located(ABS,POINT),time(ABS,POINT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':79819).
lisp_trans(genls(vtQuantity,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':79965).
lisp_trans(documentation(vtQuantity,vEnglishLanguage,s("Any","specification","of","how","many","or","how","much","of","something","there","is",".","Accordingly",",","there","are","two","subclasses","of","#$Quantity",":","#$Number","(","how","many",")","and","#$PhysicalQuantity","(","how","much",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':79994).
lisp_trans(documentation(vtQuantity,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","»","ä","½","\225\","è","¡","¨","ç","¤","ºä","¸","\234\","è","¥","¿","æ","\225\","°","é","\207\","\217\","æ","\210\","\226\","å","¤","\232\","å","°","\221\","ç","\232\","\204\","è","§","\204\","æ","\240\","¼","ã","\200\","\202\","æ","\225\","\205\","æ","­","¤","#$Quantity","å","\205\","±","æ","\234\","\211\","ä","¸","¤","ä","¸","ª","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\232\","#$Number","ï","¼","\210\","æ","\225\","°","é","\207\","\217\",")","å","\222\","\214\","#$PhysicalQuantity","(","å","¤","\232\","å","°","\221\",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80211).
lisp_trans(genls(vtSumoAttribute,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80403).
lisp_trans(sumo_partition(vtSumoAttribute,vtInternalAttribute,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80514).
lisp_trans(documentation(vtSumoAttribute,vEnglishLanguage,s("Qualities","which","we","cannot","or","choose","not","to","reify","into","subclasses","of",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80574).
lisp_trans(documentation(vtSumoAttribute,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\210\","\221\","ä","»","¬","ä","¸","\215\","è","\203\","½","å","¤","\237\","æ","\210\","\226\","é","\200\","\211\","æ","\213\","©","ä","¸","\215\","å","\216\","»","å","\205\","·","ä","½","\223\","å","\214\","\226\","ä","¸","º","#$Object","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","è","´","¨","é","\207\","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80688).
lisp_trans(rtBinaryPredicate(sumoProperty),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80817).
lisp_trans(argIsa(sumoProperty,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80853).
lisp_trans(argIsa(sumoProperty,2,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80880).
lisp_trans(documentation(sumoProperty,vEnglishLanguage,s("This","#$Predicate","holds","between","an","instance","of","#$Entity","and","an","instance","of","#$Attribute",".","(","#$property","?","ENTITY","?","ATTR",")","means","that","?","ENTITY","has","the","#$Attribute","?","ATTR",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':80910).
lisp_trans(documentation(sumoProperty,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Predicate","å","\234\","¨","#$Entity","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\222\","\214\","#$Attribute","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","æ","\210\","\220\","ç","«","\213\","ã","\200\","\202\","(","#$property","?","ENTITY","?","ATTR",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","ENTITY","æ","\234\","\211\","?","ATTR","ç","\232\","\204\","#$Attributeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81114).
lisp_trans(rtAsymmetricRelation(sumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81311).
lisp_trans(rtIrreflexiveRelation(sumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81351).
lisp_trans(rtTotalValuedRelation(sumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81392).
lisp_trans(genlPreds(sumoAttribute,sumoProperty),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81433).
lisp_trans(argIsa(sumoAttribute,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81466).
lisp_trans(documentation(sumoAttribute,vEnglishLanguage,s("(","#$attribute","?","OBJECT","?","PROPERTY",")","means","that","?","PROPERTY","is","a","#$Attribute","of","?","OBJECT",".","For","example",",","(","#$attribute","#$MyLittleRedWagon","#$Red",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81494).
lisp_trans(documentation(sumoAttribute,xtChineseLanguage,s("(","#$attribute","?","OBJECT","?","PROPERTY",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROPERTY","æ","\230\","¯","?","OBJECT","ç","\232\","\204\","#$Attributeã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$attribute","#$MyLittleRedWagon","#$Red",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81674).
lisp_trans(rtAsymmetricRelation(manner),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81855).
lisp_trans(rtIrreflexiveRelation(manner),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81892).
lisp_trans(rtTotalValuedRelation(manner),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81930).
lisp_trans(genlPreds(manner,sumoProperty),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81968).
lisp_trans(argIsa(manner,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':81998).
lisp_trans(disjointRelation(manner,sumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':82024).
lisp_trans(documentation(manner,vEnglishLanguage,s("(","#$manner","?","PROCESS","?","MANNER",")","means","that","the","#$Process","?","PROCESS","is","qualified","by","the","#$Attribute","?","MANNER",".","The","#$Attributes","of","#$Processes","are","usually","denoted","by","adverbs","and","include","things","like","the","speed","of","the","wind",",","the","style","of","a","dance",",","or","the","intensity","of","a","sports","competition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':82060).
lisp_trans(documentation(manner,xtChineseLanguage,s("(","#$manner","?","PROCESS","?","MANNER",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROCESS","è","¿","\231\","ä","¸","ª","#$Process","ç","\224\","±","?","MANNER","è","¿","\231\","ä","¸","ª","#$Attribute","æ","\235\","¥","ä","¿","®","é","¥","°","ã","\200\","\202\","#$Processe","ç","\232\","\204\","#$Attribute","é","\200\","\232\","å","¸","¸","ä","»","¥","å","\211\","¯","è","¯","\215\","æ","\235\","¥","è","¡","¨","ç","¤","ºï","¼","\214\","è","¿","\231\","äº","\233\","å","\214\","\205\","æ","\213\","¬","å","\203\","\217\","é","£","\216\","ç","\232\","\204\","é","\200\","\237\","åº","¦","ã","\200\","\201\","ä","¸","\200\","ä","¸","ªè","\210\","\236\","è","¹","\210\","ç","\232\","\204\","é","£","\216\","æ","\240\","¼","æ","\210\","\226\","ä","¸","\200\","ç","§","\215\","è","¿","\220\","å","\212\","¨","æ","¯","\224\","èµ","\233\","ç","«","\236\","äº","\211\","ç","\232\","\204\","æ","¿","\200\","ç","\203\","\210\","ç","¨","\213\","åº","¦","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':82379).
lisp_trans(rtUnaryFunction(uExtensionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83263).
lisp_trans(rtPartialValuedRelation(uExtensionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83300).
lisp_trans(argIsa(uExtensionFn,1,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83345).
lisp_trans(resultIsa(uExtensionFn,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83378).
lisp_trans(documentation(uExtensionFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Attribute","into","the","#$Class","whose","condition","for","membership","is","the","#$Attribute",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83404).
lisp_trans(documentation(uExtensionFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$UnaryFunction","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Attribute","è","\201\","\224\","ç","³","»","å","\210\","°","å","±","\236\","äº","\216\","è","¿","\231\","ä","¸","ª","#$Attribute","å","±","\236\","æ","\200\","§","æ","\235\","¡","ä","»","¶","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83561).
lisp_trans(genls(vtInternalAttribute,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83816).
lisp_trans(documentation(vtInternalAttribute,vEnglishLanguage,s("Any","#$Attribute","of","an","#$Entity","that","is","an","internal","property","of","the","#$Entity",",","e",".","g",".","its","shape",",","its","color",",","its","fragility",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':83855).
lisp_trans(documentation(vtInternalAttribute,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Entity","ç","\232\","\204\","#$Attributeï","¼","\214\","ä","»","»","ä","½","\225\","å","±","\236\","äº","\216\","#$Entity","å","\206\","\205\","å","\234\","¨","ç","\232\","\204\","ç","\211\","¹","è","´","¨","ï","¼","\214\","å","¦","\202\","å","®","\203\","ç","\232\","\204\","å","½","¢","ç","\212\","¶","ã","\200\","\201\","é","¢","\234\","è","\211\","²","å","\222\","\214\","è","\204\","\206\","å","¼","±","ç","\232\","\204\","ç","¨","\213\","åº","¦","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84031).
lisp_trans(genls(vtPhysicalAttribute,vtInternalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84208).
lisp_trans(documentation(vtPhysicalAttribute,vEnglishLanguage,s("An","#$InternalAttribute","given","by","physical","properties","of","the","object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84255).
lisp_trans(documentation(vtPhysicalAttribute,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\235\","¥","è","\207\","ªç","\211\","©","ä","½","\223\","ç","\232\","\204\","ç","\211\","©","ç","\220\","\206\","ç","\211\","¹","è","´","¨","ç","\232\","\204\","#$InternalAttribute","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84374).
lisp_trans(genls(vtRelationalAttribute,vtSumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84488).
lisp_trans(documentation(vtRelationalAttribute,vEnglishLanguage,s("Any","#$Attribute","that","an","#$Entity","has","by","virtue","of","a","relationship","that","it","bears","to","another","#$Entity","or","set","of","#$Entities",",","e",".","g",".","#$SocialRoles","and","#$PositionalAttributes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84529).
lisp_trans(documentation(vtRelationalAttribute,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Entity","ç","\232\","\204\","#$Attributeï","¼","\214\","å","±","\236\","äº","\216\","ä","»","»","ä","½","\225\","æ","\235\","¥","è","\207\","ª","å","®","\203\","å","\222\","\214\","å","\217\","¦","ä","¸","\200\","ä","¸","ª","#$Entity","æ","\210\","\226\","ä","¸","\200\","ç","»","\204\","#$Entity","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»",".","å","¦","\202\","ï","¼","\232\","#$SocialRole","å","\222\","\214\","#$PositionalAttributeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':84751).
lisp_trans(genls(ftNumber,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85091).
lisp_trans(sumo_partition(ftNumber,ftRealNumber,vtImaginaryNumber,vtComplexNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85118).
lisp_trans(documentation(ftNumber,vEnglishLanguage,s("A","measure","of","how","many","things","there","are",",","or","how","much","there","is",",","of","a","certain","kind",".","#$Numbers","are","subclassed","into","#$RealNumber",",","#$ComplexNumber",",","and","#$ImaginaryNumber",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85178).
lisp_trans(documentation(ftNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","æ","\225\","°","é","\207\","\217\","æ","\210\","\226\","è","\200\","\205\","æ","\237\","\220\","ç","§","\215\","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","å","\210\","\206\","é","\207\","\217\","ã","\200\","\202\","#$Numbers","å","\217\","¯","å","\210\","\206\","ä","¸","º","#$RealNumberã","\200\","\201\","#$ComplexNumber","å","\222\","\214\","#$ImaginaryNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85385).
lisp_trans(rtBinaryPredicate(lessThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85569).
lisp_trans(rtTransitiveRelation(lessThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85605).
lisp_trans(rtIrreflexiveRelation(lessThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85644).
lisp_trans(tSumoRelationExtendedToQuantities(lessThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85684).
lisp_trans(trichotomizingOn(lessThan,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85733).
lisp_trans(argIsa(lessThan,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85772).
lisp_trans(argIsa(lessThan,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85801).
lisp_trans(documentation(lessThan,vEnglishLanguage,s("(","#$lessThan","?","NUMBER1","?","NUMBER2",")","is","true","just","in","case","the","#$Quantity","?","NUMBER1","is","less","than","the","#$Quantity","?","NUMBER2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85830).
lisp_trans(documentation(lessThan,xtChineseLanguage,s("(","#$lessThan","?","NUMBER1","?","NUMBER2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ä","»","¥","é","\230\","²","?","NUMBER1","ç","\232\","\204\","#$Quantity","æ","¯","\224\","?","NUMBER2","ç","\232\","\204\","#$Quantity","è","¦","\201\","å","°","\221\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':85987).
lisp_trans(rtBinaryPredicate(greaterThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86141).
lisp_trans(rtTotalValuedRelation(greaterThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86180).
lisp_trans(rtTransitiveRelation(greaterThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86223).
lisp_trans(rtIrreflexiveRelation(greaterThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86265).
lisp_trans(tSumoRelationExtendedToQuantities(greaterThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86308).
lisp_trans(trichotomizingOn(greaterThan,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86360).
lisp_trans(argIsa(greaterThan,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86402).
lisp_trans(argIsa(greaterThan,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86434).
lisp_trans(genlInverse(greaterThan,lessThan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86466).
lisp_trans(documentation(greaterThan,vEnglishLanguage,s("(","#$greaterThan","?","NUMBER1","?","NUMBER2",")","is","true","just","in","case","the","#$Quantity","?","NUMBER1","is","greater","than","the","#$Quantity","?","NUMBER2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86497).
lisp_trans(documentation(greaterThan,xtChineseLanguage,s("(","#$greaterThan","?","NUMBER1","?","NUMBER2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ä","»","¥","é","\230\","²","?","NUMBER1","ç","\232\","\204\","#$Quantity","æ","¯","\224\","?","NUMBER2","ç","\232\","\204\","#$Quantity","è","¦","\201\","å","¤","§","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86663).
lisp_trans(rtBinaryPredicate(lessThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86822).
lisp_trans(rtPartialOrderingRelation(lessThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86867).
lisp_trans(tSumoRelationExtendedToQuantities(lessThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86920).
lisp_trans(trichotomizingOn(lessThanOrEqualTo,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':86978).
lisp_trans(argIsa(lessThanOrEqualTo,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87026).
lisp_trans(argIsa(lessThanOrEqualTo,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87064).
lisp_trans(documentation(lessThanOrEqualTo,vEnglishLanguage,s("(","#$lessThanOrEqualTo","?","NUMBER1","?","NUMBER2",")","is","true","just","in","case","the","#$Quantity","?","NUMBER1","is","less","than","or","equal","to","the","#$Quantity","?","NUMBER2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87102).
lisp_trans(documentation(lessThanOrEqualTo,xtChineseLanguage,s("(","#$lessThanOrEqualTo","?","NUMBER1","?","NUMBER2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ä","»","¥","é","\230\","²","?","NUMBER1","ç","\232\","\204\","#$Quantity","å","°","\221\","äº","\216\","æ","\210\","\226\","è","\200\","\205\","ç","­","\211\","äº","\216\","?","NUMBER2","ç","\232\","\204\","#$Quantityã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87289).
lisp_trans(<=>(lessThanOrEqualTo(NUMBER1,NUMBER2),or(equal(NUMBER1,NUMBER2),lessThan(NUMBER1,NUMBER2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87468).
lisp_trans(rtBinaryPredicate(greaterThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87585).
lisp_trans(rtPartialOrderingRelation(greaterThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87633).
lisp_trans(tSumoRelationExtendedToQuantities(greaterThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87689).
lisp_trans(trichotomizingOn(greaterThanOrEqualTo,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87750).
lisp_trans(argIsa(greaterThanOrEqualTo,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87801).
lisp_trans(argIsa(greaterThanOrEqualTo,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87842).
lisp_trans(genlInverse(greaterThanOrEqualTo,lessThanOrEqualTo),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87883).
lisp_trans(documentation(greaterThanOrEqualTo,vEnglishLanguage,s("(","#$greaterThanOrEqualTo","?","NUMBER1","?","NUMBER2",")","is","true","just","in","case","the","#$Quantity","?","NUMBER1","is","greater","than","or","equal","to","the","#$Quantity","?","NUMBER2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':87932).
lisp_trans(documentation(greaterThanOrEqualTo,xtChineseLanguage,s("(","#$greaterThanOrEqualTo","?","NUMBER1","?","NUMBER2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ä","»","¥","é","\230\","²","?","NUMBER1","ç","\232\","\204\","#$Quantity","å","¤","\232\","äº","\216\","æ","\210\","\226\","è","\200\","\205\","ç","­","\211\","äº","\216\","?","NUMBER2","ç","\232\","\204\","#$Quantityã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88128).
lisp_trans(<=>(greaterThanOrEqualTo(NUMBER1,NUMBER2),or(equal(NUMBER1,NUMBER2),greaterThan(NUMBER1,NUMBER2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88313).
lisp_trans(genls(ftRealNumber,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88436).
lisp_trans(sumo_partition(ftRealNumber,ftNegativeRealNumber,ftNonnegativeRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88465).
lisp_trans(sumo_partition(ftRealNumber,vtRationalNumber,vtIrrationalNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88529).
lisp_trans(documentation(ftRealNumber,vEnglishLanguage,s("Any","#$Number","that","can","be","expressed","as","a","(","possibly","infinite",")","decimal",",","i",".","e",".","any","#$Number","that","has","a","position","on","the","number","line",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88584).
lisp_trans(documentation(ftRealNumber,xtChineseLanguage,s("ä","»","»","ä","½","\225\","å","\217\","¯","ä","»","¥","è","¡","¨","è","¾","¾","ä","¸","ºä","¸","\200\","ä","¸","ªï","¼","\210\","å","\217\","¯","è","\203\","½","æ","\230\","¯","æ","\227\","\240\","é","\231\","\220\","ç","\232\","\204\",")","å","\215\","\201\","è","¿","\233\","å","\210\","¶","ç","\232\","\204\","#$Numberï","¼","\214\","å","\215\","³","ä","»","»","ä","½","\225\","å","\234\","¨","æ","\225\","°","å","­","\227\","çº","¿","ä","¸","\212\","ä","½","\224\","æ","\234\","\211\","ä","¸","\200\","å","¸","­","ä","½","\215\","#$Numberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88756).
lisp_trans(genls(vtImaginaryNumber,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88928).
lisp_trans(documentation(vtImaginaryNumber,vEnglishLanguage,s("Any","#$Number","that","is","the","result","of","multiplying","a","#$RealNumber","by","the","square","root","of","-1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':88962).
lisp_trans(documentation(vtImaginaryNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","°","\206\","ä","¸","\200\","ä","¸","ª","#$RealNumber","ä","¹","\230\","ä","»","¥","-1","ç","\232\","\204\","å","¹","³","æ","\226\","¹","æ","\240\","¹","ç","\232\","\204\","ç","§","¯","ï","¼","\214\","å","®","\203\","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","»","»","ä","½","\225\","ä","¸","\200\","ä","¸","ªç","\232\","\204\","#$Numberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89100).
lisp_trans(=>(vtImaginaryNumber(NUMBER),exists([REAL],and(ftRealNumber(REAL),equal(NUMBER,uMultiplicationFn(REAL,vSquareRootFn(-1)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89250).
lisp_trans(genls(vtRationalNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89431).
lisp_trans(documentation(vtRationalNumber,vEnglishLanguage,s("Any","#$RealNumber","that","is","the","product","of","dividing","two","#$Integers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89468).
lisp_trans(documentation(vtRationalNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$Integer","ç","\233\","¸","é","\231\","¤","ç","\232\","\204\","å","\225\","\206\","ï","¼","\214\","å","®","\203\","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","»","»","ä","½","\225\","ä","¸","\200\","ä","¸","ªç","\232\","\204\","#$RealNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89582).
lisp_trans(genls(vtIrrationalNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89718).
lisp_trans(documentation(vtIrrationalNumber,vEnglishLanguage,s("Any","#$RealNumber","that","is","not","also","a","#$RationalNumber",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89757).
lisp_trans(documentation(vtIrrationalNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","»","ä","½","\225\","ä","¸","\200\","ä","¸","ªä","¸","\215\","æ","\230\","¯","#$RationalNumber","ç","\232\","\204\","#$RealNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89862).
lisp_trans(genls(ftNonnegativeRealNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':89977).
lisp_trans(documentation(ftNonnegativeRealNumber,vEnglishLanguage,s("A","#$RealNumber","that","is","greater","than","or","equal","to","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90021).
lisp_trans(documentation(ftNonnegativeRealNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¤","§","äº","\216\","æ","\210\","\226\","ç","­","\211\","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$RealNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90131).
lisp_trans(<=>(ftNonnegativeRealNumber(NUMBER),and(greaterThanOrEqualTo(NUMBER,0),ftRealNumber(NUMBER))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90238).
lisp_trans(genls(ftPositiveRealNumber,ftNonnegativeRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90373).
lisp_trans(documentation(ftPositiveRealNumber,vEnglishLanguage,s("A","#$RealNumber","that","is","greater","than","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90425).
lisp_trans(documentation(ftPositiveRealNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¤","§","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$RealNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90520).
lisp_trans(<=>(ftPositiveRealNumber(NUMBER),and(greaterThan(NUMBER,0),ftRealNumber(NUMBER))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90615).
lisp_trans(genls(ftNegativeRealNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90738).
lisp_trans(documentation(ftNegativeRealNumber,vEnglishLanguage,s("A","#$RealNumber","that","is","less","than","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90779).
lisp_trans(documentation(ftNegativeRealNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","°","\217\","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$RealNumberã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90871).
lisp_trans(<=>(ftNegativeRealNumber(NUMBER),and(lessThan(NUMBER,0),ftRealNumber(NUMBER))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':90966).
lisp_trans(genls(ftInt,vtRationalNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91086).
lisp_trans(sumo_partition(ftInt,ftOddInteger,ftEvenInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91120).
lisp_trans(sumo_partition(ftInt,vtNegativeInteger,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91163).
lisp_trans(documentation(ftInt,vEnglishLanguage,s("A","negative","or","nonnegative","whole","number",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91218).
lisp_trans(documentation(ftInt,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","´","\237\","æ","\210\","\226\","é","\235\","\236\","è","´","\237\","ç","\232\","\204\","æ","\225\","´","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91300).
lisp_trans(genls(ftEvenInteger,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91380).
lisp_trans(documentation(ftEvenInteger,vEnglishLanguage,s("An","#$Integer","that","is","evenly","divisible","by","2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91411).
lisp_trans(documentation(ftEvenInteger,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\217\","¯","ä","»","¥","è","¢","«","2","æ","\225\","´","é","\231\","¤","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91501).
lisp_trans(genls(ftOddInteger,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91593).
lisp_trans(documentation(ftOddInteger,vEnglishLanguage,s("An","#$Integer","that","is","not","evenly","divisible","by","2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91623).
lisp_trans(documentation(ftOddInteger,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¸","\215\","è","\203\","½","è","¢","«","2","æ","\225\","´","é","\231\","¤","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91716).
lisp_trans(genls(vtPrimeNumber,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91807).
lisp_trans(documentation(vtPrimeNumber,vEnglishLanguage,s("An","#$Integer","that","is","evenly","divisible","only","by","itself","and","1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91838).
lisp_trans(documentation(vtPrimeNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\217\","ªè","\203\","½","è","¢","«","è","\207\","ªå","·","±","æ","\210\","\226\","1","æ","\225\","´","é","\231\","¤","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':91944).
lisp_trans(genls(ftNonnegativeInteger,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92045).
lisp_trans(genls(ftNonnegativeInteger,ftNonnegativeRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92083).
lisp_trans(documentation(ftNonnegativeInteger,vEnglishLanguage,s("An","#$Integer","that","is","greater","than","or","equal","to","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92135).
lisp_trans(documentation(ftNonnegativeInteger,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¤","§","äº","\216\","æ","\210\","\226\","ç","­","\211\","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92240).
lisp_trans(=>(ftNonnegativeInteger(X),greaterThan(X,-1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92341).
lisp_trans(genls(vtNegativeInteger,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92404).
lisp_trans(genls(vtNegativeInteger,ftNegativeRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92439).
lisp_trans(documentation(vtNegativeInteger,vEnglishLanguage,s("An","#$Integer","that","is","less","than","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92485).
lisp_trans(documentation(vtNegativeInteger,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","°","\217\","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92572).
lisp_trans(=>(vtNegativeInteger(X),greaterThan(0,X)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92661).
lisp_trans(genls(ftPositiveInteger,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92720).
lisp_trans(genls(ftPositiveInteger,ftPositiveRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92766).
lisp_trans(documentation(ftPositiveInteger,vEnglishLanguage,s("An","#$Integer","that","is","greater","than","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92812).
lisp_trans(documentation(ftPositiveInteger,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¤","§","äº","\216\","é","\233\","¶","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92902).
lisp_trans(=>(ftPositiveInteger(X),greaterThan(X,0)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':92991).
lisp_trans(genls(ftBinaryNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93050).
lisp_trans(documentation(ftBinaryNumber,vEnglishLanguage,s("Elements","from","the","number","system","with","base","2",".","Every","#$BinaryNumber","is","expressed","as","a","sequence","of","the","digits","1","and","0",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93085).
lisp_trans(documentation(ftBinaryNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","äº","\214\","è","¿","\233\","å","\210\","¶","æ","\225\","°","å","­","\227\","ç","³","»","ç","»","\237\","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","ã","\200\","\202\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$BinaryNumber","é","\203\","½","æ","\230\","¯","ä","»","¥","1","è","\200\","\214\","0","ç","\232\","\204\","æ","\216\","\222\","å","\210\","\227\","æ","\235\","¥","è","¡","¨","ç","¤","ºç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93248).
lisp_trans(genls(vtComplexNumber,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93400).
lisp_trans(disjointWith(vtComplexNumber,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93432).
lisp_trans(documentation(vtComplexNumber,vEnglishLanguage,s("A","#$Number","that","has","the","form",":","x","+","yi",",","where","x","and","y","are","#$RealNumbers","and","i","is","the","square","root","of","-1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93468).
lisp_trans(documentation(vtComplexNumber,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\234\","\211\","æ","\235\","¥","è","\207\","ªx","+","yiå","½","¢","å","¼","\217\","ç","\232\","\204\","#$Numberï","¼","\214\","xå","\222\","\214\","yæ","\230\","¯","#$RealNumberï","¼","\214\","iæ","\230\","¯","-1","ç","\232\","\204\","å","¹","³","æ","\226\","¹","æ","\240\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93618).
lisp_trans(=>(vtComplexNumber(NUMBER),exists([REAL1,REAL2],and(ftRealNumber(REAL1),ftRealNumber(REAL2),equal(NUMBER,uAdditionFn(REAL1,uMultiplicationFn(REAL2,vSquareRootFn(-1))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':93760).
lisp_trans(genls(vtPhysicalQuantity,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':94046).
lisp_trans(sumo_partition(vtPhysicalQuantity,vtConstantQuantity,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':94083).
lisp_trans(documentation(vtPhysicalQuantity,vEnglishLanguage,s("A","#$PhysicalQuantity","is","a","measure","of","some","quantifiable","aspect","of","the","modeled","world",",","such","as","'","the","earth","'s","diameter","'","(","a","constant","length",")","and","'","the","stress","in","a","loaded","deformable","solid","'","(","a","measure","of","stress",",","which","is","a","function","of","three","spatial","coordinates",")",".","Every","#$PhysicalQuantity","is","either","a","#$ConstantQuantity","or","#$FunctionQuantity",".","Instances","of","#$ConstantQuantity","are","dependent","on","a","#$UnitOfMeasure",",","while","instances","of","#$FunctionQuantity","are","#$Functions","that","map","instances","of","#$ConstantQuantity","to","other","instances","of","#$ConstantQuantity","(","e",".","g",".",",","a","#$TimeDependentQuantity","is","a","#$FunctionQuantity",")",".","Although","the","name","and","definition","of","#$PhysicalQuantity","is","borrowed","from","physics",",","a","#$PhysicalQuantity","need","not","be","material",".","Aside","from","the","dimensions","of","length",",","time",",","velocity",",","etc",".",",","nonphysical","dimensions","such","as","currency","are","also","possible",".","Accordingly",",","amounts","of","money","would","be","instances","of","#$PhysicalQuantity",".","A","#$PhysicalQuantity","is","distinguished","from","a","pure","#$Number","by","the","fact","that","the","former","is","associated","with","a","dimension","of","measurement",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':94146).
lisp_trans(documentation(vtPhysicalQuantity,xtChineseLanguage,'PhysicalQuantityæ\230\¯ä¸\200\ç§\215\ç\224\¨æ\235\¥è¡¡é\207\\217\å»ºæ¨¡ä¸\226\ç\225\\214\ä¸\212\ç\232\\204\ ä¸\200\äº\233\å\217\¯ä»¥é\207\\217\åº¦ç\232\\204\é\203\¨å\210\\206\ï¼\214\ä¾\213\å¦\202\ï¼\232\ã\200\\214\å\234\°ç\220\\203\ç\232\\204\ç\233\´å¾\204\ã\200\\215\ï¼\210\é\225\¿åº¦å\233\ºå®\232\ï¼\211\å\222\\214\ã\200\\214\è£\205\æ»¡äº\206\å\217\¯å\217\\230\å½¢ç\232\\204\å\233\ºä½\223\ç\232\\204\åº\224\å\212\\233\ã\200\\215\ï¼\210\åº\224\å\212\\233\ç\232\\204\è¡¡é\207\\217\ï¼\214\å®\203\æ\230\¯ä¸\200\ä¸ªæ\234\\211\ ä¸\211\ä¸ªç©ºé\227\´å\235\\220\æ\240\\207\ç\232\\204\å\207\½æ\225\°ï¼\211\ã\200\\202\ #$PhysicalQuantity è¦\201\ä¸\215\æ\230\¯ #$ConstantQuantityï¼\214\å°±æ\230\¯ #$FunctionQuantityã\200\\202\ #$ConstantQuantity ç\232\\204\å®\236\ä¾\213\é\234\\200\è¦\201\æ\234\\211\ä¸\200\ä¸ª #$UnitOfMeasureï¼\214\è\200\\214\ #$FunctionQuantity ç\232\\204\å®\236\ä¾\213\æ\230\¯è¦\201\é\235\\240\ä¸\200\ä¸ª #$Functionï¼\214\ å®\203\æ\212\\212\ #$ConstantQuantity ç\232\\204\å®\236\ä¾\213\å\222\\214\å\205\¶å®\203\ #$ConstantQuantity ç\232\\204\å®\236\ä¾\213\è\201\\224\ç³»å\234\¨ä¸\200\èµ·ï¼\210\ä¸¾ä¾\213\è¯´ï¼\214\  #$TimeDependentQuantity å±\236\äº\216\ #$FunctionQuantityï¼\211\ã\200\\202\ #$PhysicalQuantity è¿\231\ä¸ªå\220\\215\å­\227\å\222\\214\å®\232\ä¹\211\æ\230\¯å\200\\237\ç\224\¨ç\211\© ç\220\\206\ç\220\\206\è®ºï¼\214\ä½\206\æ\230\¯ #$PhysicalQuantity ä¸\215\ä¸\200\å®\232\æ\230\¯æ\214\\207\ç\211\©è´¨ä¸\212\ç\232\\204\ã\200\\202\ é\231\¤äº\206\é\225\¿åº¦ã\200\\201\æ\227\¶é\227\´å\222\\214\é\200\\237\åº¦ç­\211\è¿\231\äº\233\å°ºåº¦ä»¥å¤\226\ï¼\214\é\235\\236\ç\211\©ç\220\\206\å°ºå¯¸å¦\202\ è´§å¸\201\ä¹\237\æ\230\¯å\217\¯è¡\214\ç\232\\204\ã\200\\202\å\233\\240\æ­¤ï¼\214\é\207\\221\é\222\±ä¼\232\æ\230\¯ #$PhysicalQuantity ç\232\\204\å®\236\ä¾\213\ã\200\\202\ #$PhysicalQuantity å\222\\214\çº¯ #$Number ç\232\\204\å\214\ºå\210\«å\234\¨äº\216\å\211\\215\è\200\\205\é\231\\204\æ\234\\211\ä¸\200\ä¸ªè¡¡é\207\\217\ç\232\\204\å°ºåº¦ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':95246).
lisp_trans(genls(vtConstantQuantity,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':96274).
lisp_trans(documentation(vtConstantQuantity,vEnglishLanguage,s("A","#$ConstantQuantity","is","a","#$PhysicalQuantity","that","has","a","constant","value",",","e",".","g",".","3","#$Meters","and","5","#$HourDurations",".","The","magnitude","(","see","#$MagnitudeFn",")","of","every","#$ConstantQuantity","is","a","#$RealNumber",".","#$ConstantQuantity","is","distinguished","from","#$FunctionQuantity",",","in","that","each","instance","of","the","latter","is","formed","through","the","mapping","of","one","#$PhysicalQuantity","to","another","#$PhysicalQuantity",".","Each","instance","of","#$ConstantQuantity","is","expressed","with","the","#$BinaryFunction","#$MeasureFn",",","which","takes","a","#$Number","and","a","#$UnitOfMeasure","as","arguments",".","For","example",",","3","#$Meters","is","expressed","as","(","#$MeasureFn","3","#$Meter",")",".","Instances","of","#$ConstantQuantity","form","a","partial","order","(","see","#$PartialOrderingRelation",")","with","the","#$lessThan","relation",",","since","#$lessThan","is","a","#$RelationExtendedToQuantities","and","#$lessThan","is","defined","over","the","#$RealNumbers",".","The","#$lessThan","relation","is","not","a","total","order","(","see","#$TotalOrderingRelation",")","over","the","class","#$ConstantQuantity","since","elements","of","some","subclasses","of","#$ConstantQuantity","(","such","as","length","quantities",")","are","incomparable","to","elements","of","other","subclasses","of","#$ConstantQuantity","(","such","as","mass","quantities",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':96319).
lisp_trans(documentation(vtConstantQuantity,xtChineseLanguage,'ConstantQuantity æ\230\¯å\220\«ä¸\215\å\217\\230\å\200\¼ç\232\\204\ #$PhysicalQuantityï¼\214\å¦\202\ 3 #$Meter å\222\\214\ 5 #$HourDurationã\200\\202\æ\211\\200\æ\234\\211\ #$ConstantQuantity ç\232\\204\å¹\205\åº¦ ï¼\210\è§\201\  #$MagnitudeFnï¼\211\é\203\½æ\230\¯ #$RealNumberã\200\\202\ #$ConstantQuantity æ\234\\211\å\210\«äº\216\ #$FunctionQuantityï¼\214\ å\220\\216\è\200\\205\ç\232\\204\æ¯\217\ä¸\200\ä¸ªå®\236\ä¾\213\æ\230\¯é\200\\232\è¿\207\æ\212\\212\ä¸\200\ä¸ª #$PhysicalQuantity è¿\236\æ\216\¥å\210\°å\217\¦ä¸\200\ä¸ª #$PhysicalQuantity è\200\\214\æ\210\\220\ã\200\\202\ æ¯\217\ä¸ª #$ConstantQuantity ç\232\\204\å®\236\ä¾\213\ä½¿ç\224\¨ #$BinaryFunction #$MeasureFn æ\235\¥è¡¨ç¤ºï¼\214\ å®\203\é\234\\200\è¦\201\ä¸¤ä¸ªå\217\\202\æ\225\°ï¼\232\ä¸\200\ä¸ª  #$Number å\222\\214\ä¸\200\ä¸ª #$UnitOfMeasureã\200\\202\ä¾\213\å¦\202\ï¼\232\3 #$Meter ä»¥ (#$MeasureFn 3 #$Meter) è¡¨ç¤ºã\200\\202\ #$ConstantQuantity ç\232\\204\å®\236\ä¾\213\ä¸\216\ #$lessThan å\205\³ç³»ç»\204\æ\210\\220\ä¸\200\ä¸ªé\203\¨å\210\\206\é¡ºåº\217\ ï¼\210\è§\201\ #$PartialOrderingRelation)ï¼\214\ å\233\\240\ä¸º #$lessThan æ\230\¯ä¸\200\ä¸ª #$RelationExtendedToQuantitiesï¼\214\è\200\\214\ #$lessThan ä»¥ #$RealNumber æ\235\¥å®\232\ä¹\211\ç\232\\204\ã\200\\202\ #$lessThan å\205\³ç³»ä¸\215\æ\230\¯ä¸\200\ä¸ªä»¥ #$ConstantQuantity ç±»å\210\«ç\232\\204\ å\205\¨é\203\¨é¡ºåº\217\ ï¼\210\è§\201\ #$TotalOrderingRelationï¼\211\å\233\\240\ä¸º #$ConstantQuantity ä¸\200\äº\233\å­\220\ç±»å\210\«ç\232\\204\å\205\\203\ç´\240\ ï¼\210\å¦\202\é\225\¿åº¦å\200\¼ï¼\211\å\222\\214\ #$ConstantQuantity å\205\¶ä»\226\å­\220\ç±»å\210\«ç\232\\204\å\205\\203\ç´\240\ ï¼\210\å¦\202\è´¨é\207\\217\ï¼\211\ å±\236\å®\214\å\205\¨ä¸\215\å\220\\214\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':97473).
lisp_trans(genls(timeTimeMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':98555).
lisp_trans(documentation(timeTimeMeasure,vEnglishLanguage,s("The","class","of","temporal","durations","(","instances","of","#$TimeDuration",")","and","positions","of","#$TimePoints","and","#$TimeIntervals","along","the","universal","timeline","(","instances","of","#$TimePosition",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':98595).
lisp_trans(documentation(timeTimeMeasure,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\230\","¯","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","(","#$TimePosition","ç","\232\","\204\","å","®","\236\","ä","¾","\213\",")","ä","¸","\212\","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\214\","å","®","\203\","å","\214\","\205\","æ","\213\","¬","æ","\227\","¶","é","\227\","´","æ","®","µ","(","#$TimeDuration","ç","\232\","\204\","å","®","\236\","ä","¾","\213\",")","ï","¼","\214\","ä","¸","\216\","#$TimePoint","å","\222\","\214\","#$TimeInterval","ç","\232\","\204\","å","®","\232\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':98813).
lisp_trans(genls(timeTimeDuration,timeTimeMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99024).
lisp_trans(documentation(timeTimeDuration,vEnglishLanguage,s("Any","measure","of","length","of","time",",","with","or","without","respect","to","the","universal","timeline",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99060).
lisp_trans(documentation(timeTimeDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","»","ä","½","\225\","é","\207\","\217\","åº","¦","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","è","¡","¡","é","\207\","\217\","ï","¼","\214\","å","®","\203\","å","\217\","¯","ä","»","¥","æ","\230\","¯","æ","\230\","¯","å","\237\","ºäº","\216\","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ç","\232\","\204\","ï","¼","\214\","ä","¹","\237\","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","¸","\215\","å","\237\","ºäº","\216\","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ç","\232\","\204\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99189).
lisp_trans(genls(timeTimePosition,timeTimeMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99362).
lisp_trans(sumo_partition(timeTimePosition,timeOfTimeInterval,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99398).
lisp_trans(documentation(timeTimePosition,vEnglishLanguage,s("Any","#$TimePoint","or","#$TimeInterval","along","the","universal","timeline","from","#$NegativeInfinity","to","#$PositiveInfinity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99446).
lisp_trans(documentation(timeTimePosition,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","»","\216\","#$NegativeInfinityå","\210\","°","#$PositiveInfinity","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ä","¸","\212\","ç","\232\","\204\","ä","»","»","ä","½","\225\","#$TimePoint","æ","\210\","\226\","#$TimeIntervalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99603).
lisp_trans(genls(timeOfTimeInterval,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99764).
lisp_trans(documentation(timeOfTimeInterval,vEnglishLanguage,s("An","interval","of","time",".","Note","that","a","#$TimeInterval","has","both","an","extent","and","a","location","on","the","universal","timeline",".","Note","too","that","a","#$TimeInterval","has","no","gaps",",","i",".","e",".","this","class","contains","only","convex","time","intervals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':99801).
lisp_trans(documentation(timeOfTimeInterval,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\227\","¶","æ","®","µã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$TimeInterval","å","\234\","¨","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ä","¸","\212\","ç","\232\","\206\","æ","\234\","\211\","è","\214\","\203\","å","\233\","´","å","\222\","\214\","ä","½","\215\","ç","½","®","ï","¼","\233\","å","\217\","¦","å","¤","\226\","#$TimeInterval","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","é","\227\","´","é","\232\","\231\","ç","\232\","\204\","ï","¼","\214\","å","\215\","³","è","¿","\231\","ä","¸","ªç","±","»","å","\210\","«","å","\217\","ªå","\220\","«","å","\207\","¸","æ","\227\","¶","é","\227\","´","é","\227\","´","é","\232\","\224\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':100055).
lisp_trans(genls(timeOfTimePoint,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':100275).
lisp_trans(documentation(timeOfTimePoint,vEnglishLanguage,s("An","extensionless","point","on","the","universal","timeline",".","The","#$TimePoints","at","which","#$Processes","occur","can","be","known","with","various","degrees","of","precision","and","approximation",",","but","conceptually","#$TimePoints","are","point","-","like","and","not","interval","-","like",".","That","is",",","it","doesn","'t","make","sense","to","talk","about","how","long","a","#$TimePoint","lasts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':100309).
lisp_trans(documentation(timeOfTimePoint,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ä","¸","\212\","æ","\227\","\240\","æ","³","\225\","å","»","¶","ä","¼","¸","ç","\232\","\204\","ç","\232\","\204\","ä","¸","\200\","ç","\202\","¹","ã","\200\","\202\","æ","\210\","\221\","ä","»","¬","å","\234\","¨","ä","¸","\215\","å","\220\","\214\","ç","¨","\213\","åº","¦","ç","\232\","\204\","å","\207\","\206\","ç","¡","®","å","\222\","\214\","è","¿","\221\","ä","¼","¼","å","\200\","¼","ä","¸","\212\","ï","¼","\214\","å","\217\","¯","ä","»","¥","ç","\237\","¥","é","\201\","\223\","#$Process","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","#$TimePointï","¼","\214\","ä","½","\206\","æ","\230\","¯","#$TimePoint","å","\234\","¨","æ","¦","\202\","å","¿","µä","¸","\212\","æ","\230\","¯","æ","\210\","\220\","ç","\202\","¹","ç","\212\","¶","è","\200\","\214\","é","\235\","\236\","é","\227\","´","é","\232\","\224\","ç","\212\","¶","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ï","¼","\214\","è","¯","´","#$TimePoint","æ","\214\","\201\","ç","»","­","äº","\206\","å","¤","\232\","é","\225\","¿","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","æ","\204\","\217\","ä","¹","\211\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':100658).
lisp_trans(genls(vtFunctionQuantity,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':100982).
lisp_trans(documentation(vtFunctionQuantity,vEnglishLanguage,s("A","#$FunctionQuantity","is","a","#$PhysicalQuantity","that","is","returned","by","a","#$Function","that","maps","from","one","or","more","instances","of","#$ConstantQuantity","to","another","instance","of","#$ConstantQuantity",".","For","example",",","the","velocity","of","a","particle","would","be","represented","by","a","#$FunctionQuantity","relating","values","of","time","(","which","are","instances","of","#$ConstantQuantity",")","to","values","of","distance","(","also","instances","of","#$ConstantQuantity",")",".","Note","that","all","elements","of","the","range","of","the","#$Function","corresponding","to","a","#$FunctionQuantity","have","the","same","physical","dimension","as","the","#$FunctionQuantity","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':101027).
lisp_trans(documentation(vtFunctionQuantity,xtChineseLanguage,s("#$FunctionQuantity","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\224\","±","#$Function","å","®","\203\","æ","\212\","\212\","#$ConstantQuantity","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\222\","\214\","å","\205\","¶","å","®","\203\","#$ConstantQuantity","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","è","\201\","\224\","ç","³","»","å","\234\","¨","ä","¸","\200\","èµ","·","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ç","²","\222\","å","­","\220\","ç","\232\","\204\","é","\200\","\237\","åº","¦","æ","\230\","¯","ç","\224\","¨","#$FunctionQuantityï","¼","\214\","æ","\212\","\212\","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","å","\200\","¼","(","#$ConstantQuantityç","\232\","\204\","å","®","\236\","ä","¾","\213\",")","å","\222\","\214\","è","·","\235\","ç","¦","»","ç","\232\","\204\","å","\200\","¼","(","ä","¹","\237\","æ","\230\","¯","#$ConstantQuantityç","\232\","\204\","å","®","\236\","ä","¾","\213\",")","è","¿","\236\","å","\234\","¨","ä","¸","\200\","èµ","·","æ","\235\","¥","è","¡","¨","ç","¤","ºã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\222\","\214\","#$FunctionQuantity","å","¯","¹","åº","\224\","ç","\232\","\204\","#$Function","è","\214\","\203\","å","\233\","´","å","\206\","\205\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","å","\222\","\214\","é","\202\","£","ä","¸","ª","#$FunctionQuantity","æ","\234\","¬","èº","«","ç","\232\","\204\","ç","\211\","©","ç","\220\","\206\","å","°","ºå","¯","¸","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':101634).
lisp_trans(genls(vtUnaryConstantFunctionQuantity,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':102155).
lisp_trans(documentation(vtUnaryConstantFunctionQuantity,vEnglishLanguage,s("A","#$subclass","of","#$FunctionQuantity",",","instances","of","which","are","returned","by","#$UnaryFunctions","that","map","from","one","instance","of","the","#$Class","#$ConstantQuantity","to","another","instance","of","the","#$Class","#$ConstantQuantity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':102213).
lisp_trans(documentation(vtUnaryConstantFunctionQuantity,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$FunctionQuantity","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$subclassï","¼","\214\","å","®","\203\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ç","\224\","±","#$UnaryFunction","æ","\212\","\212\","#$ConstantQuantity","#$Class","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","è","\201\","\224\","ç","³","»","å","\210\","°","#$ConstantQuantity","#$Class","ç","\232\","\204\","å","\217\","¦","ä","¸","\200\","ä","¸","ª","å","®","\236\","ä","¾","\213\","æ","\211\","\200\","äº","§","ç","\224\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':102481).
lisp_trans(genls(timeTimeDependentQuantity,vtUnaryConstantFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':102742).
lisp_trans(documentation(timeTimeDependentQuantity,vEnglishLanguage,s("A","#$UnaryConstantFunctionQuantity","of","continuous","time",".","All","instances","of","this","#$Class","are","returned","by","#$Functions","that","map","a","time","quantity","into","another","#$ConstantQuantity","such","as","temperature",".","For","example",",","'","the","temperature","at","the","top","of","the","Empire","State","Building","'","is","a","#$TimeDependentQuantity",",","since","its","value","depends","on","the","time",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':102805).
lisp_trans(documentation(timeTimeDependentQuantity,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","¿","\236\","ç","»","­","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","#$UnaryConstantFunctionQuantityã","\200\","\202\","è","¿","\231\","ä","¸","ª","#$Class","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","ç","\224\","±","#$Function","æ","\212\","\212\","æ","\227\","¶","é","\227\","´","å","\222\","\214\","å","\217\","¦","ä","¸","\200\","ä","¸","ª","#$ConstantQuantity","å","¦","\202\","æ","¸","©","åº","¦","è","\201\","\224\","ç","³","»","æ","\235\","¥","è","¡","¨","ç","¤","ºç","\232\","\204\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","'","å","\234\","¨","å","¸","\235\","å","\233\","½","å","¤","§","å","\216\","¦","é","¡","¶","ç","\232\","\204\","æ","¸","©","åº","¦","â","\200\","\230\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TimeDependentQuantityï","¼","\214\","å","\233\","\240\","ä","¸","ºå","®","\203\","ç","\232\","\204\","å","\200\","¼","å","\217\","\226\","å","\206\","³","äº","\216\","æ","\227\","¶","é","\227\","´","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':103191).
lisp_trans(genls(tCol,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':103539).
lisp_trans(sumo_partition(tCol,tSumoSet,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':103570).
lisp_trans(documentation(tCol,vEnglishLanguage,s("The","#$SetOrClass","of","#$Sets","and","#$Classes",",","i",".","e",".","any","instance","of","#$Abstract","that","has","#$elements","or","#$instances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':103603).
lisp_trans(documentation(tCol,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Set","å","\222\","\214\","#$Class","ç","\232\","\204\","#$SetOrClassï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ä","»","»","ä","½","\225\","#$Abstract","æ","\234\","\211\","#$element","æ","\210\","\226\","#$instanceç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':103758).
lisp_trans(documentation(tSet,vEnglishLanguage,'Classes differ from #$Sets in three important respects. First, #$Classes are not assumed to be extensional.  That is, distinct #$Classes might well have exactly the same instances.  Second, #$Classes typically have an associated `condition\' that determines the instances of the #$Class.  So, for example, the condition `human\' determines the #$Class of #$Humans.  Note that some #$Classes might satisfy their own condition (e.g., the #$Class of #$Abstract things is #$Abstract) and hence be instances of themselves.  Third, the instances of a class may occur only once within the class, i.e. a class cannot contain duplicate instances.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':104009).
lisp_trans(documentation(tSet,xtChineseLanguage,s("#$Class","å","\234\","¨","ä","¸","\211\","ä","¸","ªé","\207\","\215\","è","¦","\201\","æ","\226\","¹","é","\235\","¢","ä","¸","\216\","#$Set","ä","¸","\215\","å","\220\","\214\","ï","¼","\232\","ç","¬","¬","ä","¸","\200\","ï","¼","\214\","æ","\210\","\221\","ä","»","¬","ä","¸","\215\","å","\201\","\207\","è","®","¾","#$Class","ä","¸","ºè","\203\","½","å","»","¶","ä","¼","¸","ç","\232\","\204\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ä","¸","\215\","å","\220\","\214\","ç","\232\","\204\","#$Class","å","\217\","¯","è","\203\","½","ç","\224\","±","å","®","\214\","å","\205\","¨","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\","ç","¬","¬","äº","\214\","ï","¼","\214\","#$Class","é","\200\","\232\","å","¸","¸","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","\206\","³","å","®","\232\","è","¯","¥","#$Class","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","é","\231\","\204\","å","¸","¦","`","æ","\235\","¡","ä","»","¶","'","ã","\200\","\202\","æ","\211\","\200\","ä","»","¥","ä","¸","¾","ä","¾","\213\","è","¯","´","ï","¼","\232\","`","äººç","±","»","'","å","\206\","³","å","®","\232\","#$Human","ç","\232\","\204\","#$Classã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\234\","\211\","äº","\233\","#$Class","å","\217\","¯","è","\203\","½","æ","»","¡","è","¶","³","è","\207\","ªèº","«","ç","\232\","\204\","æ","\235\","¡","ä","»","¶","(","ä","¾","\213\","å","¦","\202\","#$Abstract","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","#$Class","æ","\230\","¯","#$Abstract",")","æ","\211\","\200\","ä","»","¥","å","®","\203\","ä","»","¬","æ","\234\","¬","èº","«","æ","\210\","\220\","ä","¸","ºå","®","\236\","ä","¾","\213\","ã","\200\","\202\","ç","¬","¬","ä","¸","\211\","ï","¼","\232\","ä","¸","\200\","ä","¸","ªç","±","»","å","\210\","«","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\217\","¯","è","\203\","½","å","\217\","ªå","\234\","¨","è","¯","¥","ç","±","»","å","\210\","«","å","\207\","ºç","\216\","°","ä","¸","\200\","æ","¬","¡","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¾","\223\","ä","¸","\200\","ä","¸","ªæ","³","ªå","¥","\224\","ä","¸","\215\","è","\203\","½","æ","\213\","¥","æ","\234\","\211\","é","\207\","\215\","å","¤","\215\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':104687).
lisp_trans(genls(tSumoSet,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':105282).
lisp_trans(documentation(tSumoSet,vEnglishLanguage,s("A","#$SetOrClass","that","satisfies","extensionality","as","well","as","other","constraints","specified","by","some","choice","of","set","theory",".","#$Sets","differ","from","#$Classes","in","two","important","respects",".","First",",","#$Sets","are","extensional","-","two","#$Sets","with","the","same","#$elements","are","identical",".","Second",",","a","#$Set","can","be","an","arbitrary","stock","of","objects",".","That","is",",","there","is","no","requirement","that","#$Sets","have","an","associated","condition","that","determines","their","membership",".","Note","that","#$Sets","are","not","assumed","to","be","unique","sets",",","i",".","e",".","#$elements","of","a","#$Set","may","occur","more","than","once","in","the","#$Set",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':105308).
lisp_trans(documentation(tSumoSet,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ª","#$SetOrClass","è","\203\","½","æ","»","¡","è","¶","³","å","»","¶","ä","¼","¸","æ","\200\","§","å","\222\","\214\","ç","\224\","±","é","\233\","\206\","å","\220\","\210\","ç","\220\","\206\","è","®","ºç","\232\","\204\","æ","\237\","\220\","äº","\233\","é","\200\","\211\","æ","\213\","©","æ","\211\","\200\","æ","\214\","\207\","å","®","\232\","ç","\232\","\204\","å","\205\","¶","ä","»","\226\","çº","¦","æ","\235\","\237\","ã","\200\","\202\","#$Set","å","\234\","¨","ä","¸","¤","ä","¸","ªé","\207\","\215\","è","¦","\201\","æ","\226\","¹","é","\235\","¢","ä","¸","\216\","#$Classes","ä","¸","\215\","å","\220\","\214\","ï","¼","\232\","ç","¬","¬","ä","¸","\200\","ï","¼","\214\","#$Sets","æ","\230\","¯","å","\217\","¯","ä","»","¥","å","»","¶","ä","¼","¸","ç","\232\","\204\","-","ä","¸","¤","ä","¸","ªæ","\213\","¥","æ","\234\","\211\","ä","¸","\200\","æ","\240\","·","#$element","ç","\232\","\204\","#$Set","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\","ç","¬","¬","äº","\214\","ï","¼","\214\","ä","¸","\200\","ä","¸","ª","#$Set","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","¸","\200\","å","\240\","\206\","é","\232\","\217\","æ","\204\","\217\","ç","»","\204\","æ","\210\","\220\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","ã","\200\","\202\","è","¿","\231\","å","°","±","æ","\230\","¯","è","¯","´","#$Set","ä","¸","\215\","é","\234\","\200\","è","¦","\201\","å","\205\","·","æ","\234\","\211\","ç","¡","®","å","®","\232\","å","\205\","¶","æ","\210\","\220\","å","\221\","\230\","èµ","\204\","æ","\240\","¼","ç","\232\","\204\","ç","\233\","¸","å","\205\","³","è","\201\","\224\","æ","\235\","¡","ä","»","¶","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\210\","\221\","ä","»","¬","å","¹","¶","æ","²","¡","æ","\234\","\211\","å","\201\","\207\","è","®","¾","æ","¯","\217\","ä","¸","ª","#$Set","ä","¸","ºç","\213\","¬","ä","¸","\200\","æ","\227\","\240\","äº","\214\","ç","\232\","\204\","é","\233\","\206\","å","\220\","\210\","ï","¼","\214\","å","\215\","³","æ","\230\","¯","è","¯","´","ä","¸","\200\","ä","¸","ª","#$Set","ç","\232\","\204\","ç","»","\204\","å","\221\","\230\","å","\217\","¯","ä","»","¥","å","\234\","¨","é","\202\","£","ä","¸","ª","#$Set","å","\207\","ºç","\216\","°","è","¶","\205\","è","¿","\207\","ä","¸","\200\","æ","¬","¡","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':105884).
lisp_trans(genls(tRelation,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':106448).
lisp_trans(disjointDecomposition(tRelation,rtBinaryRelation,rtTernaryRelation,rtQuaternaryRelation,rtQuintaryRelation,rtVariableArityRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':106477).
lisp_trans(sumo_partition(tRelation,tPred,tFunction,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':106599).
lisp_trans(sumo_partition(tRelation,rtTotalValuedRelation,rtPartialValuedRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':106644).
lisp_trans(documentation(tRelation,vEnglishLanguage,s("The","#$Class","of","relations",".","There","are","three","kinds","of","#$Relation",":","#$Predicate",",","#$Function",",","and","#$List",".","#$Predicates","and","#$Functions","both","denote","sets","of","ordered","n","-","tuples",".","The","difference","between","these","two","#$Classes","is","that","#$Predicates","cover","formula","-","forming","operators",",","while","#$Functions","cover","term","-","forming","operators",".","A","#$List",",","on","the","other","hand",",","is","a","particular","ordered","n","-","tuple",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':106707).
lisp_trans(documentation(tRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","³","ç","³","»","ç","\232\","\204\","#$Classã","\200\","\202\","ç","\216\","°","æ","\234\","\211\","ä","¸","\211\","ç","±","»","ç","\232\","\204\","#$Relation",":","#$Predicateï","¼","\214\","#$Function","å","\222\","\214\","#$Listã","\200\","\202\","#$Predicate","å","\222\","\214\","#$Function","ç","\232\","\206\","è","¡","¨","ç","¤","ºæ","\234\","\211\","åº","\217\","ç","\232\","\204\","nå","\205\","\203\","ç","»","\204\","é","\233\","\206\","å","\220\","\210\","ï","¼","\214\","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$Class","ç","\232\","\204\","å","·","®","å","\210\","«","å","\234\","¨","äº","\216\","#$Predicate","å","\214\","\205\","æ","\213\","¬","ç","»","\204\","æ","\210\","\220\","å","\205\","¬","å","¼","\217\","ç","\232\","\204\","è","¿","\220\","ç","®","\227\","ç","¬","¦","ï","¼","\214\","è","\200\","\214\","#$Function","å","\210\","\231\","å","\214\","\205\","æ","\213\","¬","ç","»","\204\","æ","\210\","\220\","æ","\234\","¯","è","¯","­","ç","\232\","\204\","è","¿","\220\","ç","®","\227\","ç","¬","¦","ï","¼","\214\","è","\200\","\214\","ä","¸","\200\","ä","¸","ª","#$List","å","\215\","´","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\211\","¹","å","®","\232\","ç","\232\","\204\","æ","\234\","\211\","åº","\217\","nå","\205\","\203\","ç","»","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':107129).
lisp_trans(genls(rtSingleValuedRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':107766).
lisp_trans(genls(rtSingleValuedRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':107807).
lisp_trans(documentation(rtSingleValuedRelation,vEnglishLanguage,s("A","#$Relation","is","a","#$SingleValuedRelation","just","in","case","an","assignment","of","values","to","every","argument","position","except","the","last","one","determines","at","most","one","assignment","for","the","last","argument","position",".","Note","that","not","all","#$SingleValuedRelations","are","#$TotalValuedRelations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':107859).
lisp_trans(documentation(rtSingleValuedRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$Relationæ","\230\","¯","#$SingleValuedRelation","ä","»","¥","ç","¡","®","ä","¿","\235\","é","\231\","¤","äº","\206\","æ","\234\","\200\","å","\220\","\216\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","¹","\213\","å","¤","\226\","ï","¼","\214\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","ä","½","\215\","ç","½","®","å","\217\","ªæ","\234\","\211\","ä","¸","\200\","ä","¸","ªèµ","\213\","å","\200\","¼","ï","¼","\214\","è","\200\","\214\","æ","\234\","\200\","å","\220\","\216\","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","é","¡","¶","å","¤","\232\","å","\217\","¯","ä","»","¥","å","\206\","³","å","®","\232\","æ","\234\","\200\","å","\220\","\216\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","ä","½","\215\","ç","½","®","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","¸","\215\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$SingleValuedRelation","é","\203\","½","æ","\230\","¯","#$TotalValuedRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':108175).
lisp_trans(genls(rtTotalValuedRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':108797).
lisp_trans(genls(rtTotalValuedRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':108837).
lisp_trans(documentation(rtTotalValuedRelation,vEnglishLanguage,s("A","#$Relation","is","a","#$TotalValuedRelation","just","in","case","there","exists","an","assignment","for","the","last","argument","position","of","the","#$Relation","given","any","assignment","of","values","to","every","argument","position","except","the","last","one",".","Note","that","declaring","a","#$Relation","to","be","both","a","#$TotalValuedRelation","and","a","#$SingleValuedRelation","means","that","it","is","a","total","function",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':108888).
lisp_trans(documentation(rtTotalValuedRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$Relation","æ","\230\","¯","#$TotalValuedRelation","ä","»","¥","é","\230\","²","è","¯","¥","#$Relation","æ","\234\","\200\","å","\220\","\216\","å","\217\","\202\","æ","\225\","°","ä","½","\215\","ç","½","®","å","\207\","ºç","\216\","°","ä","¸","\200\","ä","¸","ªèµ","\213\","å","\200\","¼",",","å","\201\","\207\","è","®","¾","é","\231\","¤","äº","\206\","æ","\234\","\200\","å","\220\","\216\","ä","¸","\200\","ä","¸","ªä","¹","\213\","å","¤","\226\","æ","¯","\217\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","½","\215\","ç","½","®","é","\203\","½","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªèµ","\213\","å","\200\","¼","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","£","°","æ","\230\","\216\","ä","¸","\200\","ä","¸","ª","#$Relation","æ","\227\","¢","æ","\230\","¯","#$TotalValuedRelation","å","\217\","\210\","æ","\230\","¯","#$SingleValuedRelation","è","¡","¨","ç","¤","ºè","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\200\","»","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':109283).
lisp_trans(<=>(and(rtTotalValuedRelation(REL),tPred(REL)),exists([VALENCE],and(tRelation(REL),valence(REL,VALENCE),=>(all([NUMBER,ELEMENT,CLASS],=>(and(lessThan(NUMBER,VALENCE),argIsa(REL,NUMBER,CLASS),equal(ELEMENT,vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER))),isa(ELEMENT,CLASS))),exists([ITEM],[REL,'@ROW',ITEM]))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':109633).
lisp_trans(genls(rtPartialValuedRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':110208).
lisp_trans(documentation(rtPartialValuedRelation,vEnglishLanguage,s("A","#$Relation","is","a","#$PartialValuedRelation","just","in","case","it","is","not","a","#$TotalValuedRelation",",","i",".","e",".","just","in","case","assigning","values","to","every","argument","position","except","the","last","one","does","not","necessarily","mean","that","there","is","a","value","assignment","for","the","last","argument","position",".","Note","that",",","if","a","#$Relation","is","both","a","#$PartialValuedRelation","and","a","#$SingleValuedRelation",",","then","it","is","a","partial","function",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':110250).
lisp_trans(documentation(rtPartialValuedRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$Relation","æ","\230\","¯","#$PartialValuedRelation","æ","\230\","¯","ä","¸","ºäº","\206\","ç","¡","®","ä","¿","\235\","å","®","\203\","ä","¸","\215\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TotalValuedRelationï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","é","\231\","¤","äº","\206\","æ","\234\","\200\","å","\220\","\216\","ä","¸","\200\","ä","¸","ªä","¹","\213\","å","¤","\226\","ç","»","\231\","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","å","\217\","\202\","æ","\225\","°","ä","½","\215\","ç","½","®","å","\210\","\206\","é","\205\","\215\","ä","¸","\200\","ä","¸","ªå","\200\","¼","ï","¼","\214\","ä","½","\206\","è","¿","\231\","ä","¸","\215\","ä","¸","\200\","å","®","\232\","ç","­","\211\","äº","\216\","å","·","²","ç","»","\217\","ä","¸","ºæ","\234\","\200\","å","\220\","\216\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","½","\215\","ç","½","®","è","®","¾","å","®","\232\","èµ","\213\","å","\200\","¼","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","¦","\202\","æ","\236\","\234\","ä","¸","\200\","ä","¸","ª","#$Relationæ","\227\","¢","æ","\230\","¯","#$PartialValuedRelation","å","\217\","\210\","æ","\230\","¯","#$SingleValuedRelationç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","å","®","\203\","å","°","±","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':110692).
lisp_trans(genls(rtBinaryRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111134).
lisp_trans(genls(rtBinaryRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111169).
lisp_trans(documentation(rtBinaryRelation,vEnglishLanguage,'BinaryRelations are relations that are true only of pairs of things.  #$BinaryRelations are represented as slots in frame systems.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111215).
lisp_trans(documentation(rtBinaryRelation,xtChineseLanguage,s("#$BinaryRelation","æ","\230\","¯","å","\217\","ªæ","\234\","\211\","å","\234\","¨","å","\205\","³","ç","³","»","è","\201\","\224\","ç","³","»","ä","¸","¤","æ","\240\","·","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","æ","\227\","¶","å","\200\","\231\","æ","\211\","\215\","ç","®","\227\","æ","\230\","¯","ç","\234\","\237\","ï","¼","\214\","æ","¡","\206\","æ","\236\","¶","ç","\220\","\206\","è","®","ºä","»","¥","æ","§","½","ä","»","£","è","¡","¨","#$BinaryRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111397).
lisp_trans(genls(rtReflexiveRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111571).
lisp_trans(documentation(rtReflexiveRelation,vEnglishLanguage,'Relation ?REL is reflexive iff (?REL ?INST ?INST) for all ?INST.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111615).
lisp_trans(documentation(rtReflexiveRelation,xtChineseLanguage,'Relation ?REL å±\236\äº\216\è\207\ªå\217\\215\å\205\³ç³»å½\223\ä¸\224\ä»\205\å½\223\æ\211\\200\æ\234\\211\ ?INST é\203\½æ\230\¯(?REL ?INST ?INST)ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111734).
lisp_trans(genls(rtIrreflexiveRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':111999).
lisp_trans(documentation(rtIrreflexiveRelation,vEnglishLanguage,'Relation ?REL is irreflexive iff (?REL ?INST ?INST) holds for no value of ?INST.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112045).
lisp_trans(documentation(rtIrreflexiveRelation,xtChineseLanguage,'Relation ?REL å±\236\äº\216\é\235\\236\è\207\ªå\217\\215\å\205\³ç³»å½\223\ä¸\224\ä»\205\å½\223\æ²¡æ\234\\211\ ä¸\200\ä¸ª?INST æ\230\¯(?REL ?INST ?INST)ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112182).
lisp_trans(=>(rtIrreflexiveRelation(REL),all([INST],not([REL,INST,INST]))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112330).
lisp_trans(genls(rtSymmetricRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112435).
lisp_trans(disjointWith(rtSymmetricRelation,rtAntisymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112479).
lisp_trans(documentation(rtSymmetricRelation,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","symmetric","just","iff","(","?","REL","?","INST1","?","INST2",")","imples","(","?","REL","?","INST2","?","INST1",")",",","for","all","?","INST1","and","?","INST2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112530).
lisp_trans(documentation(rtSymmetricRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","å","±","\236\","äº","\216\","å","¯","¹","ç","§","°","å","\205\","³","ç","³","»","å","\217\","ªæ","\230\","¯","å","½","\223\","ä","¸","\224\","ä","»","\205\","å","½","\223\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1","å","\222\","\214\","?","INST2","æ","\230\","¯","(","?","REL","?","INST1","?","INST2",")","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","(","?","REL","?","INST2","?","INST1",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112705).
lisp_trans(=>(rtSymmetricRelation(REL),all([INST1,INST2],=>([REL,INST1,INST2],[REL,INST2,INST1]))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':112911).
lisp_trans(genls(rtAsymmetricRelation,rtIrreflexiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113053).
lisp_trans(genls(rtAsymmetricRelation,rtAntisymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113103).
lisp_trans(documentation(rtAsymmetricRelation,vEnglishLanguage,s("A","#$BinaryRelation","is","asymmetric","if","and","only","if","it","is","both","an","#$AntisymmetricRelation","and","an","#$IrreflexiveRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113155).
lisp_trans(documentation(rtAsymmetricRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","±","\236\","äº","\216\","ä","¸","\215\","å","¯","¹","ç","§","°","å","\205\","³","ç","³","»","å","½","\223\","ä","¸","\224\","ä","»","\205\","å","½","\223\","å","®","\203\","æ","\227\","¢","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$AntisymmetricRelation","å","\217\","\210\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$IrreflexiveRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113325).
lisp_trans(<=>(rtAsymmetricRelation(REL),and(rtAntisymmetricRelation(REL),rtIrreflexiveRelation(REL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113515).
lisp_trans(genls(rtAntisymmetricRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113657).
lisp_trans(documentation(rtAntisymmetricRelation,vEnglishLanguage,'BinaryRelation ?REL is an #$AntisymmetricRelation if for distinct ?INST1 and ?INST2, (?REL ?INST1 ?INST2) implies not (?REL ?INST2 ?INST1).  In other words, for all ?INST1 and ?INST2, (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST1) imply that ?INST1 and ?INST2 are identical.  Note that it is possible for an #$AntisymmetricRelation to be a #$ReflexiveRelation.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':113705).
lisp_trans(documentation(rtAntisymmetricRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","æ","\230\","¯","#$AntisymmetricRelation","å","¦","\202\","æ","\236\","\234\","ä","¸","\215\","å","\220\","\214\","ç","\232\","\204\","?","INST1","å","\222\","\214\","?","INST2","æ","\230\","¯","(","?","REL","?","INST1","?","INST2",")","ä","¸","\215\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","(","?","REL","?","INST2","?","INST1",")","ã","\200\","\202\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","å","½","\223\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1","å","\222\","\214\","?","INST2","æ","\230\","¯","(","?","REL","?","INST1","?","INST2",")","å","\222\","\214\","(","?","REL","?","INST2","?","INST1",")","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","?","INST1","å","\222\","\214\","?","INST2","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","¸","\200\","ä","¸","ª","#$AntisymmetricRelation","æ","\234\","\211\","å","\217\","¯","è","\203\","½","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$ReflexiveRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':114123).
lisp_trans(=>(rtAntisymmetricRelation(REL),all([INST1,INST2],=>(and([REL,INST1,INST2],[REL,INST2,INST1]),equal(INST1,INST2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':114545).
lisp_trans(genls(rtTrichotomizingRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':114743).
lisp_trans(documentation(rtTrichotomizingRelation,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","a","#$TrichotomizingRelation","just","in","case","all","ordered","pairs","consisting","of","distinct","individuals","are","elements","of","?","REL",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':114792).
lisp_trans(documentation(rtTrichotomizingRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","æ","\230\","¯","#$TrichotomizingRelation","ä","¸","\207\","ä","¸","\200\","æ","\211\","\200\","æ","\234\","\211\","æ","\234\","\211\","åº","\217\","ç","\232\","\204\","ä","¸","\200\","å","¯","¹","ä","¸","\234\","è","¥","¿","å","\207\","ºç","\216\","°","?","REL","å","\205\","\203\","ç","´","\240\","ç","\232\","\204\","ä","¸","\215\","å","\220\","\214\","ä","¸","ªä","½","\223\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':114991).
lisp_trans(=>(rtTrichotomizingRelation(REL),all([INST1,INST2],or(and([REL,INST1,INST2],not(equal(INST1,INST2)),not([REL,INST2,INST1])),and(not([REL,INST1,INST2]),equal(INST1,INST2),not([REL,INST2,INST1])),and(not([REL,INST1,INST2]),not(equal(INST1,INST2)),[REL,INST2,INST1])))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':115177).
lisp_trans(genls(rtTransitiveRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':115645).
lisp_trans(disjointWith(rtTransitiveRelation,rtIntransitiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':115690).
lisp_trans(documentation(rtTransitiveRelation,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","transitive","if","(","?","REL","?","INST1","?","INST2",")","and","(","?","REL","?","INST2","?","INST3",")","imply","(","?","REL","?","INST1","?","INST3",")",",","for","all","?","INST1",",","?","INST2",",","and","?","INST3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':115741).
lisp_trans(documentation(rtTransitiveRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","æ","\230\","¯","ä","¼","\240\","é","\200\","\222\","å","\205\","³","ç","³","»","å","¦","\202\","æ","\236\","\234\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1ï","¼","\214\","?","INST2å","\222\","\214\","?","INST3","æ","\230\","¯","(","?","REL","?","INST1","?","INST2",")","å","\222\","\214\","(","?","REL","?","INST2","?","INST3",")","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","(","?","REL","?","INST1","?","INST3",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':115945).
lisp_trans(=>(rtTransitiveRelation(REL),all([INST1,INST2,INST3],=>(and([REL,INST1,INST2],[REL,INST2,INST3]),[REL,INST1,INST3]))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':116171).
lisp_trans(genls(rtIntransitiveRelation,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':116372).
lisp_trans(documentation(rtIntransitiveRelation,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","intransitive","only","if","(","?","REL","?","INST1","?","INST2",")","and","(","?","REL","?","INST2","?","INST3",")","imply","not","(","?","REL","?","INST1","?","INST3",")",",","for","all","?","INST1",",","?","INST2",",","and","?","INST3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':116419).
lisp_trans(documentation(rtIntransitiveRelation,xtChineseLanguage,s("é","\207\","\216\","è","\221\","\233\","#$BinaryRelation","?","REL","æ","\230\","¯","é","\235\","\236\","ä","¼","\240\","é","\200\","\222\","å","\205\","³","ç","³","»","é","\231\","¤","é","\235\","\236\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1ï","¼","\214\","?","INST2","å","\222\","\214\","?","INST3","æ","\230\","¯","(","?","REL","?","INST1","?","INST2",")","å","\222\","\214\","(","?","REL","?","INST2","?","INST3",")","ä","¸","\215\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","(","?","REL","?","INST1","?","INST3",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':116636).
lisp_trans(=>(rtIntransitiveRelation(REL),all([INST1,INST2,INST3],=>(and([REL,INST1,INST2],[REL,INST2,INST3]),not([REL,INST1,INST3])))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':116870).
lisp_trans(genls(rtPartialOrderingRelation,rtTransitiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117091).
lisp_trans(genls(rtPartialOrderingRelation,rtAntisymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117145).
lisp_trans(genls(rtPartialOrderingRelation,rtReflexiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117202).
lisp_trans(genls(rtPartialOrderingRelation,rtTotalValuedRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117255).
lisp_trans(documentation(rtPartialOrderingRelation,vEnglishLanguage,s("A","#$BinaryRelation","is","a","partial","ordering","if","it","is","a","#$ReflexiveRelation",",","an","#$AntisymmetricRelation",",","and","a","#$TransitiveRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117310).
lisp_trans(documentation(rtPartialOrderingRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","±","\236\","äº","\216\","é","\203\","¨","å","\210\","\206\","é","¡","ºåº","\217\","å","\205\","³","ç","³","»","å","¦","\202\","æ","\236\","\234\","å","®","\203\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$ReflexiveRelationã","\200\","\201\","#$AntisymmetricRelation","å","\222\","\214\","#$TransitiveRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117497).
lisp_trans(genls(rtTotalOrderingRelation,rtPartialOrderingRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117699).
lisp_trans(genls(rtTotalOrderingRelation,rtTrichotomizingRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117756).
lisp_trans(documentation(rtTotalOrderingRelation,vEnglishLanguage,s("A","#$BinaryRelation","is","a","#$TotalOrderingRelation","if","it","is","a","#$PartialOrderingRelation","and","a","#$TrichotomizingRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117812).
lisp_trans(documentation(rtTotalOrderingRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","æ","\230\","¯","#$TotalOrderingRelation","å","¦","\202\","æ","\236\","\234\","å","®","\203\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$PartialOrderingRelationå","\222\","\214\","#$TrichotomizingRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':117986).
lisp_trans(=>(rtTotalOrderingRelation(REL),all([INST1,INST2],and(or([REL,INST1,INST2],[REL,INST2,INST1]),or(not([REL,INST1,INST2]),not([REL,INST2,INST1]))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118172).
lisp_trans(genls(rtEquivalenceRelation,rtTransitiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118431).
lisp_trans(genls(rtEquivalenceRelation,rtSymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118481).
lisp_trans(genls(rtEquivalenceRelation,rtReflexiveRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118530).
lisp_trans(documentation(rtEquivalenceRelation,vEnglishLanguage,s("A","#$BinaryRelation","is","an","equivalence","relation","if","it","is","a","#$ReflexiveRelation",",","a","#$SymmetricRelation",",","and","a","#$TransitiveRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118579).
lisp_trans(documentation(rtEquivalenceRelation,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","æ","\230\","¯","ç","­","\211\","ä","»","·","å","\205\","³","ç","³","»","å","¦","\202\","æ","\236\","\234\","å","®","\203\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$ReflexiveRelationã","\200\","\201\","#$SymmetricRelation","å","\222\","\214\","#$TransitiveRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118762).
lisp_trans(genls(rtCaseRole,rtBinaryPredicate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118946).
lisp_trans(genls(rtCaseRole,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':118982).
lisp_trans(genls(rtCaseRole,rtAsymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119022).
lisp_trans(documentation(rtCaseRole,vEnglishLanguage,s("The","#$Class","of","#$Predicates","relating","the","spatially","distinguished","parts","of","a","#$Process",".","#$CaseRoles","include",",","for","example",",","the","#$agent",",","#$patient","or","#$destination","of","an","action",",","the","flammable","substance","in","a","burning","process",",","or","the","water","that","falls","in","rain",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119061).
lisp_trans(documentation(rtCaseRole,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Predicate","ç","\232\","\204\","#$Classï","¼","\214\","å","®","\203\","æ","\212\","\212\","#$Process","ä","¸","­","å","\217\","¯","ä","»","¥","ä","»","\216\","ç","©","ºé","\227\","´","ä","¸","\212\","å","\214\","ºå","\210\","«","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","#$CaseRole","å","\214\","\205\","æ","\213\","¬","#$agentã","\200\","\201\","#$patient","æ","\210\","\226\","è","¡","\214\","å","\212\","¨","ç","\232\","\204\","#$destination","è","¿","\231\","äº","\233\","ä","¾","\213\","å","­","\220\","ã","\200\","\201\","ç","\207\","\203\","ç","\203\","§","è","¿","\207\","ç","¨","\213\","ä","¸","­","ç","\232\","\204\","æ","\230\","\223\","ç","\207\","\203\","ç","\211\","©","è","´","¨","ï","¼","\214\","æ","\210\","\226\","æ","\230\","¯","é","\231\","\215\","é","\233\","¨","è","¿","\207\","ç","¨","\213\","ä","¸","­","ç","\232\","\204\","é","\233\","¨","æ","°","´","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119358).
lisp_trans(documentation(involvedInEvent,vEnglishLanguage,s("(","involvedInEvent","?","EVENT","?","THING",")","means","that","in","the","#$Process","?","EVENT",",","the","#$Entity","?","THING","plays","some","#$CaseRole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119661).
lisp_trans(documentation(involvedInEvent,xtChineseLanguage,s("(","involvedInEvent","?","EVENT","?","THING",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","?","EVENTè","¿","\231\","ä","¸","ª","#$Processï","¼","\214\","?","THING","è","¿","\231\","ä","¸","ª","#$Entity","ä","½","\224\","ç","\235\","\200\","ä","¸","\200\","ç","\202\","¹","#$CaseRoleã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119822).
lisp_trans(rtBinaryPredicate(involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':119996).
lisp_trans(rtAsymmetricRelation(involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120039).
lisp_trans(argIsa(involvedInEvent,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120085).
lisp_trans(argIsa(involvedInEvent,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120120).
lisp_trans(=>(rtCaseRole(R),genlPreds(R,involvedInEvent)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120406).
lisp_trans(rtCaseRole(agent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120472).
lisp_trans(rtPartialValuedRelation(agent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120498).
lisp_trans(argIsa(agent,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120537).
lisp_trans(argIsa(agent,2,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120562).
lisp_trans(genlPreds(agent,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120585).
lisp_trans(documentation(agent,vEnglishLanguage,s("(","#$agent","?","PROCESS","?","AGENT",")","means","that","?","AGENT","is","an","active","determinant",",","either","animate","or","inanimate",",","of","the","#$Process","?","PROCESS",",","with","or","without","voluntary","intention",".","For","example",",","Eve","is","an","#$agent","in","the","following","proposition",":","Eve","bit","an","apple",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120621).
lisp_trans(documentation(agent,xtChineseLanguage,s("(","#$agent","?","PROCESS","?","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENTï","¼","\214\","ä","¸","\215\","ç","®","¡","å","®","\203\","æ","\234\","\211\","æ","²","¡","æ","\234\","\211\","ç","\224\","\237\","å","\221\","½","ï","¼","\214\","ä","¹","\237\","ä","¸","\215\","ç","®","¡","ä","»","\226\","æ","\234\","\211\","æ","²","¡","æ","\234\","\211\","è","\207\","ªä","¸","»","æ","\204\","\217\","å","\233\","¾","ï","¼","\214\","å","®","\203\","å","\234\","¨","?","PROCESS","è","¿","\231\","ä","¸","ª","#$Process","ä","¸","­","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¸","»","å","\212\","¨","ç","\232\","\204\","å","\206\","³","å","®","\232\","å","\233\","\240\","ç","´","\240\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","å","¤","\217\","å","¨","\203\","å","\222\","¬","äº","\206\","ä","¸","\200\","å","\217\","£","è","\213\","¹","æ","\236\","\234\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ä","¸","­","ï","¼","\214\","å","¤","\217\","å","¨","\203\","æ","\230\","¯","ä","¸","ª","#$agentã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':120904).
lisp_trans(rtCaseRole(destination),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121210).
lisp_trans(rtPartialValuedRelation(destination),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121242).
lisp_trans(argIsa(destination,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121287).
lisp_trans(argIsa(destination,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121318).
lisp_trans(genlPreds(destination,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121348).
lisp_trans(documentation(destination,vEnglishLanguage,s("(","destination","?","PROCESS","?","GOAL",")","means","that","?","GOAL","is","the","target","or","goal","of","the","Process","?","PROCESS",".","For","example",",","Danbury","would","be","the","destination","in","the","following","proposition",":","Bob","went","to","Danbury",".","Note","that","this","is","a","very","general","#$CaseRole","and",",","in","particular",",","that","it","covers","the","concepts","of","'","recipient","'","and","'","beneficiary","'",".","Thus",",","John","would","be","the","#$destination","in","the","following","proposition",":","Tom","gave","a","book","to","John",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121390).
lisp_trans(documentation(destination,xtChineseLanguage,s("(","destination","?","PROCESS","?","GOAL",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","GOAL","æ","\230\","¯","?","PROCESS","è","¿","\207\","ç","¨","\213\","ç","\232\","\204\","ç","\233\","®","æ","\240\","\207\","æ","\210\","\226\","ç","\233\","®","ç","\232\","\204\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","é","²","\215\","å","\213\","\203\","å","\216\","»","äº","\206\","ä","¸","¹","ä","¼","¯","é","\207\","\214\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ä","¸","­","ï","¼","\214\","é","²","\215\","å","\213\","\203\","ä","¼","\232\","æ","\230\","¯","ç","»","\210\","ç","\202\","¹","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","é","\235\","\236\","å","¸","¸","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$CaseRoleï","¼","\214\","è","\200\","\214\","ç","\211\","¹","å","\210\","«","æ","\230\","¯","å","®","\203\","å","\214\","\205\","æ","\213\","¬","'","æ","\216\","¥","å","\217\","\227\","è","\200\","\205\","'","å","\222\","\214\","'","å","\217\","\227\","ç","\233\","\212\","è","\200\","\205\","'","è","¿","\231\","ä","¸","¤","ä","¸","ªæ","¦","\202\","å","¿","µï","¼","\214\","æ","\225\","\205\","æ","­","¤","ï","¼","\214\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","æ","±","¤","å","§","\206\","ç","»","\231\","äº","\206\","çº","¦","ç","¿","°","ä","¸","\200\","æ","\234\","¬","ä","¹","¦","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ä","¸","­","ï","¼","\214\","çº","¦","ç","¿","°","ä","¼","\232\","æ","\230\","¯","#$destinationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':121848).
lisp_trans(rtCaseRole(experiencer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122268).
lisp_trans(rtPartialValuedRelation(experiencer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122300).
lisp_trans(argIsa(experiencer,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122345).
lisp_trans(argIsa(experiencer,2,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122376).
lisp_trans(genlPreds(experiencer,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122405).
lisp_trans(documentation(experiencer,vEnglishLanguage,s("(","#$experiencer","?","PROCESS","?","AGENT",")","means","that","?","AGENT","experiences","the","#$Process","?","PROCESS",".","For","example",",","Yojo","is","the","#$experiencer","of","seeing","in","the","following","proposition",":","Yojo","sees","the","fish",".","Note","that","#$experiencer",",","unlike","#$agent",",","does","not","entail","a","causal","relation","between","its","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122447).
lisp_trans(documentation(experiencer,xtChineseLanguage,s("(","#$experiencer","?","PROCESS","?","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","å","\234\","¨","ç","»","\217\","å","\216\","\206\","?","PROCESS","è","¿","\231\","ä","¸","ª","#$Processã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","ä","½","\221\","è","\210\","\237\","ç","\234\","\213\","è","§","\201\","å","\223\","ªå","°","¾","é","±","¼","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","ä","½","\221\","è","\210\","\237\","æ","\230\","¯","ç","\234\","\213\","è","§","\201\","è","¿","\231\","è","¿","\207\","ç","¨","\213\","ç","\232\","\204\","#$experiencerã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$experiencer","ä","¸","\215\","å","\203\","\217\","#$agentï","¼","\214\","å","\217\","\202\","æ","\225\","°","ä","¹","\213\","é","\227\","´","å","¹","¶","ä","¸","\215\","é","\234\","\200\","è","¦","\201\","å","\220\","«","æ","\234\","\211\","å","\233\","\240\","æ","\236\","\234\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':122779).
lisp_trans(genlPreds(instrument,patient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123098).
lisp_trans(rtCaseRole(instrument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123131).
lisp_trans(rtPartialValuedRelation(instrument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123162).
lisp_trans(argIsa(instrument,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123206).
lisp_trans(argIsa(instrument,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123236).
lisp_trans(documentation(instrument,vEnglishLanguage,s("(","instrument","?","EVENT","?","TOOL",")","means","that","?","TOOL","is","used","by","an","agent","in","bringing","about","?","EVENT","and","that","?","TOOL","is","not","changed","by","?","EVENT",".","For","example",",","the","key","is","an","#$instrument","in","the","following","proposition",":","The","key","opened","the","door",".","Note","that","#$instrument","and","#$resource","cannot","be","satisfied","by","the","same","ordered","pair",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123265).
lisp_trans(documentation(instrument,xtChineseLanguage,s("(","instrument","?","EVENT","?","TOOL",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","TOOL","æ","\230\","¯","ä","¸","»","äº","\213\","è","\200\","\205\","ä","»","¤","?","EVENT","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","å","·","¥","å","\205\","·","ï","¼","\214\","è","\200\","\214\","ä","¸","\224\","?","TOOL","å","¹","¶","æ","²","¡","å","\217\","\227\","å","\210\","°","?","EVENT","ç","\232\","\204\","æ","\224\","¹","å","\217\","\230\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","å","\223\","ªé","\222\","¥","å","\214\","\231\","æ","\212\","\212\","é","\227\","¨","æ","\211\","\223\","å","¼","\200\","äº","\206\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","é","\222\","¥","å","\214\","\231\","æ","\230\","¯","ä","¸","ª","#$instrumentã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$instrument","å","\222\","\214\","#$resource","è","¿","\231\","ä","¸","¤","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","¸","\215\","å","\217\","¯","ä","»","¥","ç","\224\","¨","å","\220\","\214\","ä","¸","\200\","å","¯","¹","ç","\232\","\204\","é","¡","ºåº","\217\","æ","\235\","¥","è","¡","¨","ç","¤","ºã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123620).
lisp_trans(rtCaseRole(origin),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':123976).
lisp_trans(rtPartialValuedRelation(origin),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124003).
lisp_trans(argIsa(origin,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124043).
lisp_trans(argIsa(origin,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124069).
lisp_trans(genlPreds(origin,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124094).
lisp_trans(documentation(origin,vEnglishLanguage,s("(","#$origin","?","PROCESS","?","SOURCE",")","means","that","?","SOURCE","indicates","where","the","?","Process","began",".","Note","that","this","relation","implies","that","?","SOURCE","is","present","at","the","beginning","of","the","process",",","but","need","not","participate","throughout","the","process",".","For","example",",","the","submarine","is","the","#$origin","in","the","following","proposition",":","the","missile","was","launched","from","a","submarine",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124131).
lisp_trans(documentation(origin,xtChineseLanguage,s("(","#$origin","?","PROCESS","?","SOURCE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","SOURCE","æ","\214\","\207\","å","\207\","º","?","Process","ä","»","\216\","å","\223\","ªå","¼","\200\","å","§","\213\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","?","SOURCE","å","\234\","¨","è","¿","\207\","ç","¨","\213\","å","¼","\200\","å","§","\213\","æ","\227\","¶","æ","\230\","¯","å","­","\230\","å","\234\","¨","ç","\232\","\204\","ï","¼","\214\","ä","½","\206\","æ","\230\","¯","å","®","\203\","ä","¸","\215\","ä","¸","\200\","å","®","\232\","æ","\234\","\211\","å","\217\","\202\","ä","¸","\216\","æ","\225\","´","ä","¸","ªè","¿","\207\","ç","¨","\213\","ä","¸","­","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","å","¯","¼","å","¼","¹","æ","\230\","¯","ä","»","\216\","æ","½","\234\","è","\211\","\207\","å","\217\","\221\","å","°","\204\","ç","\232\","\204\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","æ","½","\234\","è","\211\","\207\","æ","\230\","¯","ä","¸","ª","#$originã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124511).
lisp_trans(rtCaseRole(patient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124834).
lisp_trans(rtPartialValuedRelation(patient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124862).
lisp_trans(argIsa(patient,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124903).
lisp_trans(argIsa(patient,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124930).
lisp_trans(genlPreds(patient,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124956).
lisp_trans(documentation(patient,vEnglishLanguage,s("(","#$patient","?","PROCESS","?","ENTITY",")","means","that","?","ENTITY","is","a","participant","in","?","PROCESS","that","may","be","moved",",","said",",","experienced",",","etc",".","For","example",",","the","direct","objects","in","the","sentences","'","The","cat","swallowed","the","canary","'","and","'","Billy","likes","the","beer","'","would","be","examples","of","#$patients",".","Note","that","the","#$patient","of","a","#$Process","may","or","may","not","undergo","structural","change","as","a","result","of","the","#$Process",".","The","#$CaseRole","of","#$patient","is","used","when","one","wants","to","specify","as","broadly","as","possible","the","object","of","a","#$Process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':124994).
lisp_trans(documentation(patient,xtChineseLanguage,s("(","#$patient","?","PROCESS","?","ENTITY",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","ENTITY","æ","\230\","¯","?","PROCESS","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\217\","¯","ä","»","¥","è","¢","«","æ","\220\","¬","å","\212\","¨","ã","\200\","\201\","è","¢","«","å","\221\","\212\","è","¯","\211\","å","\222\","\214\","è","\203\","½","ä","½","\223\","éª","\214\","ç","­","\211\","ç","\232\","\204\","å","\217\","\202\","ä","¸","\216\","è","\200\","\205\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","'","é","\202\","£","å","\217\","ªç","\214\","«","å","\220\","\236\","æ","\216\","\211\","äº","\206\","é","\202\","£","å","\217\","ªé","\207\","\221\","ä","¸","\235\","é","\233\","\200\","'","å","\222\","\214\","'","æ","¯","\224\","å","\210\","©","å","\226\","\234\","æ","¬","¢","è","¿","\231\","å","\225\","¤","é","\205\","\222\","'","ç","\232\","\204\","ç","\233\","´","æ","\216\","¥","å","\217\","\227\","äº","\213\","ä","½","\223\","ä","¼","\232\","æ","\230\","¯","#$patient","ç","\232\","\204\","ä","¾","\213\","å","­","\220\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","¸","\200\","ä","¸","ª","#$Process","ç","\232\","\204\","#$patient","å","\217\","¯","è","\203\","½","ä","¼","\232\","ä","¹","\237\","å","\217\","¯","è","\203\","½","ä","¸","\215\","ä","¼","\232\","å","\233\","\240\","ä","¸","ºè","¯","¥","#$Process","è","\200\","\214\","ç","»","\217\","å","\216\","\206\","ç","»","\223\","æ","\236\","\204\","ä","¸","\212\","ç","\232\","\204\","å","\217\","\230\","å","\214\","\226\","ã","\200\","\202\","ç","\224\","¨","#$patient","è","¿","\231\","ä","¸","ª","#$CaseRole","æ","\230\","¯","å","½","\223\","æ","\210\","\221\","ä","»","¬","æ","\203\","³","å","°","½","å","\217\","¯","è","\203\","½","ä","»","¥","æ","\234\","\200\","å","¹","¿","æ","³","\233\","ç","\232\","\204\","ä","»","£","è","¡","¨","æ","\235\","¥","è","¦","\201\","æ","\214\","\207\","å","\207\","º","#$Process","ç","\232\","\204\","å","\217\","\227\","äº","\213\","ä","½","\223\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':125520).
lisp_trans(genlPreds(resource,patient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126041).
lisp_trans(rtCaseRole(resource),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126072).
lisp_trans(rtPartialValuedRelation(resource),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126101).
lisp_trans(argIsa(resource,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126143).
lisp_trans(argIsa(resource,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126171).
lisp_trans(disjointRelation(resource,result),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126198).
lisp_trans(disjointRelation(resource,instrument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126233).
lisp_trans(disjointRelation(result,instrument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126272).
lisp_trans(documentation(resource,vEnglishLanguage,s("(","#$resource","?","PROCESS","?","RESOURCE",")","means","that","?","RESOURCE","is","present","at","the","beginning","of","?","PROCESS",",","is","used","by","?","PROCESS",",","and","as","a","consequence","is","changed","by","?","PROCESS",".","For","example",",","soap","is","a","#$resource","in","the","following","proposition",":","the","gun","was","carved","out","of","soap",".","Note","that","#$resource","differs","from","#$instrument",",","another","subrelation","of","#$patient",",","in","that","its","internal","or","physical","properties","are","altered","in","some","way","by","the","#$Process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126309).
lisp_trans(documentation(resource,xtChineseLanguage,s("(","#$resource","?","PROCESS","?","RESOURCE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","RESOURCE","å","\234\","¨","?","PROCESS","å","¼","\200\","å","§","\213\","æ","\227\","¶","å","­","\230\","å","\234\","¨","ã","\200\","\201\","?","PROCESS","å","\210\","©","ç","\224\","¨","äº","\206\","ä","»","\226\","ã","\200\","\201\","ç","»","\223\","æ","\236\","\234\","å","®","\203\","å","\217\","\227\","å","\210\","°","?","PROCESS","ç","\232\","\204\","æ","\224\","¹","å","\217\","\230\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","è","¿","\231\","æ","\236\","ªæ","\230\","¯","ç","\224\","¨","è","\202\","¥","ç","\232\","\202\","é","\233\","\225\","å","\210\","»","å","\207\","ºæ","\235\","¥","ç","\232\","\204\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","è","\202\","¥","ç","\232\","\202\","æ","\230\","¯","ä","¸","ª","#$resourceã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$resource","å","\222\","\214\","#$patient","ç","\232\","\204\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªè","\207\","ªå","\205\","³","ç","³","»","#$instrument","ä","¸","\215\","å","\220\","\214\","ç","\232\","\204\","å","\234\","°","æ","\226\","¹","å","\234\","¨","äº","\216\","ï","¼","\214\","èµ","\204\","æº","\220\","ç","\232\","\204\","å","\206\","\205\","å","\234\","¨","æ","\210\","\226\","ç","\211\","©","ç","\220\","\206\","ç","\211\","¹","æ","\200\","§","å","\234\","¨","æ","\237\","\220\","æ","\226\","¹","é","\235\","¢","æ","\224\","¶","å","\210\","°","äº","\206\","#$Process","ç","\232\","\204\","æ","\224\","¹","å","\217\","\230\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':126778).
lisp_trans(documentation(resourceExhausted,vEnglishLanguage,s("(","#$resourceExhausted","?","PROCESS","?","RESOURCE",")","means","that","?","RESOURCE","is","present","at","the","beginning","of","?","PROCESS",",","is","used","by","?","PROCESS",",","and","as","a","consequence","is","completely","used","up","by","the","?","PROCESS",".","For","example",",","fuel","is","a","#$resourceExhausted","in","the","following","proposition",":","the","plane","run","out","of","fuel","and","ditched","in","the","sea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':127231).
lisp_trans(documentation(resourceExhausted,xtChineseLanguage,s("(","#$resourceExhausted","?","PROCESS","?","RESOURCE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","RESOURCE","å","\234\","¨","?","PROCESS","å","¼","\200\","å","§","\213\","æ","\227\","¶","å","­","\230\","å","\234\","¨","ã","\200\","\201\","?","PROCESS","å","\210\","©","ç","\224\","¨","äº","\206\","ä","»","\226\","ã","\200\","\201\","ç","»","\223\","æ","\236\","\234\","å","®","\203\","å","®","\214\","å","\205\","¨","è","¢","«","?","PROCESS","æ","¶","\210\","è","\200\","\227\","æ","\216\","\211\","äº","\206\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","é","\202\","£","é","£","\236\","æ","\234\","ºç","\232\","\204\","ç","\207\","\203\","æ","\226\","\231\","è","\200\","\227\","å","°","½","äº","\206\","ï","¼","\214\","å","°","±","ä","¸","¢","å","\210\","°","å","¤","§","æµ","·","é","\207\","\214\","äº","\206\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","ç","\207\","\203\","æ","\226\","\231\","æ","\230\","¯","ä","¸","ª","#$resourceExhaustedã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':127591).
lisp_trans(argIsa(resourceExhausted,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':127927).
lisp_trans(argIsa(resourceExhausted,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':127964).
lisp_trans(rtCaseRole(resourceExhausted),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128000).
lisp_trans(rtAsymmetricRelation(resourceExhausted),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128038).
lisp_trans(rtBinaryPredicate(resourceExhausted),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128086).
lisp_trans(rtPartialValuedRelation(resourceExhausted),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128131).
lisp_trans(=>(and(resourceExhausted(P,R),isa(R,C)),holdsDuring(uImmediateFutureFn(uWhenFn(P)),not(exists([OBJ1],and(part(OBJ1,R),isa(OBJ1,C)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128183).
lisp_trans(genlPreds(result,patient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128449).
lisp_trans(rtCaseRole(result),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128478).
lisp_trans(rtPartialValuedRelation(result),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128505).
lisp_trans(argIsa(result,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128545).
lisp_trans(argIsa(result,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128571).
lisp_trans(documentation(result,vEnglishLanguage,s("(","result","?","ACTION","?","OUTPUT",")","means","that","?","OUTPUT","is","a","product","of","?","ACTION",".","For","example",",","house","is","a","#$result","in","the","following","proposition",":","Eric","built","a","house",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128596).
lisp_trans(documentation(result,xtChineseLanguage,s("(","result","?","ACTION","?","OUTPUT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OUTPUT","æ","\230\","¯","?","ACTION","ç","\232\","\204\","äº","§","å","\223\","\201\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","¨","ä","»","¥","ä","¸","\213\","'","å","\237\","\203\","é","\207\","\214\","å","\205\","\213\","å","»","ºäº","\206\","ä","¸","\200\","æ","\240\","\213\","æ","\210\","¿","å","­","\220\","'","è","¿","\231\","å","\221\","½","é","¢","\230\","ï","¼","\214\","æ","\210\","¿","å","­","\220\","æ","\230\","¯","ä","¸","ª","#$resultã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128790).
lisp_trans(genls(rtInheritableRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':128986).
lisp_trans(documentation(rtInheritableRelation,vEnglishLanguage,s("The","class","of","#$Relations","whose","properties","can","be","inherited","downward","in","the","class","hierarchy","via","the","#$subrelation","#$Predicate",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129026).
lisp_trans(documentation(rtInheritableRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Relation","ç","±","»","å","\210\","«","ï","¼","\214\","å","®","\203\","ç","\232\","\204\","ç","\211\","¹","æ","\200\","§","å","\217\","¯","ä","»","¥","æ","\230\","¯","é","\200\","\232\","è","¿","\207\","#$subrelation","#$Predicate","æ","\212\","\212\","ç","\211\","¹","æ","\200\","§","å","\234\","¨","ç","±","»","å","\210\","«","ç","\232\","\204\","å","±","\202\","æ","¬","¡","ç","»","\223\","æ","\236\","\204\","æ","\211\","¿","ä","¼","\240\","ä","¸","\213\","å","\216\","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129206).
lisp_trans(genls(rtProbabilityRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129398).
lisp_trans(genls(rtProbabilityRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129438).
lisp_trans(documentation(rtProbabilityRelation,vEnglishLanguage,s("The","#$Class","of","#$Relations","that","permit","assessment","of","the","probability","of","an","event","or","situation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129489).
lisp_trans(documentation(rtProbabilityRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Relation","ç","±","»","å","\210\","«","ï","¼","\214\","å","®","\203\","å","\205\","\201\","è","®","¸","è","¯","\204\","ä","¼","°","äº","\213\","ä","»","¶","æ","\210\","\226\","æ","\203\","\205\","å","\206\","µå","\207\","ºç","\216\","°","ç","\232\","\204\","æ","\234\","ºç","\216\","\207\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129638).
lisp_trans(rtProbabilityRelation(vProbabilityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129776).
lisp_trans(rtTotalValuedRelation(vProbabilityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129821).
lisp_trans(rtUnaryFunction(vProbabilityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129866).
lisp_trans(argIsa(vProbabilityFn,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129905).
lisp_trans(resultIsa(vProbabilityFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129938).
lisp_trans(rtAsymmetricRelation(vProbabilityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':129971).
lisp_trans(documentation(vProbabilityFn,vEnglishLanguage,s("One","of","the","basic","#$ProbabilityRelations",",","#$ProbabilityFn","is","used","to","state","the","a","priori","probability","of","a","state","of","affairs",".","(","#$ProbabilityFn","?","FORMULA",")","denotes","the","a","priori","probability","of","?","FORMULA",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130015).
lisp_trans(documentation(vProbabilityFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","ç","\232\","\204\","#$ProbabilityRelationï","¼","\214\","#$ProbabilityFn","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","æ","\217\","\217\","è","¿","°","äº","\213\","æ","\200\","\201\","ç","\232\","\204\","å","\205\","\210\","éª","\214\","æ","\234\","ºç","\216\","\207\","ã","\200\","\202\","(","#$ProbabilityFn","?","FORMULA",")","è","¡","¨","ç","¤","º","?","FORMULA","ç","\232\","\204\","å","\205\","\210\","éª","\214\","æ","\234\","ºç","\216\","\207\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130259).
lisp_trans(rtProbabilityRelation(conditionalProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130477).
lisp_trans(rtTernaryPredicate(conditionalProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130531).
lisp_trans(argIsa(conditionalProbability,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130582).
lisp_trans(argIsa(conditionalProbability,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130624).
lisp_trans(argIsa(conditionalProbability,3,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130666).
lisp_trans(documentation(conditionalProbability,vEnglishLanguage,s("One","of","the","basic","#$ProbabilityRelations",".","#$conditionalProbability","is","used","to","state","the","numeric","value","of","a","conditional","probability",".","(","#$conditionalProbability","?","FORMULA1","?","FORMULA2","?","NUMBER",")","means","that","the","probability","of","?","FORMULA2","being","true","given","that","?","FORMULA1","is","true","is","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':130711).
lisp_trans(documentation(conditionalProbability,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","ç","\232\","\204\","#$ProbabilityRelationsï","¼","\214\","#$conditionalProbability","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","æ","\217\","\217\","è","¿","°","ä","¸","\200\","ä","¸","ªæ","\235\","¡","ä","»","¶","æ","\234\","ºç","\216\","\207\","ç","\232\","\204\","æ","\225\","°","å","\200\","¼","ã","\200\","\202\","(","#$conditionalProbability","?","FORMULA1","?","FORMULA2","?","NUMBER",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ï","¼","\214\","å","¦","\202\","æ","\236\","\234\","?","FORMULA1","å","±","\236\","ç","\234\","\237\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","?","FORMULA2","ä","¼","\232\","æ","\230\","¯","ç","\234\","\237\","ï","¼","\214\","å","®","\203\","å","\207\","ºç","\216\","°","ç","\232\","\204\","æ","\234\","ºç","\216\","\207\","ä","¼","\232\","æ","\230\","¯","?","NUMBERã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131047).
lisp_trans(rtProbabilityRelation(increasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131390).
lisp_trans(rtBinaryPredicate(increasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131441).
lisp_trans(rtIrreflexiveRelation(increasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131488).
lisp_trans(argIsa(increasesLikelihood,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131539).
lisp_trans(argIsa(increasesLikelihood,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131578).
lisp_trans(disjointRelation(increasesLikelihood,decreasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131617).
lisp_trans(disjointRelation(increasesLikelihood,independentProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131676).
lisp_trans(disjointRelation(decreasesLikelihood,independentProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131738).
lisp_trans(documentation(increasesLikelihood,vEnglishLanguage,s("One","of","the","basic","#$ProbabilityRelations",".","(","#$increasesLikelihood","?","FORMULA1","?","FORMULA2",")","means","that","?","FORMULA2","is","more","likely","to","be","true","if","?","FORMULA1","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':131800).
lisp_trans(documentation(increasesLikelihood,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","ç","\232\","\204\","#$ProbabilityRelationï","¼","\214\","(","#$increasesLikelihood","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","¦","\202\","æ","\236\","\234\","?","FORMULA1","å","±","\236\","ç","\234\","\237\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","?","FORMULA2","æ","\233\","´","æ","\234\","\211\","å","\217\","¯","è","\203\","½","ä","¼","\232\","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132008).
lisp_trans(=>(and(increasesLikelihood(FORMULA1,FORMULA2),equal(vProbabilityFn(FORMULA2),NUMBER1),conditionalProbability(FORMULA1,FORMULA2,NUMBER2)),greaterThan(NUMBER2,NUMBER1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132243).
lisp_trans(rtProbabilityRelation(decreasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132450).
lisp_trans(rtBinaryPredicate(decreasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132501).
lisp_trans(rtIrreflexiveRelation(decreasesLikelihood),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132548).
lisp_trans(argIsa(decreasesLikelihood,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132599).
lisp_trans(argIsa(decreasesLikelihood,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132638).
lisp_trans(documentation(decreasesLikelihood,vEnglishLanguage,s("One","of","the","basic","#$ProbabilityRelations",".","(","#$decreasesLikelihood","?","FORMULA1","?","FORMULA2",")","means","that","?","FORMULA2","is","less","likely","to","be","true","if","?","FORMULA1","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132677).
lisp_trans(documentation(decreasesLikelihood,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","ç","\232\","\204\","#$ProbabilityRelationï","¼","\214\","(","#$decreasesLikelihood","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","¦","\202\","æ","\236\","\234\","?","FORMULA1","å","±","\236\","ç","\234\","\237\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","?","FORMULA2","ä","¸","\215\","å","¤","ª","å","\217\","¯","è","\203\","½","ä","¼","\232\","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':132885).
lisp_trans(=>(and(decreasesLikelihood(FORMULA1,FORMULA2),equal(vProbabilityFn(FORMULA2),NUMBER1),conditionalProbability(FORMULA1,FORMULA2,NUMBER2)),lessThan(NUMBER2,NUMBER1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133120).
lisp_trans(rtProbabilityRelation(independentProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133324).
lisp_trans(rtBinaryPredicate(independentProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133378).
lisp_trans(rtSymmetricRelation(independentProbability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133428).
lisp_trans(argIsa(independentProbability,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133480).
lisp_trans(argIsa(independentProbability,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133522).
lisp_trans(documentation(independentProbability,vEnglishLanguage,s("One","of","the","basic","#$ProbabilityRelations",".","(","#$independentProbability","?","FORMULA1","?","FORMULA2",")","means","that","the","probabilities","of","?","FORMULA1","and","?","FORMULA2","being","true","are","independent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133564).
lisp_trans(documentation(independentProbability,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","ç","\232\","\204\","#$ProbabilityRelationï","¼","\214\","(","#$independentProbability","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","FORMULA1","å","\222\","\214\","?","FORMULA2","å","±","\236\","ç","\234\","\237\","æ","\234\","ºç","\216\","\207\","æ","\230\","¯","ç","\213\","¬","ç","«","\213\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':133793).
lisp_trans(=>(and(independentProbability(FORMULA1,FORMULA2),equal(vProbabilityFn(FORMULA2),NUMBER1),conditionalProbability(FORMULA1,FORMULA2,NUMBER2)),equal(NUMBER2,NUMBER1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134017).
lisp_trans(=>(and(ftFormula(FORMULA1),ftFormula(FORMULA2)),or(increasesLikelihood(FORMULA1,FORMULA2),decreasesLikelihood(FORMULA1,FORMULA2),independentProbability(FORMULA1,FORMULA2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134221).
lisp_trans(genls(rtSpatialRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134461).
lisp_trans(genls(rtSpatialRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134497).
lisp_trans(documentation(rtSpatialRelation,vEnglishLanguage,s("The","#$Class","of","#$Relations","that","are","spatial","in","a","wide","sense",".","This","#$Class","includes","mereological","relations","and","topological","relations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134544).
lisp_trans(documentation(rtSpatialRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¹","¿","ä","¹","\211\","ç","\232\","\204\","ç","©","ºé","\227\","´","#$Relation","#$Classï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Class","å","\214\","\205\","æ","\213\","¬","å","\210\","\206\","ä","½","\223\","è","®","ºå","\205\","³","ç","³","»","å","\222\","\214\","æ","\213\","\223\","æ","\211\","\221\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134728).
lisp_trans(genls(rtTemporalRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134883).
lisp_trans(genls(rtTemporalRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134920).
lisp_trans(documentation(rtTemporalRelation,vEnglishLanguage,s("The","#$Class","of","temporal","#$Relations",".","This","#$Class","includes","notions","of","(","temporal",")","topology","of","intervals",",","(","temporal",")","schemata",",","and","(","temporal",")","extension",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':134968).
lisp_trans(documentation(rtTemporalRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","#$Relation","ç","\232\","\204\","#$Classï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Class","å","\214\","\205\","æ","\213\","¬","é","\227\","´","é","\232\","\224\","æ","\213\","\223\","æ","\211\","\221\","ç","\232\","\204\","(","æ","\227\","¶","é","\227\","´",")","æ","¦","\202\","å","¿","µã","\200\","\201\","(","æ","\227\","¶","é","\227\","´",")","æ","¨","¡","å","¼","\217\","å","\222\","\214\","(","æ","\227\","¶","é","\227\","´",")","å","»","¶","ä","¼","¸","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135170).
lisp_trans(genls(rtIntentionalRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135349).
lisp_trans(genls(rtIntentionalRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135400).
lisp_trans(documentation(rtIntentionalRelation,vEnglishLanguage,s("The","#$Class","of","#$Relations","between","an","#$Agent","and","one","or","more","#$Entities",",","where","the","#$Relation","requires","that","the","#$Agent","have","awareness","of","the","#$Entity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135440).
lisp_trans(documentation(rtIntentionalRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Agent","å","\222\","\214\","ä","¸","\200\","ä","¸","ªæ","\210\","\226\","ä","»","¥","ä","¸","\212\","ç","\232\","\204\","#$Entity","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$Relation","#$Classï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Relation","è","¦","\201\","æ","±","\202\","#$Agent","å","¯","¹","#$Entity","æ","\234\","\211\","è","®","¤","ç","\237\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135647).
lisp_trans(=>(and(rtIntentionalRelation(REL),[REL,AGENT|ROW],inList(OBJ,uN(vTheListFn,ROW))),inScopeOfInterest(AGENT,OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135839).
lisp_trans(rtTernaryPredicate(prefers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':135990).
lisp_trans(rtIntentionalRelation(prefers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136026).
lisp_trans(argIsa(prefers,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136065).
lisp_trans(argIsa(prefers,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136099).
lisp_trans(argIsa(prefers,3,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136126).
lisp_trans(documentation(prefers,vEnglishLanguage,s("(","#$prefers","?","AGENT","?","FORMULA1","?","FORMULA2",")","means","that","#$CognitiveAgent","?","AGENT","prefers","the","state","of","affairs","expressed","by","?","FORMULA1","over","the","state","of","affairs","expressed","by","?","FORMULA2","all","things","being","equal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136153).
lisp_trans(documentation(prefers,xtChineseLanguage,s("(","#$prefers","?","AGENT","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","æ","\211\","\200\","æ","\234\","\211\","æ","\235\","¡","ä","»","¶","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","æ","\203\","\205\","å","\206\","µä","¸","\213\","ï","¼","\214\","#$CognitiveAgent","?","AGENT","å","\226\","\234\","æ","¬","¢","?","FORMULA1","æ","\211\","\200\","æ","\217\","\217\","è","¿","°","ç","\232\","\204\","äº","\213\","æ","\200\","\201\","å","¤","\232\","äº","\216\","?","FORMULA2","æ","\211\","\200\","æ","\217\","\217\","è","¿","°","ç","\232\","\204\","äº","\213\","æ","\200\","\201\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136394).
lisp_trans(genls(tSumoPropositionalAttitude,rtIntentionalRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136626).
lisp_trans(genls(tSumoPropositionalAttitude,rtAsymmetricRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136679).
lisp_trans(genls(tSumoPropositionalAttitude,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136731).
lisp_trans(documentation(tSumoPropositionalAttitude,vEnglishLanguage,s("The","#$Class","of","#$IntentionalRelations","where","the","#$Agent","has","awareness","of","a","#$Proposition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136784).
lisp_trans(documentation(tSumoPropositionalAttitude,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$IntentionalRelation","#$Classï","¼","\214\","å","®","\203\","ç","\232\","\204\","#$Agent","å","¯","¹","#$Proposition","æ","\234\","\211\","è","®","¤","ç","\237\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':136930).
lisp_trans(=>(and(tSumoPropositionalAttitude(REL),[REL,AGENT,FORMULA]),ftFormula(FORMULA)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137079).
lisp_trans(genls(tSumoObjectAttitude,rtIntentionalRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137198).
lisp_trans(genls(tSumoObjectAttitude,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137244).
lisp_trans(disjointWith(tSumoObjectAttitude,tSumoPropositionalAttitude),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137290).
lisp_trans(documentation(tSumoObjectAttitude,vEnglishLanguage,s("The","#$Class","of","#$IntentionalRelations","where","the","#$Agent","has","awareness","of","an","instance","of","#$Physical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137338).
lisp_trans(documentation(tSumoObjectAttitude,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$IntentionalRelation","#$Classï","¼","\214\","å","®","\203\","ç","\232\","\204\","#$Agent","å","¯","¹","#$Physical","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","æ","\234\","\211\","è","®","¤","ç","\237\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137487).
lisp_trans(=>(and(tSumoObjectAttitude(REL),[REL,AGENT,THING]),tSumoPhysical(THING)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137635).
lisp_trans(rtBinaryPredicate(inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137744).
lisp_trans(rtIntentionalRelation(inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137789).
lisp_trans(argIsa(inScopeOfInterest,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137838).
lisp_trans(argIsa(inScopeOfInterest,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137882).
lisp_trans(documentation(inScopeOfInterest,vEnglishLanguage,s("A","very","general","#$Predicate",".","(","#$inScopeOfInterest","?","AGENT","?","ENTITY",")","means","that","?","ENTITY","is","within","the","scope","of","interest","of","?","AGENT",".","Note","that","the","interest","indicated","can","be","either","positive","or","negative",",","i",".","e",".","the","?","AGENT","can","have","an","interest","in","avoiding","or","promoting","?","ENTITY",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':137918).
lisp_trans(documentation(inScopeOfInterest,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","ç","¬","¼","ç","»","\237\","ç","\232\","\204\","#$Predicateï","¼","\214\","(","#$inScopeOfInterest","?","AGENT","?","ENTITY",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","ENTITY","å","\234\","¨","?","AGENT","ç","\232\","\204\","ç","\225\","\231\","æ","\204\","\217\","è","\214\","\203\","å","\233\","´","ä","¹","\213\","å","\206\","\205\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","³","¨","æ","\204\","\217\","å","\217\","¯","ä","»","¥","æ","\230\","¯","æ","­","£","é","\235\","¢","æ","\210\","\226\","è","´","\237\","é","\235\","¢","ç","\232\","\204\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","?","AGENT","å","\217\","¯","ä","»","¥","æ","\230\","¯","æ","\234\","\211\","æ","\204\","\217\","å","\233\","¾","è","¦","\201\","é","\201\","¿","å","¼","\200\","æ","\210\","\226\","æ","\230\","¯","æ","\216\","¨","è","\215\","\220\","?","ENTITYã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138238).
lisp_trans(<=>(exists([PROCESS],and(actIntentionalProcess(PROCESS),agent(PROCESS,AGENT),mobCognitiveAgent(AGENT),patient(PROCESS,OBJECT))),inScopeOfInterest(AGENT,OBJECT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138544).
lisp_trans(tSumoObjectAttitude(needs),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138783).
lisp_trans(rtBinaryPredicate(needs),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138815).
lisp_trans(genlPreds(needs,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138848).
lisp_trans(argIsa(needs,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138886).
lisp_trans(argIsa(needs,2,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138918).
lisp_trans(documentation(needs,vEnglishLanguage,s("(","#$needs","?","AGENT","?","OBJECT",")","means","that","?","OBJECT","is","physically","required","for","the","continued","existence","of","?","AGENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':138944).
lisp_trans(documentation(needs,xtChineseLanguage,s("(","#$needs","?","AGENT","?","OBJECT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENTç","\232\","\204\","ç","»","§","ç","»","­","å","­","\230\","å","\234\","¨","ç","\211\","©","è","´","¨","ä","¸","\212\","é","\234\","\200\","è","¦","\201\","?","OBJECTã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139090).
lisp_trans(=>(needs(AGENT,OBJECT),wants(AGENT,OBJECT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139218).
lisp_trans(tSumoObjectAttitude(wants),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139278).
lisp_trans(rtBinaryPredicate(wants),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139310).
lisp_trans(genlPreds(wants,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139343).
lisp_trans(relatedInternalConcept(wants,desires),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139381).
lisp_trans(argIsa(wants,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139420).
lisp_trans(argIsa(wants,2,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139452).
lisp_trans(documentation(wants,vEnglishLanguage,s("(","#$wants","?","AGENT","?","OBJECT",")","means","that","?","OBJECT","is","desired","by","?","AGENT",",","i",".","e",".","?","AGENT","believes","that","?","OBJECT","will","satisfy","one","of","its","goals",".","Note","that","there","is","no","implication","that","what","is","wanted","by","an","agent","is","not","already","possessed","by","the","agent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139478).
lisp_trans(documentation(wants,xtChineseLanguage,s("(","#$wants","?","AGENT","?","OBJECT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","æ","\203\","³","è","¦","\201\","?","OBJECTï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","?","AGENT","ç","\233\","¸","ä","¿","¡","?","OBJECT","ä","¼","\232\","æ","»","¡","è","¶","³","å","®","\203\","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªç","\232\","\204\","æ","\204\","\217\","æ","\204\","¿","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","å","¹","¶","ä","¸","\215\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","æ","\226\","½","äº","\213\","ä","½","\223\","æ","²","¡","æ","\234\","\211\","å","®","\203\","æ","\211\","\200\","æ","\203\","³","è","¦","\201\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139755).
lisp_trans(=>(wants(AGENT,OBJ),exists([PURP],hasPurposeForAgent(OBJ,PURP,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':139995).
lisp_trans(=>(and(wants(AGENT,OBJ),tSumoObject(OBJ)),desires(AGENT,possesses(AGENT,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140089).
lisp_trans(tSumoPropositionalAttitude(desires),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140201).
lisp_trans(rtBinaryPredicate(desires),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140242).
lisp_trans(genlPreds(desires,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140277).
lisp_trans(relatedInternalConcept(desires,wants),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140317).
lisp_trans(argIsa(desires,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140356).
lisp_trans(argIsa(desires,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140390).
lisp_trans(documentation(desires,vEnglishLanguage,s("(","#$desires","?","AGENT","?","FORMULA",")","means","that","?","AGENT","wants","to","bring","about","the","state","of","affairs","expressed","by","?","FORMULA",".","Note","that","there","is","no","implication","that","what","is","desired","by","the","agent","is","not","already","true",".","Note","too","that","#$desires","is","distinguished","from","#$wants","only","in","that","the","former","is","a","#$PropositionalAttitude",",","while","#$wants","is","an","#$ObjectAttitude",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140417).
lisp_trans(documentation(desires,xtChineseLanguage,s("(","#$desires","?","AGENT","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","æ","\203\","³","è","¦","\201\","å","®","\236\","ç","\216\","°","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","äº","\213\","æ","\200\","\201\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","å","¹","¶","ä","¸","\215\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","æ","\226\","½","äº","\213\","ä","½","\223\","æ","\203\","³","è","¦","\201\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","ä","¸","\215\","è","\203\","½","æ","\210\","\220\","ç","\234\","\237\","ã","\200\","\202\","å","\217\","¦","å","¤","\226\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","#$desires","å","\222\","\214\","#$wants","ç","\232\","\204\","å","\214\","ºå","\210\","«","å","\217\","ªå","\234\","¨","äº","\216\","å","\211\","\215\","è","\200\","\205\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$PropositionalAttitudeï","¼","\214\","è","\200\","\214\","#$wants","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$ObjectAttitudeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':140806).
lisp_trans(tSumoPropositionalAttitude(considers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141152).
lisp_trans(rtBinaryPredicate(considers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141195).
lisp_trans(genlPreds(considers,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141232).
lisp_trans(argIsa(considers,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141274).
lisp_trans(argIsa(considers,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141310).
lisp_trans(documentation(considers,vEnglishLanguage,s("(","#$considers","?","AGENT","?","FORMULA",")","means","that","?","AGENT","considers","or","wonders","about","the","truth","of","the","proposition","expressed","by","?","FORMULA",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141339).
lisp_trans(documentation(considers,xtChineseLanguage,s("(","#$considers","?","AGENT","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","å","\234\","¨","è","\200\","\203\","è","\231\","\221\","æ","\210\","\226\","æ","\200\","\200\","ç","\226\","\221\","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\221\","½","é","¢","\230\","æ","\230\","¯","å","\220\","¦","ç","\234\","\237\","å","®","\236\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141510).
lisp_trans(tSumoPropositionalAttitude(believes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141668).
lisp_trans(rtBinaryPredicate(believes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141710).
lisp_trans(genlPreds(believes,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141746).
lisp_trans(argIsa(believes,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141787).
lisp_trans(argIsa(believes,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141822).
lisp_trans(documentation(believes,vEnglishLanguage,s("The","epistemic","predicate","of","belief",".","(","#$believes","?","AGENT","?","FORMULA",")","means","that","?","AGENT","believes","the","proposition","expressed","by","?","FORMULA",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':141850).
lisp_trans(documentation(believes,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¿","¡","å","¿","µç","\232\","\204\","ç","\237\","¥","è","¯","\206\","è","°","\223\","è","¯","\215\","ï","¼","\214\","(","#$believes","?","AGENT","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","ç","\233\","¸","ä","¿","¡","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\221\","½","é","¢","\230\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142023).
lisp_trans(=>(believes(AGENT,FORMULA),exists([TIME],holdsDuring(TIME,considers(AGENT,FORMULA)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142184).
lisp_trans(tSumoPropositionalAttitude(knows),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142294).
lisp_trans(rtBinaryPredicate(knows),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142333).
lisp_trans(genlPreds(knows,inScopeOfInterest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142366).
lisp_trans(argIsa(knows,1,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142404).
lisp_trans(argIsa(knows,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142436).
lisp_trans(documentation(knows,vEnglishLanguage,s("The","epistemic","predicate","of","knowing",".","(","#$knows","?","AGENT","?","FORMULA",")","means","that","?","AGENT","knows","the","proposition","expressed","by","?","FORMULA",".","Note","that","#$knows","entails","conscious","awareness",",","so","this","#$Predicate","cannot","be","used","to","express","tacit","or","subconscious","or","unconscious","knowledge",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142461).
lisp_trans(documentation(knows,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","®","¤","è","¯","\206\","ç","\232\","\204\","ç","\237\","¥","è","¯","\206\","è","°","\223\","è","¯","\215\","ï","¼","\214\","(","#$knows","?","AGENT","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","è","®","¤","è","¯","\206\","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\221\","½","é","¢","\230\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$knows","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","æ","\234\","\211\","æ","\204\","\217\","è","¯","\206\","ç","\232\","\204\","è","®","¤","ç","\237\","¥","ï","¼","\214\","å","\233\","\240\","æ","­","¤","è","¿","\231\","ä","¸","ª","#$Predicate","ä","¸","\215\","è","\203\","½","å","¤","\237\","ç","\224\","¨","æ","\235\","¥","è","¡","¨","è","¾","¾","æ","²","\211\","é","»","\230\","æ","\210\","\226\","æ","\227\","\240\","æ","\204\","\217\","è","¯","\206\","ç","\232\","\204\","ç","\237\","¥","è","¯","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':142769).
lisp_trans(=>(knows(AGENT,FORMULA),believes(AGENT,FORMULA)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143047).
lisp_trans(=>(knows(AGENT,FORMULA),truth(FORMULA,vTrue)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143108).
lisp_trans(genls(rtTernaryRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143164).
lisp_trans(genls(rtTernaryRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143200).
lisp_trans(documentation(rtTernaryRelation,vEnglishLanguage,'TernaryRelations relate three items. The two #$subclasses of #$TernaryRelation are #$TernaryPredicate and #$BinaryFunction.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143247).
lisp_trans(documentation(rtTernaryRelation,xtChineseLanguage,'TernaryRelation è¿\236\æ\216\¥ä¸\211\ä¸ªé¡¹ç\233\®ï¼\214\ #$TernaryRelation ç\232\\204\ä¸¤ä¸ª #$subclass æ\230\¯ #$TernaryPredicate å\222\\214\ #$BinaryFunctionã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143423).
lisp_trans(genls(rtQuaternaryRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143600).
lisp_trans(genls(rtQuaternaryRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143639).
lisp_trans(documentation(rtQuaternaryRelation,vEnglishLanguage,'QuaternaryRelations relate four items.  The two #$subclasses of #$QuaternaryRelation are #$QuaternaryPredicate and #$TernaryFunction.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143689).
lisp_trans(documentation(rtQuaternaryRelation,xtChineseLanguage,'QuaternaryRelation è¿\236\æ\216\¥å\233\\233\ä¸ªé¡¹ç\233\®ã\200\\202\ #$QuaternaryRelation ç\232\\204\ä¸¤ä¸ª #$subclass æ\230\¯ #$QuaternaryPredicate å\222\\214\ #$TernaryFunctionã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':143878).
lisp_trans(genls(rtQuintaryRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144068).
lisp_trans(genls(rtQuintaryRelation,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144105).
lisp_trans(documentation(rtQuintaryRelation,vEnglishLanguage,'QuintaryRelations relate five items. The two #$subclasses of #$QuintaryRelation are #$QuintaryPredicate and #$QuaternaryFunction.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144153).
lisp_trans(documentation(rtQuintaryRelation,xtChineseLanguage,'QuintaryRelation è¿\236\æ\216\¥ç\211\©ä¸ªé¡¹ç\233\®ã\200\\202\ #$QuintaryRelation ç\232\\204\ä¸¤ä¸ª #$subclass æ\230\¯ #$QuintaryPredicate å\222\\214\ #$QuaternaryFunctionã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144336).
lisp_trans(genls(ftList,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144521).
lisp_trans(documentation(ftList,vEnglishLanguage,s("Every","#$List","is","a","particular","ordered","n","-","tuple","of","items",".","Generally","speaking",",","#$Lists","are","created","by","means","of","the","#$ListFn","#$Function",",","which","takes","any","number","of","items","as","arguments","and","returns","a","#$List","with","the","items","in","the","same","order",".","Anything",",","including","other","#$Lists",",","may","be","an","item","in","a","#$List",".","Note","too","that","#$Lists","are","extensional","-","two","lists","that","have","the","same","items","in","the","same","order","are","identical",".","Note","too","that","a","#$List","may","contain","no","items",".","In","that","case",",","the","#$List","is","the","#$NullList",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':144546).
lisp_trans(documentation(ftList,xtChineseLanguage,s("æ","¯","\217\","ä","¸","ª","#$List","æ","\230\","¯","é","¡","¹","ç","\233\","®","ä","¸","\200\","ä","¸","ªç","\213\","¬","ç","\211\","¹","æ","\234\","\211\","åº","\217\","ç","\232\","\204\","nå","\205\","\203\","ç","»","\204\","ã","\200\","\202\","ä","¸","\200\","è","\210\","¬","æ","\235\","¥","è","¯","´","ï","¼","\214\","#$List","æ","\230\","¯","ç","\224\","±","#$ListFn","#$Function","æ","\235\","¥","é","\200\","\240\","æ","\210\","\220\","ç","\232\","\204\","ï","¼","\214\","å","®","\203\","å","\217\","¯","ä","»","¥","æ","\216\","¥","å","\217\","\227\","ä","»","»","ä","½","\225\","æ","\225\","°","é","\207\","\217\","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","äº","¤","å","\207\","ºä","¸","\200\","ä","¸","ªæ","\234\","\211\","ç","\233\","¸","å","\220\","\214\","é","¡","ºåº","\217\","é","¡","¹","ç","\233\","®","ç","\232\","\204\","#$Listã","\200\","\202\","ä","»","»","ä","½","\225\","ä","¸","\234\","è","¥","¿","ï","¼","\214\","å","\214\","\205\","æ","\213\","¬","å","\205\","¶","å","®","\203\","ç","\232\","\204\","#$List","é","\203\","½","å","\217\","¯","ä","»","¥","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$List","ç","\232\","\204\","é","¡","¹","ç","\233\","®","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$List","æ","\230\","¯","å","\217\","¯","ä","»","¥","å","»","¶","ä","¼","¸","ç","\232\","\204\","-","ä","¸","¤","ä","¸","ªå","\220\","«","æ","\234\","\211\","ç","\233\","¸","å","\220\","\214\","é","¡","¹","ç","\233\","®","ä","»","¥","ç","\233\","¸","å","\220\","\214\","é","¡","ºåº","\217\","æ","\216\","\222\","å","\210\","\227\","ç","\232\","\204\","å","\210\","\227\","è","¡","¨","æ","\230\","¯","ä","¸","\200\","æ","\240\","·","ç","\232\","\204\","ã","\200\","\202\","å","\217\","¦","å","¤","\226\","ä","¹","\237\","æ","³","¨","æ","\204\","\217\","ä","¸","\200\","ä","¸","ª","#$List","å","\217\","¯","ä","»","¥","æ","\230\","¯","ç","©","ºé","¡","¹","ç","\232\","\204\","ï","¼","\214\","å","\234\","¨","è","¿","\231\","æ","\203\","\205\","å","\206\","µä","¸","\213\","ï","¼","\214\","è","¿","\231\","ä","¸","ª","#$List","æ","\230\","¯","ä","¸","ª","#$NullListã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':145082).
lisp_trans(genls(ftUniqueList,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146049).
lisp_trans(documentation(ftUniqueList,vEnglishLanguage,s("A","#$List","in","which","no","item","appears","more","than","once",",","i",".","e",".","a","#$List","for","which","there","are","no","distinct","numbers","?","NUMBER1","and","?","NUMBER2","such","that","(","#$ListOrderFn","?","LIST","?","NUMBER1",")","and","(","#$ListOrderFn","?","LIST","?","NUMBER2",")","return","the","same","value",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146076).
lisp_trans(documentation(ftUniqueList,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$List","é","\207\","\214\","ç","\232\","\204\","æ","²","¡","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªé","¡","¹","ç","\233\","®","æ","\230\","¯","å","\207\","ºç","\216\","°","è","¶","\205\","è","¿","\207\","ä","¸","\200\","æ","¬","¡","ç","\232\","\204\","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","²","¡","æ","\234\","\211\","ä","¸","\215\","å","\220\","\214\","æ","\225\","°","å","­","\227\","?","NUMBER1","å","\222\","\214\","?","NUMBER2","ç","\232\","\204\","#$Listï","¼","\214\","ä","½","¿","å","¾","\227\","(","#$ListOrderFn","?","LIST","?","NUMBER1",")","å","\222\","\214\","(","#$ListOrderFn","?","LIST","?","NUMBER2",")","ä","¼","\232\","äº","¤","å","\207\","ºç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146346).
lisp_trans(=>(ftUniqueList(LIST),all([NUMBER1,NUMBER2],=>(equal(vSumoListOrderFn(LIST,NUMBER1),vSumoListOrderFn(LIST,NUMBER2)),equal(NUMBER1,NUMBER2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146633).
lisp_trans(ftList(ftNullList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146823).
lisp_trans(documentation(ftNullList,vEnglishLanguage,s("The","#$List","that","has","no","items",".","The","uniqueness","of","#$NullList","follows","from","the","extensionality","of","#$Lists",",","i",".","e",".","the","fact","that","two","#$Lists","with","the","same","items","in","the","same","order","are","identical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':146848).
lisp_trans(documentation(ftNullList,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","²","¡","æ","\234\","\211\","é","¡","¹","ç","\233\","®","ç","\232\","\204\","#$Listï","¼","\214\","#$NullList","ç","\232\","\204\","ç","\213\","¬","ç","\211\","¹","ä","¹","\213\","å","¤","\204\","æ","\230\","¯","å","\233\","\240\","ä","¸","º","#$List","æ","\230\","¯","å","\217\","¯","ä","»","¥","å","»","¶","ä","¼","¸","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","ä","¿","©","ä","¸","ªå","\220\","«","æ","\234\","\211\","ç","\233\","¸","å","\220\","\214\","é","¡","¹","ç","\233\","®","ä","»","¥","ç","\233\","¸","å","\220\","\214\","é","¡","ºåº","\217\","æ","\216\","\222\","å","\210\","\227\","ç","\232\","\204\","å","\210\","\227\","è","¡","¨","æ","\230\","¯","ä","¸","\200\","æ","\240\","·","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147079).
lisp_trans(tFunction(vTheListFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147452).
lisp_trans(rtVariableArityRelation(vTheListFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147479).
lisp_trans(argIsa(vTheListFn,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147519).
lisp_trans(resultIsa(vTheListFn,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147644).
lisp_trans(documentation(vTheListFn,vEnglishLanguage,s("A","#$Function","that","takes","any","number","of","arguments","and","returns","the","#$List","containing","those","arguments","in","exactly","the","same","order",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147664).
lisp_trans(documentation(vTheListFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\217\","¯","ä","»","¥","æ","\216\","¥","å","\217\","\227\","ä","»","»","ä","½","\225\","æ","\225\","°","é","\207\","\217\","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","äº","¤","å","\207\","ºå","\220\","«","æ","\234\","\211\","è","·","\237\","å","\223\","ªäº","\233\","å","\217\","\202\","æ","\225\","°","å","®","\214\","å","\205\","¨","ç","\233\","¸","å","\220\","\214\","é","¡","ºåº","\217\","ç","\232\","\204\","#$Functionã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147830).
lisp_trans(=>(tN(exhaustiveDecomposition,CLASS,ROW),all([OBJ],=>(isa(OBJ,CLASS),exists([ITEM],and(inList(ITEM,uN(vTheListFn,ROW)),isa(OBJ,ITEM)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':147990).
lisp_trans(=>(tN(disjointDecomposition,CLASS,ROW),all([ITEM],=>(inList(ITEM,uN(vTheListFn,ROW)),genls(ITEM,CLASS)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148224).
lisp_trans(=>(tN(disjointDecomposition,CLASS,ROW),all([ITEM1,ITEM2],=>(and(inList(ITEM1,uN(vTheListFn,ROW)),inList(ITEM2,uN(vTheListFn,ROW)),not(equal(ITEM1,ITEM2))),disjointWith(ITEM1,ITEM2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148371).
lisp_trans(<=>(disjointDecomposition(CLASS,ROW1,ROW2,ROW3),and(disjointWith(ROW1,ROW2),disjointWith(ROW2,ROW3),disjointWith(ROW3,ROW1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148643).
lisp_trans(rtBinaryFunction(vSumoListOrderFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148790).
lisp_trans(rtPartialValuedRelation(vSumoListOrderFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148828).
lisp_trans(argIsa(vSumoListOrderFn,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148873).
lisp_trans(argIsa(vSumoListOrderFn,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148901).
lisp_trans(resultIsa(vSumoListOrderFn,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148940).
lisp_trans(documentation(vSumoListOrderFn,vEnglishLanguage,s("(","#$ListOrderFn","?","LIST","?","NUMBER",")","denotes","the","item","that","is","in","the","?","NUMBER","position","in","the","#$List","?","LIST",".","For","example",",","(","#$ListOrderFn","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")","2",")","would","return","the","value","#$Tuesday",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':148967).
lisp_trans(documentation(vSumoListOrderFn,xtChineseLanguage,s("(","#$ListOrderFn","?","LIST","?","NUMBER",")","è","¡","¨","ç","¤","ºå","\234\","¨","?","LIST","#$List","ç","¬","¬","?","NUMBERä","¸","ªä","½","\215\","ç","½","®","ç","\232\","\204\","é","¡","¹","ç","\233\","®","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$ListOrderFn","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")","2",")","äº","¤","å","\207\","ºç","\232\","\204\","å","\200\","¼","ä","¼","\232\","æ","\230\","¯","#$Tuesdayã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':149221).
lisp_trans(=>(and(argIsa(REL,NUMBER,CLASS),tPred(REL),[REL|ROW]),isa(vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER),CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':149752).
lisp_trans(=>(and(argGenl(REL,NUMBER,CLASS),tPred(REL),[REL|ROW]),genls(vSumoListOrderFn(uN(vTheListFn,ROW),NUMBER),CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':149909).
lisp_trans(rtUnaryFunction(uListLengthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150074).
lisp_trans(rtTotalValuedRelation(uListLengthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150112).
lisp_trans(argIsa(uListLengthFn,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150156).
lisp_trans(resultIsa(uListLengthFn,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150185).
lisp_trans(documentation(uListLengthFn,vEnglishLanguage,s("A","#$Function","that","takes","a","#$List","as","its","sole","argument","and","returns","the","number","of","items","in","the","#$List",".","For","example",",","(","#$ListLengthFn","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")",")","would","return","the","value","3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150225).
lisp_trans(documentation(uListLengthFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Function","æ","\216\","¥","å","\217\","\227\","ä","¸","\200\","ä","¸","ª","#$List","ä","½","\234\","ä","¸","ºå","®","\203\","å","\224\","¯","ä","¸","\200\","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","äº","¤","å","\207\","ºè","¿","\231\","ä","¸","ª","#$List","ä","¸","­","é","¡","¹","ç","\233\","®","ç","\232\","\204\","æ","\225\","°","é","\207\","\217\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$ListLengthFn","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")",")","äº","¤","å","\207\","ºç","\232\","\204\","å","\200\","¼","ä","¼","\232\","æ","\230\","¯","3","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':150472).
lisp_trans(all('@ROW'(ITEM),equal(uListLengthFn(vTheListFn('@ROW',ITEM)),vSuccessorFn(uListLengthFn(uN(vTheListFn,ROW))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':151130).
lisp_trans(all('@ROW'(ITEM),equal(vSumoListOrderFn(vTheListFn('@ROW',ITEM),uListLengthFn(vTheListFn('@ROW',ITEM))),ITEM)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':151249).
lisp_trans(=>(and(valence(REL,NUMBER),tPred(REL)),all(ROW,=>([REL|ROW],equal(uListLengthFn(uN(vTheListFn,ROW)),NUMBER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':151373).
lisp_trans(rtBinaryFunction(uListConcatenateFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':151939).
lisp_trans(rtTotalValuedRelation(uListConcatenateFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':151983).
lisp_trans(argIsa(uListConcatenateFn,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':152032).
lisp_trans(argIsa(uListConcatenateFn,2,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':152066).
lisp_trans(resultIsa(uListConcatenateFn,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':152100).
lisp_trans(documentation(uListConcatenateFn,vEnglishLanguage,s("A","#$Function","that","returns","the","concatenation","of","the","two","#$Lists","that","are","given","as","arguments",".","For","example",",","the","value","of","(","#$ListConcatenateFn","(","#$ListFn","#$Monday","#$Tuesday",")","(","#$ListFn","#$Wednesday","#$Thursday",")",")","would","be","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday","#$Thursday",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':152131).
lisp_trans(documentation(uListConcatenateFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Function","æ","\212\","\212\","ç","\224\","±","ä","¸","¤","ä","¸","ªå","\217\","\202\","æ","\225\","°","æ","\211\","\200\","è","®","¾","å","®","\232\","ç","\232\","\204\","#$List","ä","¸","²","è","\201\","\224\","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$ListConcatenateFn","(","#$ListFn","#$Monday","#$Tuesday",")","(","#$ListFn","#$Wednesday","#$Thursday",")",")","ä","¼","\232\","æ","\210\","\220\","äº","\206\","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday","#$Thursday",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':152452).
lisp_trans(rtBinaryPredicate(inList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153472).
lisp_trans(rtIrreflexiveRelation(inList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153506).
lisp_trans(rtAsymmetricRelation(inList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153544).
lisp_trans(rtPartialValuedRelation(inList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153581).
lisp_trans(argIsa(inList,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153621).
lisp_trans(argIsa(inList,2,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153646).
lisp_trans(documentation(inList,vEnglishLanguage,s("The","analog","of","#$element","and","#$instance","for","#$Lists",".","(","#$inList","?","OBJ","?","LIST",")","means","that","?","OBJ","is","in","the","#$List","?","LIST",".","For","example",",","(","#$inList","#$Tuesday","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")",")","would","be","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153669).
lisp_trans(documentation(inList,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","±","»","ä","¼","¼","#$List","ç","\232\","\204\","#$element","å","\222\","\214\","#$instanceã","\200\","\202\","(","#$inList","?","OBJ","?","LIST",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ","æ","\230\","¯","å","\234\","¨","?","LIST","#$List","é","\207\","\214\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$inList","#$Tuesday","(","#$ListFn","#$Monday","#$Tuesday","#$Wednesday",")",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':153916).
lisp_trans(=>(inList(ITEM,LIST),exists([NUMBER],equal(vSumoListOrderFn(LIST,NUMBER),ITEM))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154159).
lisp_trans(rtBinaryPredicate(subList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154259).
lisp_trans(rtPartialOrderingRelation(subList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154294).
lisp_trans(argIsa(subList,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154337).
lisp_trans(argIsa(subList,2,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154361).
lisp_trans(documentation(subList,vEnglishLanguage,s("(","#$subList","?","LIST1","?","LIST2",")","means","that","?","LIST1","is","a","sublist","of","?","LIST2",",","i",".","e",".","every","element","of","?","LIST1","is","an","element","of","?","LIST2","and","the","elements","that","are","common","to","both","#$Lists","have","the","same","order","in","both","#$Lists",".","Elements","that","are","common","to","both","Lists","and","are","consecutive","in","one","list","must","also","be","consecutive","in","the","other","list",".","(","Therefore","-","the","list","of","prime","numbers","smaller","than","10","[","1","2","3","5","7","]","is","not","a","subList","of","the","natural","numbers","smaller","than","10","[","1","2","3","4","5","6","7","8","9","]",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154385).
lisp_trans(documentation(subList,xtChineseLanguage,s("(","#$subList","?","LIST1","?","LIST2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","LIST1","æ","\230\","¯","?","LIST2","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","?","LIST1","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","é","\203\","½","æ","\230\","¯","?","LIST2","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","ï","¼","\214\","å","\220\","\214\","æ","\227\","¶","å","±","\236\","äº","\216\","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$List","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","å","\234\","¨","ä","¸","¤","ä","¸","ª","#$List","ç","\232\","\204\","é","¡","ºåº","\217\","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\","å","\220\","\214\","æ","\227\","¶","å","\207\","ºç","\216\","°","å","\234\","¨","è","¿","\231\","ä","¸","¤","ä","¸","ªè","¡","¨","å","\210\","\227\","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","ï","¼","\214\","å","¦","\202\","æ","\236\","\234\","é","\202\","£","äº","\233\","å","\205\","\203\","ç","´","\240\","å","\234\","¨","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªè","¡","¨","å","\210\","\227\","æ","\230\","¯","è","¿","\236\","ç","»","­","ç","\232\","\204\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","å","®","\203\","ä","»","¬","å","\234\","¨","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªè","¡","¨","å","\210\","\227\","ä","¹","\237\","å","¿","\205\","é","¡","»","ä","¼","\232\","è","¿","\236\","ç","»","­","ç","\232\","\204\","ã","\200\","\202\","(","æ","\211\","\200\","ä","»","¥","-","å","°","\217\","äº","\216\","10","[","1","2","3","5","7","]","ç","\232\","\204\","ç","´","\240\","æ","\225\","°","è","¡","¨","å","\210\","\227\","ä","¸","\215\","æ","\230\","¯","å","°","\217\","äº","\216\","10","[","1","2","3","4","5","6","7","8","9","]","è","\207\","ªç","\204\","¶","æ","\225\","°","è","¡","¨","å","\210\","\227\","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':154895).
lisp_trans(rtBinaryPredicate(initialList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':156142).
lisp_trans(rtPartialOrderingRelation(initialList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':156181).
lisp_trans(genlPreds(initialList,subList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':156228).
lisp_trans(documentation(initialList,vEnglishLanguage,s("(","#$initialList","?","LIST1","?","LIST2",")","means","that","?","LIST1","is","a","#$subList","of","?","LIST2","and","(","#$ListOrderFn","?","LIST1","?","NUMBER",")","returns","the","same","value","as","(","#$ListOrderFn","?","LIST2","?","NUMBER",")","for","all","of","the","values","of","?","NUMBER","over","which","(","#$ListOrderFn","?","LIST1","?","NUMBER",")","is","defined",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':156262).
lisp_trans(documentation(initialList,xtChineseLanguage,s("(","#$initialList","?","LIST1","?","LIST2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","LIST1","æ","\230\","¯","?","LIST2","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$subListï","¼","\214\","è","\200\","\214\","ä","¸","\224\","(","#$ListOrderFn","?","LIST1","?","NUMBER",")","ï","¼","\214\","æ","\211\","\200\","äº","¤","å","\207\","ºæ","\214\","\211\","ç","\205\","§","(","#$ListOrderFn","?","LIST1","?","NUMBER",")","é","\207\","\214\","å","®","\232\","ä","¹","\211\","?","NUMBER","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","\200\","¼","å","\222\","\214\","(","#$ListOrderFn","?","LIST2","?","NUMBER",")","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':156561).
lisp_trans(all('@ROW'(ITEM),initialList(uN(vTheListFn,ROW),vTheListFn('@ROW',ITEM))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157240).
lisp_trans(rtBinaryPredicate(identicalListItems),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157313).
lisp_trans(rtEquivalenceRelation(identicalListItems),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157359).
lisp_trans(argIsa(identicalListItems,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157409).
lisp_trans(argIsa(identicalListItems,2,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157444).
lisp_trans(documentation(identicalListItems,vEnglishLanguage,s("(","#$identicalListItems","?","LIST1","?","LIST2",")","means","that","?","LIST1","and","?","LIST2","have","exactly","the","same","items","in","their","respective","lists",".","Although","?","LIST1","and","?","LIST2","are","required","to","share","exactly","the","same","items",",","they","may","order","these","items","differently",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157480).
lisp_trans(documentation(identicalListItems,xtChineseLanguage,s("(","#$identicalListItems","?","LIST1","?","LIST2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","LIST1","å","\222\","\214\","?","LIST2","å","\234\","¨","å","®","\203\","ä","»","¬","å","\220\","\204\","è","\207\","ªç","\232\","\204\","å","\210\","\227\","è","¡","¨","ï","¼","\214\","æ","\213\","¥","æ","\234\","\211\","å","®","\214\","å","\205\","¨","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","é","¡","¹","ç","\233\","®","ã","\200\","\202\","è","\231\","½","ç","\204\","¶","?","LIST1","å","\222\","\214\","?","LIST2","é","\234\","\200\","è","¦","\201\","å","\205\","±","å","\220\","\214\","æ","\213\","¥","æ","\234\","\211\","å","®","\214\","å","\205\","¨","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","é","¡","¹","ç","\233\","®","ï","¼","\214\","ä","½","\206\","æ","\230\","¯","å","®","\203\","ä","»","¬","ç","\232\","\204\","é","¡","¹","ç","\233\","®","å","\217\","¯","ä","»","¥","æ","\214\","\211\","ä","¸","\215\","å","\220\","\214\","ç","\232\","\204\","é","¡","ºåº","\217\","æ","\216\","\222\","å","\210\","\227\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':157768).
lisp_trans(genls(tPred,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':158283).
lisp_trans(genls(tPred,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':158313).
lisp_trans(documentation(tPred,vEnglishLanguage,"A #$Predicate is a sentence-forming #$Relation. Each tuple in the #$Relation is a finite, ordered sequence of objects. The fact that a particular tuple is an element of a #$Predicate is denoted by '(*predicate* arg_1 arg_2 .. arg_n)', where the arg_i are the objects so related.  In the case of #$BinaryPredicates, the fact can be read as `arg_1 is *predicate* arg_2' or `a *predicate* of arg_1 is arg_2'."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':158354).
lisp_trans(documentation(tPred,xtChineseLanguage,'Predicate æ\230\¯ä¸\200\ä¸ªä½\234\å\217\¥ç\232\\204\ #$Relationï¼\214\è¿\231\ä¸ª  #$Relation ç\232\\204\æ¯\217\ä¸\200\ä¸ªå\205\\203\ç»\204\é\203\½æ\230\¯ç\211\©ä½\223\æ\234\\211\é\231\\220\ã\200\\201\æ\234\\211\åº\217\ç\232\\204\ç\232\\204\å\217\¥å­\220\ã\200\\202\ä¸\200\ä¸ªç\211\¹å®\232\ç»\204\å\221\\230\æ\230\¯ä¸\200\ä¸ª #$Predicate ç\232\\204\å\205\\203\ç´\240\è¿\231\äº\213\å®\236\ï¼\214\ç\224\±  \'(*predicate* arg_1 arg_2 .. arg_n)\'æ\235\¥è¡¨ç¤ºï¼\214\ arg_i æ\230\¯å\205\³è\201\\224\ç\232\\204\äº\213\ç\211\©ã\200\\202\å\234\¨ #$BinaryPredicate ç\232\\204\æ\203\\205\å\206\µä¸\213\ï¼\214\  å\217\¯ä»¥è¯»æ\210\\220\ `arg_1 æ\230\¯ *predicate* arg_2\' æ\210\\226\è\200\\205\ `arg_1 ç\232\\204\ä¸\200\ä¸ª *predicate* æ\230\¯ arg_2\'ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':158804).
lisp_trans(genls(tFunction,rtSingleValuedRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159246).
lisp_trans(genls(tFunction,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159287).
lisp_trans(documentation(tFunction,vEnglishLanguage,s("A","#$Function","is","a","term","-","forming","#$Relation","that","maps","from","a","n","-","tuple","of","arguments","to","a","range","and","that","associates","this","n","-","tuple","with","at","most","one","range","element",".","Note","that","the","range","is","a","#$SetOrClass",",","and","each","element","of","the","range","is","an","instance","of","the","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159327).
lisp_trans(documentation(tFunction,xtChineseLanguage,'Function æ\230\¯ä¸\200\ä¸ªé\200\\240\è¯\215\ç\232\\204\ #$Relationï¼\214\å®\203\ä»¥æ\234\\200\å¤\232\ä¸\200\ä¸ªå\205\\203\ç´\240\ è\214\\203\å\233\´ï¼\214\æ\212\\212\nå\205\\203\ç»\204\ç\232\\204\å\217\\202\æ\225\°å\222\\214\è¿\231\nå\205\\203\ç»\204\æ\234\\211\å\205\³ç\232\\204\è\214\\203\å\233\´è\201\\224\ç³»èµ·æ\235\¥ã\200\\202\æ³¨ï¼\232\è\214\\203\å\233\´æ\230\¯ä¸\200\ä¸ª#$SetOrClassï¼\214\è\200\\214\ä¸\224\è\214\\203\å\233\´å\206\\205\ç\232\\204\æ¯\217\ä¸ªå\205\\203\ç´\240\æ\230\¯è¿\231\ä¸ª  #$SetOrClass ç\232\\204\ä¸\200\ä¸ªå®\236\ä¾\213\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159632).
lisp_trans(genls(rtUnaryFunction,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159925).
lisp_trans(genls(rtUnaryFunction,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159959).
lisp_trans(genls(rtUnaryFunction,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':159999).
lisp_trans(documentation(rtUnaryFunction,vEnglishLanguage,s("The","#$Class","of","#$Functions","that","require","a","single","argument",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160044).
lisp_trans(documentation(rtUnaryFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªé","\234\","\200\","è","¦","\201\","å","\215\","\225\","ä","¸","\200\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Function","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160151).
lisp_trans(=>(rtUnaryFunction(FUNCTION),valence(FUNCTION,1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160273).
lisp_trans(genls(rtOneToOneFunction,rtUnaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160342).
lisp_trans(documentation(rtOneToOneFunction,vEnglishLanguage,s("The","#$Class","of","#$UnaryFunctions","which","are","one","to","one",".","A","function","F","is","one","to","one","just","in","case","for","all","X",",","Y","in","the","domain","of","F",",","if","X","is","not","identical","to","Y",",","then","F","(","X",")","is","not","identical","to","F","(","Y",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160384).
lisp_trans(documentation(rtOneToOneFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªä","¸","\200\","å","¯","¹","ä","¸","\200\","ç","\232\","\204\","#$UnaryFunction","#$Classï","¼","\214\","å","¯","¹","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","å","\234\","¨","å","®","\232\","ä","¹","\211\","å","\237\","\237\","Fç","\232\","\204\","Xå","\222\","\214\","Yï","¼","\214\","å","\207\","½","æ","\225\","°","Fæ","\230\","¯","ä","¸","\200\","å","¯","¹","ä","¸","\200\","ç","\232\","\204\","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","ä","»","¥","é","\230\","²","Xä","¸","\215\","å","\220\","\214\","äº","\216\","Yï","¼","\214\","é","\202\","£","ä","¹","\210\","F","(","X",")","å","°","±","å","\222\","\214\","F","(","Y",")","ä","¸","\215\","ç","\233\","¸","å","\220\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160627).
lisp_trans(=>(rtOneToOneFunction(FUN),all([ARG1,ARG2],=>(and(argIsa(FUN,1,CLASS),isa(ARG1,CLASS),isa(ARG2,CLASS),not(equal(ARG1,ARG2))),not(equal(uFn(FUN,ARG1),uFn(FUN,ARG2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':160849).
lisp_trans(genls(rtSequenceFunction,rtOneToOneFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161163).
lisp_trans(documentation(rtSequenceFunction,vEnglishLanguage,s("The","#$Class","of","#$OneToOneFunctions","whose","rangeis","a","subclass","of","the","#$PositiveIntegers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161208).
lisp_trans(documentation(rtSequenceFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$OneToOneFunction","#$Classï","¼","\214\","å","®","\203\","ç","\232\","\204\","è","\214\","\203\","å","\233\","´","æ","\230\","¯","#$PositiveInteger","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161347).
lisp_trans(=>(and(rtSequenceFunction(SEQ),resultIsa(SEQ,CLASS)),genls(CLASS,ftInt)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161487).
lisp_trans(genls(rtBinaryFunction,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161596).
lisp_trans(genls(rtBinaryFunction,rtTernaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161631).
lisp_trans(genls(rtBinaryFunction,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161673).
lisp_trans(documentation(rtBinaryFunction,vEnglishLanguage,s("The","#$Class","of","#$Functions","that","require","two","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161719).
lisp_trans(documentation(rtBinaryFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªé","\234\","\200\","è","¦","\201\","ä","¸","¤","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Function","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161823).
lisp_trans(=>(rtBinaryFunction(FUNCTION),valence(FUNCTION,2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161926).
lisp_trans(genls(rtAssociativeFunction,rtBinaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':161994).
lisp_trans(documentation(rtAssociativeFunction,vEnglishLanguage,s("A","#$BinaryFunction","is","associative","if","bracketing","has","no","effect","on","the","value","returned","by","the","#$Function",".","More","precisely",",","a","#$Function","?","FUNCTION","is","associative","just","in","case","(","?","FUNCTION","?","INST1","(","?","FUNCTION","?","INST2","?","INST3",")",")","is","equal","to","(","?","FUNCTION","(","?","FUNCTION","?","INST1","?","INST2",")","?","INST3",")",",","for","all","?","INST1",",","?","INST2",",","and","?","INST3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':162040).
lisp_trans(documentation(rtAssociativeFunction,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryFunction","å","±","\236\","äº","\216\","å","\205\","³","è","\201\","\224\","æ","\200\","§","ç","\232\","\204\","å","¦","\202\","æ","\236\","\234\","ä","½","¿","ç","\224\","¨","æ","\213\","¬","å","\217\","·","å","¹","¶","æ","²","¡","æ","\234\","\211\","å","½","±","å","\223\","\215\","#$Function","æ","\211\","\200\","äº","¤","å","\207\","ºç","\232\","\204\","å","\200\","¼","ï","¼","\214\","æ","\233\","´","ç","¡","®","å","\210\","\207\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","å","¯","¹","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1ã","\200\","\201\","?","INST2","å","\222\","\214\","?","INST3ï","¼","\214\","#$Function","?","FUNCTION","æ","\230\","¯","å","\205\","³","è","\201\","\224\","æ","\200\","§","ç","\232\","\204\","ï","¼","\214\","ä","»","¥","é","\230\","²","(","?","FUNCTION","?","INST1","(","?","FUNCTION","?","INST2","?","INST3",")",")","å","\222\","\214\","(","?","FUNCTION","(","?","FUNCTION","?","INST1","?","INST2",")","?","INST3",")","ç","\233\","¸","å","\220\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':162404).
lisp_trans(=>(rtAssociativeFunction(FUNCTION),all([INST1,INST2,INST3],=>(and(argIsa(FUNCTION,1,CLASS),isa(INST1,CLASS),isa(INST2,CLASS),isa(INST3,CLASS)),equal(uFn(FUNCTION,INST1,uFn(FUNCTION,INST2,INST3)),uFn(FUNCTION,uFn(FUNCTION,INST1,INST2),INST3))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':162778).
lisp_trans(genls(rtCommutativeFunction,rtBinaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':163212).
lisp_trans(documentation(rtCommutativeFunction,vEnglishLanguage,s("A","#$BinaryFunction","is","commutative","if","the","ordering","of","the","arguments","of","the","function","has","no","effect","on","the","value","returned","by","the","function",".","More","precisely",",","a","function","?","FUNCTION","is","commutative","just","in","case","(","?","FUNCTION","?","INST1","?","INST2",")","is","equal","to","(","?","FUNCTION","?","INST2","?","INST1",")",",","for","all","?","INST1","and","?","INST2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':163258).
lisp_trans(documentation(rtCommutativeFunction,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryFunction","å","±","\236\","äº","\216\","å","\217\","¯","äº","¤","æ","\215\","¢","ç","\232\","\204\","å","¦","\202\","æ","\236\","\234\","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","é","¡","ºåº","\217\","ä","¸","\215\","å","½","±","å","\223\","\215\","å","\207\","½","æ","\225\","°","æ","\211\","\200\","äº","¤","å","\207\","ºç","\232\","\204\","å","\200\","¼","ï","¼","\214\","æ","\233\","´","ç","¡","®","å","\210\","\207\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","å","¯","¹","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1","å","\222\","\214\","?","INST2ï","¼","\214\","#$Function","?","FUNCTION","æ","\230\","¯","å","\217\","¯","äº","¤","æ","\215\","¢","ç","\232\","\204\","ï","¼","\214\","ä","»","¥","é","\230\","²","(","?","FUNCTION","?","INST1","?","INST2",")","å","\222\","\214\","(","?","FUNCTION","?","INST2","?","INST1",")","ç","\233\","¸","å","\220\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':163606).
lisp_trans(=>(rtCommutativeFunction(FUNCTION),all([INST1,INST2],=>(and(argIsa(FUNCTION,1,CLASS),isa(INST1,CLASS),isa(INST2,CLASS)),equal(uFn(FUNCTION,INST1,INST2),uFn(FUNCTION,INST2,INST1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':163922).
lisp_trans(genls(rtTernaryFunction,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164251).
lisp_trans(genls(rtTernaryFunction,rtQuaternaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164287).
lisp_trans(genls(rtTernaryFunction,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164333).
lisp_trans(documentation(rtTernaryFunction,vEnglishLanguage,s("The","#$Class","of","#$Functions","that","require","exactly","three","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164380).
lisp_trans(documentation(rtTernaryFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªé","\234\","\200\","è","¦","\201\","æ","\201\","°","å","¥","½","ä","¸","\211\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Function","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164495).
lisp_trans(=>(rtTernaryFunction(FUNCTION),valence(FUNCTION,3)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164605).
lisp_trans(genls(rtQuaternaryFunction,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164674).
lisp_trans(genls(rtQuaternaryFunction,rtQuintaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164713).
lisp_trans(genls(rtQuaternaryFunction,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164760).
lisp_trans(documentation(rtQuaternaryFunction,vEnglishLanguage,s("The","#$Class","of","#$Functions","that","require","exactly","four","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164810).
lisp_trans(documentation(rtQuaternaryFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªé","\234\","\200\","è","¦","\201\","æ","\201\","°","å","¥","½","å","\233\","\233\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Function","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':164927).
lisp_trans(=>(rtQuaternaryFunction(FUNCTION),valence(FUNCTION,4)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165041).
lisp_trans(genls(rtContinuousFunction,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165113).
lisp_trans(documentation(rtContinuousFunction,vEnglishLanguage,'Functions which are continuous. This concept is taken as primitive until representations for limits are devised.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165152).
lisp_trans(documentation(rtContinuousFunction,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","¿","\236\","ç","»","­","ç","\232\","\204\","#$Functionï","¼","\214\","ç","\233\","´","å","\210\","°","å","¾","\227\","å","\207\","ºäº","\206\","å","®","\203\","ç","\232\","\204\","æ","\236\","\201\","é","\231\","\220\","ï","¼","\214\","è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µä","¼","\232\","è","¢","«","ç","\234\","\213\","æ","\210\","\220\","ä","¸","ºå","\216\","\237\","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165320).
lisp_trans(genls(rtBinaryPredicate,tPred),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165474).
lisp_trans(genls(rtBinaryPredicate,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165511).
lisp_trans(genls(rtBinaryPredicate,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165553).
lisp_trans(documentation(rtBinaryPredicate,vEnglishLanguage,s("A","#$Predicate","relating","two","items","-","its","valence","is","two",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165600).
lisp_trans(documentation(rtBinaryPredicate,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ªé","¡","¹","ç","\233\","®","ç","\232\","\204\","#$Predicate","-","å","®","\203\","ç","\232\","\204\","é","\205\","\215\","ä","»","·","æ","\230\","¯","äº","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165705).
lisp_trans(=>(rtBinaryPredicate(REL),valence(REL,2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165827).
lisp_trans(genls(rtTernaryPredicate,tPred),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165886).
lisp_trans(genls(rtTernaryPredicate,rtTernaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165924).
lisp_trans(genls(rtTernaryPredicate,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':165968).
lisp_trans(documentation(rtTernaryPredicate,vEnglishLanguage,s("The","#$Class","of","#$Predicates","that","require","exactly","three","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166016).
lisp_trans(documentation(rtTernaryPredicate,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\234\","\200\","è","¦","\201\","ä","¸","\211\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Predicate","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166133).
lisp_trans(=>(rtTernaryPredicate(REL),valence(REL,3)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166242).
lisp_trans(genls(rtQuaternaryPredicate,tPred),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166302).
lisp_trans(genls(rtQuaternaryPredicate,rtQuaternaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166343).
lisp_trans(genls(rtQuaternaryPredicate,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166393).
lisp_trans(documentation(rtQuaternaryPredicate,vEnglishLanguage,s("The","#$Class","of","#$Predicates","that","require","four","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166444).
lisp_trans(documentation(rtQuaternaryPredicate,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\234\","\200\","è","¦","\201\","å","\233\","\233\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Predicate","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166555).
lisp_trans(=>(rtQuaternaryPredicate(REL),valence(REL,4)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166668).
lisp_trans(genls(rtQuintaryPredicate,tPred),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166731).
lisp_trans(genls(rtQuintaryPredicate,rtQuintaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166770).
lisp_trans(genls(rtQuintaryPredicate,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166816).
lisp_trans(documentation(rtQuintaryPredicate,vEnglishLanguage,s("The","#$Class","of","#$Predicates","that","require","five","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166865).
lisp_trans(documentation(rtQuintaryPredicate,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\234\","\200\","è","¦","\201\","äº","\224\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Predicate","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':166974).
lisp_trans(=>(rtQuintaryPredicate(REL),valence(REL,5)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167085).
lisp_trans(genls(rtVariableArityRelation,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167146).
lisp_trans(documentation(rtVariableArityRelation,vEnglishLanguage,s("The","#$Class","of","#$Relations","that","do","not","have","a","fixed","number","of","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167188).
lisp_trans(documentation(rtVariableArityRelation,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªæ","²","¡","æ","\234\","\211\","å","\233\","ºå","®","\232\","æ","\225\","°","é","\207\","\217\","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","#$Relation","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167317).
lisp_trans(=>(rtVariableArityRelation(REL),not(exists([INT],valence(REL,INT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167433).
lisp_trans(genls(tSumoRelationExtendedToQuantities,tRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167531).
lisp_trans(genls(tSumoRelationExtendedToQuantities,rtInheritableRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167580).
lisp_trans(documentation(tSumoRelationExtendedToQuantities,vEnglishLanguage,s("A","#$RelationExtendedToQuantities","is","a","#$Relation","that",",","when","it","is","true","on","a","sequence","of","arguments","that","are","#$RealNumbers",",","it","is","also","true","on","a","sequence","of","instances","of","#$ConstantQuantity","with","those","magnitudes","in","some","unit","of","measure",".","For","example",",","the","#$lessThan","relation","is","extended","to","quantities",".","This","means","that","for","all","pairs","of","quantities","?","QUANTITY1","and","?","QUANTITY2",",","(","#$lessThan","?","QUANTITY1","?","QUANTITY2",")","if","and","only","if",",","for","some","?","NUMBER1",",","?","NUMBER2",",","and","?","UNIT",",","?","QUANTITY1","=","(","#$MeasureFn","?","NUMBER1","?","UNIT",")",",","?","QUANTITY2","=","(","#$MeasureFn","?","NUMBER2","?","UNIT",")",",","and","(","#$lessThan","?","NUMBER1","?","NUMBER2",")",",","for","all","units","?","UNIT","on","which","?","QUANTITY1","and","?","QUANTITY2","can","be","measured",".","Note","that",",","when","a","#$RelationExtendedToQuantities","is","extended","from","#$RealNumbers","to","instances","of","#$ConstantQuantity",",","the","#$ConstantQuantity","must","be","measured","along","the","same","physical","dimension",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':167640).
lisp_trans(documentation(tSumoRelationExtendedToQuantities,xtChineseLanguage,s("#$RelationExtendedToQuantities","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Relationï","¼","\214\","å","¦","\202\","æ","\236\","\234\","å","®","\203\","å","¯","¹","ä","¸","\200\","ä","¸","²","#$RealNumber","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","å","\200\","¼","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","ä","»","\226\","å","¯","¹","ä","¸","\200\","ä","¸","²","æ","\234\","\211\","ç","\235\","\200\","å","\222\","\214\","ä","¸","\200\","äº","\233\","è","¡","¡","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","å","¹","\205\","åº","¦","#$ConstantQuantity","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ä","¹","\237\","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$lessThan","å","\205\","³","ç","³","»","å","\217\","¯","å","»","¶","ä","¼","¸","å","\210\","°","æ","\225\","°","é","\207\","\217\","ä","¸","\212\","ï","¼","\214\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","(","#$lessThan","?","QUANTITY1","?","QUANTITY2",")","å","¯","¹","äº","\216\","?","QUANTITY1","å","\222\","\214\","?","QUANTITY2","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","æ","\225\","°","é","\207\","\217\","å","¯","¹","ï","¼","\214\","å","½","\223\","ä","¸","\224\","ä","»","\205\","å","½","\223\","å","¯","¹","äº","\216\","æ","\237\","\220\","äº","\233\","?","NUMBER1ï","¼","\214\","?","NUMBER2","å","\222\","\214\","?","UNITï","¼","\214\","?","QUANTITY1","=","(","#$MeasureFn","?","NUMBER1","?","UNIT",")","ï","¼","\214\","?","QUANTITY2","=","(","#$MeasureFn","?","NUMBER2","?","UNIT",")","å","\222\","\214\","(","#$lessThan","?","NUMBER1","?","NUMBER2",")","ï","¼","\214\","å","¯","¹","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","?","QUANTITY1","å","\222\","\214\","?","QUANTITY2","å","\217\","¯","ä","»","¥","é","\207\","\217\","åº","¦","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","?","UNITã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","½","\223\","ä","¸","\200\","ä","¸","ª","#$RelationExtendedToQuantities","ç","\224\","±","#$RealNumber","è","¢","«","å","»","¶","ä","¼","¸","å","\210\","°","#$ConstantQuantity","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","®","\236\","æ","\227\","¶","ï","¼","\214\","è","¯","¥","#$ConstantQuantity","å","¿","\205\","é","¡","»","ä","»","¥","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","å","®","\236\","ç","\211\","©","å","°","ºå","¯","¸","æ","\235\","¥","é","\207\","\217\","åº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':168549).
lisp_trans(genls(rtLogicalOperator,tPred),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':169402).
lisp_trans(documentation(rtLogicalOperator,vEnglishLanguage,s("This","#$Class","comprises","all","of","the","logical","operators","(","viz",".","'","and","'",",","'","or","'",",","'","not","'",",","'","=",">","'",",","and","'","<","=",">","'",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':169439).
lisp_trans(genls(tProposition,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':169586).
lisp_trans(documentation(tProposition,vEnglishLanguage,'Propositions are #$Abstract entities that express a complete thought or a set of such thoughts.  As an example, the formula \'(instance Yojo Cat)\' expresses the #$Proposition that the entity named Yojo is an element of the #$Class of Cats.  Note that propositions are not restricted to the content expressed by individual sentences of a #$Language.  They may encompass the content expressed by theories, books, and even whole libraries.  It is important to distinguish #$Propositions from the #$ContentBearingObjects that express them.  A #$Proposition is a piece of information, e.g. that the cat is on the mat, but a #$ContentBearingObject is an #$Object that represents this information. A #$Proposition is an abstraction that may have multiple representations: strings, sounds, icons, etc.  For example, the #$Proposition that the cat is on the mat is represented here as a string of graphical characters displayed on a monitor and/or printed on paper, but it can be represented by a sequence of sounds or by some non-latin alphabet or by some cryptographic form'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':169618).
lisp_trans(documentation(tProposition,xtChineseLanguage,'Proposition æ\230\¯ #$Abstract å®\236\ä½\223\ï¼\214\ å®\203\è¡¨è¾¾ä¸\200\ä¸ªå®\214\æ\225\´ ç\232\\204\æ\204\\217\æ\200\\235\æ\210\\226\æ\230\¯ä¸\200\å¥\227\æ\203\³æ³\225\ã\200\\202\ä¾\213\å¦\202\ï¼\232\å\205\¬å¼\217\ \'(instance Yojo Cat)\' è¡¨è¾¾ #$Proposition ä¸ºé\202\£ä¸ªå\217\«ä½\221\è\210\\237\ç\232\\204\å®\236\ä½\223\æ\230\¯ç\214\«  #$Class ç\232\\204\ä¸\200\ä¸ªå\205\\203\ç´\240\ã\200\\202\æ³¨ï¼\232\å\221\½é¢\230\é\231\\220\äº\216\ç\224\± #$Language ç\232\\204\ä¸ªå\210\«å\217\¥å­\220\æ\211\\200\è¡¨è¾¾ç\232\\204\å\206\\205\å®¹ï¼\214\è¿\231\å\217\¯ä»¥å\214\\205\æ\213\¬ç\224\±ç\220\\206\è®ºã\200\\201\ä¹¦æ\234\¬å\222\\214\ç\224\\232\è\207\³æ\225\´ä¸ª å\233\¾ä¹¦é¦\206\æ\211\\200\è¡¨è¾¾ç\232\\204\å\206\\205\å®¹ã\200\\202\å\215\\203\ä¸\207\è¦\201\å\214\ºå\210\« #$Proposition å\222\\214\è¡¨è¾¾å\221\½é¢\230\ç\232\\204\ #$ContentBearingObject ï¼\214\ #$Proposition å®\236\ä¸\200\ä¸ªä¿¡æ\201\¯ï¼\214\ä¾\213\å¦\202\è¯´ç\214\«å\234\¨å\234\°æ¯¯ä¸\212\ï¼\233\ä½\206\æ\230\¯ #$ContentBearingObject æ\230\¯ä¸\200\ä¸ªè¡¨è¾¾è¯¥ä¿¡æ\201\¯ç\232\\204\  #$Objectã\200\\202\ #$Proposition å\217\¯ä»¥æ\234\\211\å¤\232\ä¸ªæ\217\\217\è¿°ç\232\\204\æ\212\½è±¡æ¦\202\å¿µï¼\232\å­\227\ç¬¦ä¸²ã\200\\201\å£°é\237\³å\222\\214\å\233\¾æ\240\\207\ç­\211\ã\200\\202\ä¾\213\å¦\202\ï¼\232\ç\214\«å\234\¨å\234\°æ¯¯ä¸\212\è¿\231\ä¸ª #$Proposition å\234\¨è¿\231\é\207\\214\æ\230\¯ä»¥æ\230\¾ç¤ºå\231\¨ä¸\212\æ\210\\226\è\200\\205\æ\230\¯æ\211\\223\å\215\°å\234\¨çº¸ä¸\212\ç\232\\204\ä¸\200\ä¸²å\233\¾å½¢å­\227\ç¬¦æ\235\¥è¡¨ç¤ºï¼\214\ä½\206\æ\230\¯å®\203\ä¹\237\å\217\¯ä»¥ç\224\±ä¸\200\ç³»å\210\\227\ç\232\\204\å£°é\237\³æ\210\\226\è\200\\205\æ\230\¯æ\237\\220\äº\233\ é\235\\236\æ\213\\211\ä¸\201\å­\227\æ¯\215\æ\210\\226\æ\230\¯æ\237\\220\äº\233\å\212\\240\å¯\206\å½¢å¼\217\æ\235\¥è¡¨ç¤ºã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':170732).
lisp_trans(rtBinaryPredicate(closedOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':171666).
lisp_trans(rtAsymmetricRelation(closedOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':171702).
lisp_trans(argIsa(closedOn,1,tFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':171741).
lisp_trans(argIsa(closedOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':171770).
lisp_trans(documentation(closedOn,vEnglishLanguage,s("A","#$BinaryFunction","is","closed","on","a","#$SetOrClass","if","it","is","defined","for","all","instances","of","the","#$SetOrClass","and","its","value","is","always","an","instance","of","the","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':171801).
lisp_trans(documentation(closedOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryFunction","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","å","°","\201\","é","\227\","­","ç","\232\","\204\","å","¦","\202\","æ","\236\","\234\","å","®","\203\","å","\234\","¨","è","¿","\231\","ä","¸","ª","#$SetOrClass","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","·","²","ç","»","\217\","å","®","\232\","ä","¹","\211\","äº","\206\","ï","¼","\214\","è","\200\","\214\","ä","¸","\224\","å","®","\203\","ç","\232\","\204\","å","\200\","¼","æ","°","¸","è","¿","\234\","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172003).
lisp_trans(rtBinaryPredicate(reflexiveOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172750).
lisp_trans(rtAsymmetricRelation(reflexiveOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172789).
lisp_trans(argIsa(reflexiveOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172831).
lisp_trans(argIsa(reflexiveOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172869).
lisp_trans(documentation(reflexiveOn,vEnglishLanguage,s("A","#$BinaryRelation","is","reflexive","on","a","#$SetOrClass","only","if","every","instance","of","the","#$SetOrClass","bears","the","relation","to","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':172903).
lisp_trans(documentation(reflexiveOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClassæ","\230\","¯","è","\207\","ªå","\217\","\215\","ç","\232\","\204\","é","\231\","¤","é","\235\","\236\","è","¿","\231\","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","æ","\210\","´","ç","\235\","\200\","å","\222\","\214\","è","\207\","ªèº","«","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173072).
lisp_trans(=>(and(reflexiveOn(RELATION,CLASS),tPred(RELATION)),all([INST],=>(isa(INST,CLASS),[RELATION,INST,INST]))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173256).
lisp_trans(rtBinaryPredicate(irreflexiveOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173440).
lisp_trans(rtAsymmetricRelation(irreflexiveOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173481).
lisp_trans(argIsa(irreflexiveOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173525).
lisp_trans(argIsa(irreflexiveOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173565).
lisp_trans(documentation(irreflexiveOn,vEnglishLanguage,s("A","#$BinaryRelation","is","irreflexive","on","a","#$SetOrClass","only","if","no","instance","of","the","#$SetOrClass","bears","the","relation","to","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173601).
lisp_trans(documentation(irreflexiveOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","é","\235\","\236\","è","\207\","ªå","\217\","\215\","ç","\232\","\204\","é","\231\","¤","é","\235\","\236\","è","¿","\231\","ä","¸","ª","#$SetOrClass","é","\207\","\214\","æ","²","¡","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","®","\236\","é","\207\","\214\","æ","\210\","´","ç","\235\","\200\","å","\222\","\214\","è","\207\","ªèº","«","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173771).
lisp_trans(=>(and(irreflexiveOn(RELATION,CLASS),tPred(RELATION)),all([INST],=>(isa(INST,CLASS),not([RELATION,INST,INST])))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':173964).
lisp_trans(rtBinaryPredicate(partialOrderingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174168).
lisp_trans(rtAsymmetricRelation(partialOrderingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174213).
lisp_trans(argIsa(partialOrderingOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174261).
lisp_trans(argIsa(partialOrderingOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174305).
lisp_trans(documentation(partialOrderingOn,vEnglishLanguage,s("A","#$BinaryRelation","is","a","partial","ordering","on","a","#$SetOrClass","only","if","the","relation","is","#$reflexiveOn","the","#$SetOrClass",",","and","it","is","both","an","#$AntisymmetricRelation",",","and","a","#$TransitiveRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174345).
lisp_trans(documentation(partialOrderingOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","ä","½","¿","é","\203\","¨","å","\210\","\206\","é","¡","ºåº","\217\","ç","\232\","\204\","ï","¼","\214\","é","\231\","¤","é","\235\","\236\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","æ","\230\","¯","å","\234\","¨","è","¿","\231\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","#$reflexiveOnï","¼","\214\","è","\200\","\214\","ä","¸","\224\","å","®","\203\","æ","\227\","¢","æ","\230\","¯","#$AntisymmetricRelation","å","\217\","\210\","æ","\230\","¯","#$TransitiveRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174583).
lisp_trans(=>(partialOrderingOn(RELATION,CLASS),and(reflexiveOn(RELATION,CLASS),rtTransitiveRelation(RELATION),rtAntisymmetricRelation(RELATION))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':174838).
lisp_trans(rtBinaryPredicate(totalOrderingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175025).
lisp_trans(rtAsymmetricRelation(totalOrderingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175068).
lisp_trans(argIsa(totalOrderingOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175114).
lisp_trans(argIsa(totalOrderingOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175156).
lisp_trans(documentation(totalOrderingOn,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","a","total","ordering","on","a","#$SetOrClass","only","if","it","is","a","partial","ordering","for","which","either","(","?","REL","?","INST1","?","INST2",")","or","(","?","REL","?","INST2","?","INST1",")","for","every","?","INST1","and","?","INST2","in","the","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175194).
lisp_trans(documentation(totalOrderingOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","®","\214\","å","\205\","¨","ç","\232\","\204\","é","¡","ºåº","\217\","ç","\232\","\204\","ï","¼","\214\","é","\231\","¤","é","\235\","\236\","å","¯","¹","äº","\216\","è","¿","\231\","ä","¸","ª","#$SetOrClass","é","\207\","\214\","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","?","INST1","å","\222\","\214\","?","INST2ï","¼","\214\","(","?","REL","?","INST1","?","INST2",")","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","(","?","REL","?","INST2","?","INST1",")","æ","\230\","¯","é","\203\","¨","å","\210\","\206\","é","¡","ºåº","\217\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175450).
lisp_trans(<=>(totalOrderingOn(RELATION,CLASS),and(partialOrderingOn(RELATION,CLASS),trichotomizingOn(RELATION,CLASS))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175723).
lisp_trans(rtBinaryPredicate(trichotomizingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175874).
lisp_trans(rtAsymmetricRelation(trichotomizingOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175918).
lisp_trans(argIsa(trichotomizingOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':175965).
lisp_trans(argIsa(trichotomizingOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':176008).
lisp_trans(documentation(trichotomizingOn,vEnglishLanguage,s("A","#$BinaryRelation","?","REL","is","trichotomizing","on","a","#$SetOrClass","only","if",",","for","all","instances","?","INST1","and","?","INST2","of","the","#$SetOrClass",",","at","least","one","of","the","following","holds",":","(","?","REL","?","INST1","?","INST2",")",",","(","?","REL","?","INST2","?","INST1",")","or","(","equal","?","INST1","?","INST2",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':176047).
lisp_trans(documentation(trichotomizingOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","?","REL","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","å","±","\236\","äº","\216\","ä","¸","\211\","å","\210\","\206\","å","\205\","³","ç","³","»","ï","¼","\214\","é","\231\","¤","é","\235\","\236\","å","¯","¹","äº","\216\","è","¿","\231\","ä","¸","ª","#$SetOrClass","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1","å","\222\","\214\","?","INST2","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ï","¼","\214\","èµ","·","ç","\240\","\201\","ä","»","»","ä","½","\225\","ä","»","¥","ä","¸","\213\","ä","¸","\200\","ä","¸","ª","(","?","REL","?","INST1","?","INST2",")","ï","¼","\214\","(","?","REL","?","INST2","?","INST1",")","æ","\210\","\226\","(","equal","?","INST1","?","INST2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':176331).
lisp_trans(=>(and(trichotomizingOn(RELATION,CLASS),tPred(RELATION)),all([INST1,INST2],=>(and(isa(INST1,CLASS),isa(INST2,CLASS)),or([RELATION,INST1,INST2],[RELATION,INST2,INST1],equal(INST1,INST2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':176638).
lisp_trans(rtBinaryPredicate(equivalenceRelationOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':176982).
lisp_trans(rtAsymmetricRelation(equivalenceRelationOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177031).
lisp_trans(argIsa(equivalenceRelationOn,1,rtBinaryRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177083).
lisp_trans(argIsa(equivalenceRelationOn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177131).
lisp_trans(documentation(equivalenceRelationOn,vEnglishLanguage,s("A","#$BinaryRelation","is","an","#$equivalenceRelationOn","a","#$SetOrClass","only","if","the","relation","is","#$reflexiveOn","the","#$SetOrClass","and","it","is","both","a","#$TransitiveRelation","and","a","#$SymmetricRelation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177175).
lisp_trans(documentation(equivalenceRelationOn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryRelation","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","#$equivalenceRelationOnï","¼","\214\","é","\231\","¤","é","\235\","\236\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","å","\234\","¨","è","¿","\231\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","#$reflexiveOnï","¼","\214\","è","\200\","\214\","ä","¸","\224\","ä","¹","\237\","è","¦","\201\","æ","\227\","¢","æ","\230\","¯","#$TransitiveRelationï","¼","\214\","å","\217\","\210\","æ","\230\","¯","#$SymmetricRelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177415).
lisp_trans(=>(equivalenceRelationOn(RELATION,CLASS),and(rtTransitiveRelation(RELATION),rtSymmetricRelation(RELATION),reflexiveOn(RELATION,CLASS))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177684).
lisp_trans(rtBinaryPredicate(distributes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177871).
lisp_trans(argIsa(distributes,1,rtBinaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177910).
lisp_trans(argIsa(distributes,2,rtBinaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177948).
lisp_trans(documentation(distributes,vEnglishLanguage,s("A","#$BinaryFunction","?","FUNCTION1","is","distributive","over","another","#$BinaryFunction","?","FUNCTION2","just","in","case","(","?","FUNCTION1","?","INST1","(","?","FUNCTION2","?","INST2","?","INST3",")",")","is","equal","to","(","?","FUNCTION2","(","?","FUNCTION1","?","INST1","?","INST2",")","(","?","FUNCTION1","?","INST1","?","INST3",")",")",",","for","all","?","INST1",",","?","INST2",",","and","?","INST3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':177986).
lisp_trans(documentation(distributes,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$BinaryFunction","?","FUNCTION1","æ","\230\","¯","å","\217\","¦","ä","¸","\200\","ä","¸","ª","#$BinaryFunction","?","FUNCTION2","ç","\232\","\204\","å","\210\","\206\","å","¸","\203\","å","\207\","½","æ","\225\","°","ï","¼","\214\","ä","»","¥","é","\230\","²","å","¯","¹","äº","\216\","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","?","INST1ï","¼","\214\","?","INST2","å","\222\","\214\","?","INST3ï","¼","\214\","(","?","FUNCTION1","?","INST1","(","?","FUNCTION2","?","INST2","?","INST3",")",")","ç","­","\211\","äº","\216\","(","?","FUNCTION2","(","?","FUNCTION1","?","INST1","?","INST2",")","(","?","FUNCTION1","?","INST1","?","INST3",")",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':178297).
lisp_trans(documentation(relatedEvent,vEnglishLanguage,s("(","relatedEvent","?","EVENT1","?","EVENT2",")","means","that","the","#$Process","?","EVENT1","is","related","to","the","Process","?","EVENT2",".","The","relationship","is","between","separate","individual","events",",","not","events","and","their","subprocesses",".","On","the","other","hand",",","two","#$subProcesses","of","the","same","overarching","event","may","be","#$relatedEvents",".","The","argument","order","does","not","imply","temporal","ordering",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':179310).
lisp_trans(documentation(relatedEvent,xtChineseLanguage,s("(","relatedEvent","?","EVENT1","?","EVENT2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","?","EVENT1","å","\222\","\214\","è","¿","\207\","ç","¨","\213\","?","EVENT2","æ","\234\","\211\","å","\205\","³","è","¿","\236\","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","ä","¸","ªå","\210\","«","äº","\213\","ä","»","¶","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»",",","è","\200\","\214\","é","\235\","\236\","äº","\213\","ä","»","¶","å","\222\","\214\","å","®","\203\","è","\207\","ªè","¿","\207\","ç","¨","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\","ä","½","\206\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\200\","»","ä","½","\223\","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","ä","¸","¤","ä","¸","ª","#$subProcess","å","\217\","¯","ä","»","¥","æ","\230\","¯","#$relatedEventï","¼","\214\","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","é","¡","ºåº","\217\","å","¹","¶","ä","¸","\215\","ä","»","£","è","¡","¨","æ","\227\","¶","é","\227\","´","ç","\232\","\204\","æ","\227\","¶","è","®","¸","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':179695).
lisp_trans(rtBinaryPredicate(relatedEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180037).
lisp_trans(rtSymmetricRelation(relatedEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180077).
lisp_trans(argIsa(relatedEvent,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180119).
lisp_trans(argIsa(relatedEvent,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180151).
lisp_trans(=>(and(subProcess(S1,P),subProcess(S2,P)),relatedEvent(S1,S2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180183).
lisp_trans(rtBinaryPredicate(causes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180270).
lisp_trans(rtAsymmetricRelation(causes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180304).
lisp_trans(argIsa(causes,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180341).
lisp_trans(argIsa(causes,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180367).
lisp_trans(relatedInternalConcept(causes,causesSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180393).
lisp_trans(genlPreds(causes,relatedEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180440).
lisp_trans(documentation(causes,vEnglishLanguage,s("The","causation","relation","between","instances","of","#$Process",".","(","#$causes","?","PROCESS1","?","PROCESS2",")","means","that","the","instance","of","#$Process","?","PROCESS1","brings","about","the","instance","of","#$Process","?","PROCESS2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180474).
lisp_trans(documentation(causes,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Process","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\233\","\240\","æ","\236\","\234\","å","\205\","³","ç","³","»","ï","¼","\214\","(","#$causes","?","PROCESS1","?","PROCESS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","?","PROCESS1","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","¼","\225\","èµ","·","#$Process","?","PROCESS2","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180698).
lisp_trans(=>(actProcess(PROC1),exists([PROC2],causes(PROC2,PROC1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180901).
lisp_trans(=>(causes(P1,P2),earlier(uWhenFn(P1),uWhenFn(P2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':180985).
lisp_trans(rtBinaryPredicate(causesSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181048).
lisp_trans(rtAsymmetricRelation(causesSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181090).
lisp_trans(argGenl(causesSubclass,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181135).
lisp_trans(argGenl(causesSubclass,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181177).
lisp_trans(documentation(causesSubclass,vEnglishLanguage,s("The","causation","relation","between","subclasses","of","#$Process",".","(","#$causesSubclass","?","PROCESS1","?","PROCESS2",")","means","that","the","subclass","of","#$Process","?","PROCESS1","brings","about","the","subclass","of","#$Process","?","PROCESS2",",","e",".","g",".","(","#$causesSubclass","#$Killing","#$Death",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181219).
lisp_trans(documentation(causesSubclass,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Process","å","­","\220\","ç","±","»","å","\210\","«","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\233\","\240\","æ","\236\","\234\","å","\205\","³","ç","³","»","ï","¼","\214\","(","#$causesSubclass","?","PROCESS1","?","PROCESS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","?","PROCESS1","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","å","¯","¼","è","\207\","´","#$Process","?","PROCESS2","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$causesSubclass","#$Killing","#$Death",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181503).
lisp_trans(=>(causesSubclass(PROC1,PROC2),all([INST2],=>(isa(INST2,PROC2),exists([INST1],and(isa(INST1,PROC1),causes(INST1,INST2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':181780).
lisp_trans(rtBinaryPredicate(causesProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182004).
lisp_trans(rtAsymmetricRelation(causesProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182049).
lisp_trans(argIsa(causesProposition,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182097).
lisp_trans(argIsa(causesProposition,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182134).
lisp_trans(documentation(causesProposition,vEnglishLanguage,s("(","#$causesProposition","?","FORMULA1","?","FORMULA2",")","means","that","the","state","of","affairs","described","by","?","FORMULA1","causes",",","or","mechanistically","brings","about",",","the","state","of","affairs","described","by","?","FORMULA2",".","Note","that","unlike","#$entails",",","the","time","during","which","?","FORMULA2","holds","cannot","precede","the","time","during","which","?","FORMULA1","holds",",","although","?","FORMULA1","and","?","FORMULA2","can","hold","simultaneously",".","Note",",","also",",","that","#$causesProposition","is","a","predicate",",","not","a","truth","function",".","The","following","rule","(","contraposition",")","does","not","hold",":","(","=",">","(","causesProp","?","FORMULA1","?","FORMULA2",")","(","causesProp","(","not","?","FORMULA2",")","(","not","?","FORMULA1",")",")",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182171).
lisp_trans(documentation(causesProposition,xtChineseLanguage,s("(","#$causesProposition","?","FORMULA1","?","FORMULA2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\224\","±","?","FORMULA1","æ","\217\","\217\","è","¿","°","äº","\213\","æ","\200\","\201\","å","¼","\225\","èµ","·","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","å","\206\","³","å","®","\232\","æ","\200\","§","å","\222\","\214\","å","®","\236\","è","´","¨","ä","¸","\212\","å","\234\","°","å","¯","¼","è","\207\","´","ç","\224\","±","?","FORMULA2","æ","\217\","\217\","è","¿","°","ç","\232\","\204\","äº","\213\","æ","\200\","\201\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\234\","\211\","å","\210\","«","äº","\216\","#$entailsï","¼","\214\","?","FORMULA2","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","æ","\227\","¶","é","\227\","´","ä","¸","\215\","è","\203\","½","å","¤","\237\","æ","\227\","©","è","¿","\207\","?","FORMULA1","å","\217\","\221\","ç","\224\","\237\","å","\234\","°","æ","\227\","¶","é","\227\","´","ï","¼","\214\","ä","½","\206\","æ","\230\","¯","?","FORMULA1","å","\222\","\214\","?","FORMULA2","å","\217\","¯","ä","»","¥","å","\220\","\214\","æ","\227\","¶","å","\217\","\221\","ç","\224\","\237\","ï","¼","\214\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","#$causesProposition","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","°","\223\","è","¯","\215\","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\234\","\237\","å","\200\","¼","å","\207\","½","æ","\225\","°","ã","\200\","\202\","ä","»","¥","ä","¸","\213\","ç","\232\","\204\","è","§","\204\","å","\210\","\231\","(","å","¯","¹","ç","«","\213\",")","ä","¸","\215\","è","\203\","½","æ","\210\","\220\","ç","«","\213\","ï","¼","\232\","(","=",">","(","causesProp","?","FORMULA1","?","FORMULA2",")","(","causesProp","(","not","?","FORMULA2",")","(","not","?","FORMULA1",")",")",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':182797).
lisp_trans(=>(and(holdsDuring(T2,SIT2),holdsDuring(T1,SIT1),timeOfTimeInterval(T1),timeOfTimeInterval(T2),causesProposition(SIT1,SIT2)),beforeOrEqual(uBeginFn(T1),uBeginFn(T2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183371).
lisp_trans(rtBinaryPredicate(copy),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183587).
lisp_trans(rtEquivalenceRelation(copy),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183619).
lisp_trans(argIsa(copy,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183655).
lisp_trans(argIsa(copy,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183678).
lisp_trans(documentation(copy,vEnglishLanguage,s("relates","an","#$Object","to","an","exact","copy","of","the","#$Object",",","where","an","exact","copy","is","indistinguishable","from","the","original","with","regard","to","every","property","except","(","possibly",")","spatial","and","/","or","temporal","location",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183701).
lisp_trans(documentation(copy,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µæ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Object","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$Object","ä","¸","\200\","æ","\221\","¸","ä","¸","\200\","æ","\240\","·","å","\234\","°","å","\211\","¯","æ","\234\","¬","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ï","¼","\214\","è","\200\","\214\","å","\216\","\237\","æ","\234\","¬","å","\222\","\214\","å","®","\203\","ä","¸","\200\","æ","\221\","¸","ä","¸","\200\","æ","\240\","·","ç","\232\","\204\","å","\211\","¯","æ","\234\","¬","ï","¼","\214\","å","\234\","¨","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","ç","\211\","¹","æ","\200\","§","é","\231\","¤","äº","\206\","(","å","\217\","¯","è","\203\","½",")","ç","©","ºé","\227\","´","å","\222\","\214\","/","æ","\210\","\226\","æ","\227\","¶","é","\227\","´","å","\234\","°","ä","½","\215\","ç","½","®","ä","¸","\212\","ï","¼","\214\","æ","\230\","¯","æ","²","¡","æ","\234\","\211\","å","\214\","ºå","\210\","«","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':183935).
lisp_trans(=>(copy(OBJ1,OBJ2),all([ATTR],=>(sumoAttribute(OBJ1,ATTR),sumoAttribute(OBJ2,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184190).
lisp_trans(rtBinaryPredicate(time),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184315).
lisp_trans(rtTemporalRelation(time),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184347).
lisp_trans(rtAsymmetricRelation(time),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184380).
lisp_trans(rtTotalValuedRelation(time),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184415).
lisp_trans(argIsa(time,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184451).
lisp_trans(argIsa(time,2,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184476).
lisp_trans(relatedInternalConcept(time,located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184505).
lisp_trans(relatedInternalConcept(time,holdsDuring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184543).
lisp_trans(documentation(time,vEnglishLanguage,s("This","relation","holds","between","an","instance","of","#$Physical","and","an","instance","of","#$TimePosition","just","in","case","the","temporal","lifespan","of","the","former","includes","the","latter",".","In","other","words",",","(","#$time","?","THING","?","TIME",")","means","that","?","THING","existed","or","occurred","at","?","TIME",".","Note","that","#$time","does","for","instances","of","#$Physical","what","#$holdsDuring","does","for","instances","of","#$Formula",".","The","constants","#$located","and","#$time","are","the","basic","spatial","and","temporal","predicates",",","respectively",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':184585).
lisp_trans(documentation(time,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","ç","\224\","¨","äº","\216\","ä","¸","\200\","ä","¸","ª","#$Physical","å","®","\236\","ä","¾","\213\","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$TimePosition","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ï","¼","\214\","ä","»","¥","é","\230\","²","å","\211\","\215\","è","\200\","\205\","æ","\211\","\200\","å","­","\230\","å","\234\","¨","ç","\232\","\204\","ç","\232\","\204\","æ","\227\","¶","é","\227\","´","å","\214\","\205\","å","\220\","«","äº","\206\","å","\220\","\216\","è","\200\","\205\","ç","\232\","\204\","ã","\200\","\202\","æ","\215\","¢","å","\217\","¥","è","¯","\235\","è","¯","´","ï","¼","\214\","(","#$time","?","THING","?","TIME",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","THING","å","\234\","¨","?","TIME","å","\207\","ºç","\216\","°","æ","\210\","\226\","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$time","å","\234\","¨","äº","\216\","#$Physical","å","®","\236\","ä","¾","\213\","ï","¼","\214\","å","°","±","ç","\233\","¸","ç","­","\211\","äº","\216\","#$holdsDuring","ç","\224\","¨","å","\234\","¨","#$Formula","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ä","¸","\212\","ï","¼","\214\","å","¸","¸","æ","\225\","°","#$located","å","\222\","\214\","#$time","å","\210\","\206\","å","\210\","«","æ","\230\","¯","æ","\230\","¯","å","\237\","ºæ","\234\","¬","ç","\232\","\204\","ç","©","ºé","\227\","´","å","\222\","\214\","æ","\227\","¶","é","\227\","´","è","°","\223\","è","¯","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185068).
lisp_trans(rtBinaryPredicate(holdsDuring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185507).
lisp_trans(rtAsymmetricRelation(holdsDuring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185546).
lisp_trans(argIsa(holdsDuring,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185588).
lisp_trans(argIsa(holdsDuring,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185624).
lisp_trans(documentation(holdsDuring,vEnglishLanguage,s("(","#$holdsDuring","?","TIME","?","FORMULA",")","means","that","the","proposition","denoted","by","?","FORMULA","is","true","in","the","time","frame","?","TIME",".","Note","that","this","implies","that","?","FORMULA","is","true","at","every","#$TimePoint","which","is","a","#$temporalPart","of","?","TIME",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185655).
lisp_trans(documentation(holdsDuring,xtChineseLanguage,s("(","#$holdsDuring","?","TIME","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\224\","±","?","FORMULA","è","¡","¨","ç","¤","ºç","\232\","\204\","å","\221\","½","é","¢","\230\","å","\234\","¨","?","TIMEæ","\227\","¶","æ","®","µæ","\230\","¯","äº","\213\","å","®","\236\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","?","FORMULA","å","\234\","¨","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$TimePoint","é","\203\","½","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ï","¼","\214\","#$TimePoint","æ","\230\","¯","?","TIME","ä","¸","\200\","ä","¸","ªç","\232\","\204\","#$temporalPartã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':185915).
lisp_trans(=>(and(holdsDuring(TIME,SITUATION1),entails(SITUATION1,SITUATION2)),holdsDuring(TIME,SITUATION2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186180).
lisp_trans(=>(holdsDuring(TIME,not(SITUATION)),not(holdsDuring(TIME,SITUATION))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186308).
lisp_trans(rtTernaryPredicate(capability),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186394).
lisp_trans(argGenl(capability,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186433).
lisp_trans(argIsa(capability,2,rtCaseRole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186471).
lisp_trans(argIsa(capability,3,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186502).
lisp_trans(documentation(capability,vEnglishLanguage,s("(","#$capability","?","PROCESS","?","ROLE","?","OBJ",")","means","that","?","OBJ","has","the","ability","to","play","the","role","of","?","ROLE","in","#$Processes","of","type","?","PROCESS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186531).
lisp_trans(documentation(capability,xtChineseLanguage,s("(","#$capability","?","PROCESS","?","ROLE","?","OBJ",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ","ç","\224\","±","è","\203\","½","å","\212\","\233\","å","\234\","¨","?","PROCESS","ç","±","»","å","\236\","\213\","ç","\232\","\204\","#$Process","æ","\213\","\205\","ä","»","»","?","ROLE","ç","\232\","\204\","æ","\234\","¬","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186702).
lisp_trans(=>(and(rtCaseRole(ROLE),[ROLE,ARG1,ARG2],isa(ARG1,PROC),genls(PROC,actProcess)),capability(PROC,ROLE,ARG2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':186869).
lisp_trans(=>(capability(PROCESS,ROLE,OBJ),modalAttribute(exists([P],and(isa(P,PROCESS),[ROLE,P,OBJ])),tSumoPossibility)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187036).
lisp_trans(rtBinaryPredicate(exploits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187193).
lisp_trans(rtAsymmetricRelation(exploits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187229).
lisp_trans(argIsa(exploits,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187268).
lisp_trans(argIsa(exploits,2,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187295).
lisp_trans(documentation(exploits,vEnglishLanguage,s("(","#$exploits","?","OBJ","?","AGENT",")","means","that","?","OBJ","is","used","by","?","AGENT","as","a","#$resource","in","an","unspecified","instance","of","#$Process",".","This","#$Predicate",",","as","its","corresponding","axiom","indicates",",","is","a","composition","of","the","relations","#$agent","and","#$resource",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187321).
lisp_trans(documentation(exploits,xtChineseLanguage,s("(","#$exploits","?","OBJ","?","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","å","\210\","©","ç","\224\","¨","?","OBJ","ä","½","\234\","ä","¸","ºä","¸","\200\","ä","¸","ªæ","²","¡","æ","\234\","\211\","æ","\214\","\207\","å","®","\232\","#$Process","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$resourceï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Predicate","å","°","±","å","¦","\202\","å","®","\203\","ç","\232\","\204\","ç","\233\","¸","å","\205\","³","å","®","\232\","ä","¹","\211\","æ","\211\","\200\","è","¯","´","ç","\232\","\204\","ï","¼","\214\","æ","\230\","¯","ç","\224\","±","#$agent","å","\222\","\214\","#$resource","ç","\232\","\204\","å","\205\","³","ç","³","»","æ","\211\","\200\","ç","»","\204\","æ","\210\","\220\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187595).
lisp_trans(=>(exploits(OBJ,AGENT),exists([PROCESS],and(agent(PROCESS,AGENT),resource(PROCESS,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':187864).
lisp_trans(rtBinaryPredicate(hasPurpose),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188018).
lisp_trans(rtAsymmetricRelation(hasPurpose),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188056).
lisp_trans(argIsa(hasPurpose,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188097).
lisp_trans(argIsa(hasPurpose,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188128).
lisp_trans(documentation(hasPurpose,vEnglishLanguage,s("This","#$Predicate","expresses","the","concept","of","a","conventional","goal",",","i",".","e",".","a","goal","with","a","neutralized","agent","'s","intention",".","Accordingly",",","(","#$hasPurpose","?","THING","?","FORMULA",")","means","that","the","instance","of","#$Physical","?","THING","has",",","as","its","purpose",",","the","#$Proposition","expressed","by","?","FORMULA",".","Note","that","there","is","an","important","difference","in","meaning","between","the","#$Predicates","#$hasPurpose","and","#$result",".","Although","the","second","argument","of","the","latter","can","satisfy","the","second","argument","of","the","former",",","a","conventional","goal","is","an","expected","and","desired","outcome",",","while","a","result","may","be","neither","expected","nor","desired",".","For","example",",","a","machine","process","may","have","outcomes","but","no","goals",",","aimless","wandering","may","have","an","outcome","but","no","goal",",","a","learning","process","may","have","goals","with","no","outcomes",",","and","so","on",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188158).
lisp_trans(documentation(hasPurpose,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Predicate","è","¡","¨","è","¾","¾","ä","¸","\200\","ä","¸","ªå","¸","¸","è","§","\204\","ç","\233\","®","æ","\240\","\207\","ç","\232\","\204\","æ","¦","\202\","å","¿","µï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","è","¿","\231\","ä","¸","ª","ç","\233\","®","æ","\240\","\207\","äº","\213\","å","\207\","ºè","\207\","ªä","¸","\200\","ä","¸","ªä","¸","­","ç","«","\213\","ä","¸","»","äº","\213\","è","\200\","\205\","ç","\232\","\204\","æ","\204\","\217\","å","\233\","¾","ã","\200\","\202\","å","\233\","\240\","æ","­","¤","ï","¼","\214\","(","#$hasPurpose","?","THING","?","FORMULA",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Physical","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","?","THING","ç","\232\","\204\","æ","\204\","\217\","å","\233\","¾","æ","\230\","¯","ç","\224\","±","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","#$Propositionã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$Predicates","#$hasPurpose","å","\222\","\214\","#$result","ä","¹","\213\","é","\227\","´","å","\234\","¨","æ","\204\","\217\","ä","¹","\211\","ä","¸","\212\","å","­","\230\","å","\234\","¨","ç","\235\","\200\","ä","¸","\200\","ä","¸","ªé","\207\","\215\","è","¦","\201\","ç","\232\","\204\","å","·","®","å","¼","\202\","ã","\200\","\202\","è","\231\","½","ç","\204\","¶","å","\220\","\216\","è","\200\","\205\","ç","\232\","\204\","ç","¬","¬","äº","\214\","ä","¸","ªå","\217\","\202\","æ","\225\","°","å","\217\","¯","ä","»","¥","æ","»","¡","è","¶","³","å","\211\","\215\","è","\200\","\205\","ç","\232\","\204\","ç","¬","¬","äº","\214\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ï","¼","\214\","å","¸","¸","è","§","\204\","ç","\233\","®","æ","\240\","\207\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","¢","\204\","æ","\234\","\237\","å","\222\","\214\","å","\217\","\227\","æ","\234\","\237\","å","¾","\205\","ç","\232\","\204\","æ","\210\","\220\","æ","\236\","\234\","ï","¼","\214\","è","\200\","\214\","ç","»","\223\","æ","\236\","\234\","å","\217\","¯","ä","»","¥","æ","\230\","¯","é","¢","\204\","æ","\234\","\237\","æ","\210\","\226\","è","\200\","\205\","å","\217\","\227\","æ","\234\","\237\","å","¾","\205\","ç","\232\","\204\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¸","\200\","ä","¸","ªæ","\234\","ºå","\231\","¨","è","¿","\207\","ç","¨","\213\","å","\217\","¯","ä","»","¥","æ","\234\","\211\","å","\207\","ºæ","\236\","\234\","å","\215\","´","æ","²","¡","æ","\234\","\211\","ç","\233\","®","æ","\240\","\207\","ï","¼","\214\","æ","¯","«","æ","\227\","\240\","ç","\233\","®","ç","\232\","\204\","ç","\232\","\204\","æ","¸","¸","è","\215\","¡","ä","¼","\232\","æ","\234\","\211\","ä","¸","\200\","ä","¸","ª","æ","\210\","\220\","æ","\236\","\234\","å","\215\","´","æ","²","¡","æ","\234\","\211\","ç","\233\","®","æ","\240\","\207\","ï","¼","\214\","ä","¸","\200\","ä","¸","ªå","­","¦","ä","¹","\240\","è","¿","\207\","ç","¨","\213\","å","\217\","¯","ä","»","¥","æ","\234\","\211\","ç","\233\","®","æ","\240\","\207\","å","\215\","´","æ","²","¡","æ","\234\","\211\","ä","»","»","ä","½","\225\","ç","\232\","\204\","æ","\210\","\220\","æ","\236\","\234\","ï","¼","\214\","å","¦","\202\","æ","­","¤","ç","±","»","æ","\216\","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':188951).
lisp_trans(rtTernaryPredicate(hasPurposeForAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':189716).
lisp_trans(argIsa(hasPurposeForAgent,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':189763).
lisp_trans(argIsa(hasPurposeForAgent,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':189802).
lisp_trans(argIsa(hasPurposeForAgent,3,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':189840).
lisp_trans(documentation(hasPurposeForAgent,vEnglishLanguage,s("Expresses","a","cognitive","attitude","of","an","agent","with","respect","to","a","particular","instance","of","Physical",".","More","precisely",",","(","#$hasPurposeForAgent","?","THING","?","FORMULA","?","AGENT",")","means","that","the","purpose","of","?","THING","for","?","AGENT","is","the","proposition","expressed","by","?","FORMULA",".","Very","complex","issues","are","involved","here",".","In","particular",",","the","rules","of","inference","of","the","first","order","predicate","calculus","are","not","truth","-","preserving","for","the","second","argument","position","of","this","#$Predicate",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':189876).
lisp_trans(documentation(hasPurposeForAgent,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\230\","¯","ç","\224\","±","ä","¸","»","äº","\213\","å","¯","¹","äº","\216\","ä","¸","\200\","ä","¸","ªç","\211\","¹","å","®","\232\","ç","\232\","\204\","ç","\211\","©","ç","\220\","\206\","å","®","\236\","ä","¾","\213\","è","¡","¨","è","¾","¾","ç","\232\","\204\","ä","¸","\200\","ç","§","\215\","è","®","¤","ç","\237\","¥","æ","\200\","\201\","åº","¦","ï","¼","\214\","æ","\233\","´","ç","¡","®","å","®","\236\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","(","#$hasPurposeForAgent","?","THING","?","FORMULA","?","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","FORMULA","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\221\","½","é","¢","\230\","æ","\230\","¯","?","AGENT","å","\201\","\232\","?","THING","ç","\232\","\204\","ç","\233\","®","ï","¼","\214\","è","¿","\231\","é","\207\","\214\","å","\214\","\205\","å","\220\","«","äº","\206\","ä","¸","\200\","äº","\233\","å","\215\","\201\","å","\210\","\206\","å","¤","\215\","æ","\235\","\202\","ç","\232\","\204\","é","\227\","®","é","¢","\230\","ï","¼","\214\","ç","\211\","¹","å","\210\","«","æ","\230\","¯","ä","¸","\200\","é","\230\","¶","é","\200\","»","è","¾","\221\","ç","\232\","\204\","æ","\216\","¨","ç","\220\","\206\","å","\216\","\237\","å","\210\","\231\","å","¯","¹","äº","\216\","è","¿","\231\","ä","¸","ª","#$Predicate","ç","\232\","\204\","ç","¬","¬","äº","\214\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","½","\215\","ç","½","®","å","¹","¶","ä","¸","\215\","è","\203\","½","ä","¿","\235\","æ","\214\","\201\","ç","\234\","\237\","å","®","\236\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':190368).
lisp_trans(=>(hasPurpose(THING,PURPOSE),exists([AGENT],hasPurposeForAgent(THING,PURPOSE,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':190796).
lisp_trans(rtBinaryPredicate(hasSkill),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':190905).
lisp_trans(rtAsymmetricRelation(hasSkill),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':190941).
lisp_trans(argGenl(hasSkill,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':190980).
lisp_trans(argIsa(hasSkill,2,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191016).
lisp_trans(documentation(hasSkill,vEnglishLanguage,s("Similar","to","the","#$capability","#$Predicate","with","the","additional","restriction","that","the","ability","be","practised","/","demonstrated","to","some","measurable","degree",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191042).
lisp_trans(documentation(hasSkill,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","\230\","¯","ç","±","»","ä","¼","¼","#$capability","#$Predicate","ä","½","\206\","æ","\234\","\211\","é","¢","\235\","å","¤","\226\","ç","\232\","\204\","é","\231\","\220\","å","\210\","¶","ï","¼","\214\","å","°","±","æ","\230\","¯","è","¿","\231\","ä","¸","ªè","\203\","½","å","\212\","\233\","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","æ","\237\","\220\","ç","§","\215\","å","\217\","¯","é","\207\","\217\","åº","¦","ç","\232\","\204\","ç","¨","\213\","åº","¦","å","®","\236\","è","·","µ","/","æ","¼","\224\","ç","¤","ºå","\207\","ºæ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191228).
lisp_trans(=>(hasSkill(PROC,AGENT),capability(PROC,agent,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191415).
lisp_trans(rtTernaryPredicate(confersNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191483).
lisp_trans(argIsa(confersNorm,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191523).
lisp_trans(argIsa(confersNorm,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191553).
lisp_trans(argIsa(confersNorm,3,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191584).
lisp_trans(documentation(confersNorm,vEnglishLanguage,s("Expresses","the","relationship","between","a","#$Formula",",","an","#$Entity",",","and","an","#$ObjectiveNorm","when","the","#$Entity","brings","it","about","that","the","#$Formula","has","the","#$ObjectiveNorm",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191621).
lisp_trans(documentation(confersNorm,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µè","¡","¨","è","¾","¾","ä","¸","\200\","ä","¸","ª","#$Formula","ã","\200\","\201\","ä","¸","\200\","ä","¸","ª","#$Entity","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$ObjectiveNorm","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\232\","å","°","±","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$Entity","æ","\211\","\200\","è","¡","¨","ç","¤","ºç","\232\","\204\","#$Formula","æ","\234\","\211\","é","\202\","£","ä","¸","ª","#$ObjectiveNormã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':191829).
lisp_trans(=>(holdsDuring(TIME,confersNorm(ENTITY,FORMULA,NORM)),and(holdsDuring(uImmediatePastFn(TIME),not(modalAttribute(FORMULA,NORM))),holdsDuring(uImmediateFutureFn(TIME),modalAttribute(FORMULA,NORM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192048).
lisp_trans(rtTernaryPredicate(deprivesNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192283).
lisp_trans(disjointRelation(deprivesNorm,confersNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192324).
lisp_trans(argIsa(deprivesNorm,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192368).
lisp_trans(argIsa(deprivesNorm,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192399).
lisp_trans(argIsa(deprivesNorm,3,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192431).
lisp_trans(documentation(deprivesNorm,vEnglishLanguage,s("Expresses","the","relationship","between","an","#$Entity",",","a","#$Formula",",","and","an","#$ObjectiveNorm","when","the","#$Entity","brings","it","about","that","the","#$Formula","does","not","have","the","#$ObjectiveNorm",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192469).
lisp_trans(documentation(deprivesNorm,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µè","¡","¨","è","¾","¾","äº","\206\","ä","¸","\200\","ä","¸","ª","#$Entityï","¼","\214\","#$Formula","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$ObjectiveNorm","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\232\","å","°","±","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$Entity","æ","\211\","\200\","è","¡","¨","ç","¤","ºç","\232\","\204\","#$Formula","æ","²","¡","æ","\234\","\211\","é","\202\","£","ä","¸","ª","#$ObjectiveNormã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192688).
lisp_trans(=>(holdsDuring(TIME,deprivesNorm(ENTITY,FORMULA,NORM)),and(holdsDuring(uImmediatePastFn(TIME),modalAttribute(FORMULA,NORM)),holdsDuring(uImmediateFutureFn(TIME),not(modalAttribute(FORMULA,NORM))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':192906).
lisp_trans(rtSpatialRelation(partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193142).
lisp_trans(rtBinaryPredicate(partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193183).
lisp_trans(rtTotalValuedRelation(partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193224).
lisp_trans(argIsa(partlyLocated,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193269).
lisp_trans(argIsa(partlyLocated,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193303).
lisp_trans(documentation(partlyLocated,vEnglishLanguage,s("(","#$partlyLocated","?","OBJ1","?","OBJ2",")","means","that","the","instance","of","#$Physical","?","OBJ1","is","at","least","partially","located","at","?","OBJ2",".","For","example",",","Istanbul","is","partly","located","in","#$Asia","and","partly","located","in","#$Europe",".","Note","that","#$partlyLocated","is","the","most","basic","localization","relation",":","#$located","is","an","immediate","#$subrelation","of","#$partlyLocated","and","#$exactlyLocated","is","an","immediate","#$subrelation","of","#$located",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193335).
lisp_trans(documentation(partlyLocated,xtChineseLanguage,s("(","#$partlyLocated","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Physical","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","?","OBJ1","èµ","·","ç","\240\","\201\","æ","\234\","\211\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ä","½","\215\","äº","\216\","?","OBJ2ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¼","\212\","æ","\226\","¯","å","\235\","¦","å","¸","\203\","å","°","\224\","æ","\234\","\211\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ä","½","\215\","äº","\216\","#$Asia",",","å","¹","¶","æ","\234\","\211\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ä","½","\215\","äº","\216\","#$Europeã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$partlyLocated","æ","\230\","¯","æ","\234\","\200\","å","\237\","ºæ","\234\","¬","ç","\232\","\204\","ä","½","\215\","ç","½","®","å","\205\","³","ç","³","»","ï","¼","\232\","#$located","æ","\230\","¯","#$partlyLocated","ç","\232\","\204\","ç","\233\","´","æ","\216\","¥","#$subrelationï","¼","\214\","è","\200\","\214\","#$exactlyLocated","æ","\230\","¯","#$located","ç","\232\","\204\","ç","\233\","´","æ","\216\","¥","#$subrelationã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':193772).
lisp_trans(=>(and(tSumoObject(OBJ1),partlyLocated(OBJ1,OBJ2)),overlapsSpatially(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194178).
lisp_trans(=>(and(tSumoObject(OBJ1),partlyLocated(OBJ1,OBJ2)),exists([SUB],and(part(SUB,OBJ1),located(SUB,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194286).
lisp_trans(rtAntisymmetricRelation(located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194439).
lisp_trans(rtTransitiveRelation(located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194480).
lisp_trans(rtTotalValuedRelation(located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194518).
lisp_trans(genlPreds(located,partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194557).
lisp_trans(argIsa(located,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194594).
lisp_trans(argIsa(located,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194622).
lisp_trans(documentation(located,vEnglishLanguage,s("(","#$located","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","#$partlyLocated","at","?","OBJ2",",","and","there","is","no","#$part","of","?","OBJ1","that","is","not","#$located","at","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194649).
lisp_trans(documentation(located,xtChineseLanguage,s("(","#$located","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","#$partlyLocated","å","\234\","¨","?","OBJ2ï","¼","\214\","è","\200\","\214\","ä","¸","\224\","æ","²","¡","æ","\234\","\211\","ä","¸","\200\","å","¤","\204\","?","OBJ1ç","\232\","\204\","#$part","ä","¸","\215\","æ","\230\","¯","#$located","å","\234\","¨","?","OBJ2ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':194825).
lisp_trans(=>(located(OBJ1,OBJ2),all([SUB],=>(part(SUB,OBJ1),located(SUB,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195004).
lisp_trans(rtCaseRole(eventPartlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195112).
lisp_trans(rtPartialValuedRelation(eventPartlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195151).
lisp_trans(genlPreds(eventPartlyLocated,partlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195203).
lisp_trans(argIsa(eventPartlyLocated,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195250).
lisp_trans(argIsa(eventPartlyLocated,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195288).
lisp_trans(documentation(eventPartlyLocated,vEnglishLanguage,s("(","#$eventPartlyLocated","?","PROC","?","OBJ",")","means","that","some","#$subProcess","of","#$Process","?","PROC","is","located","in","#$Object","?","OBJ",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195325).
lisp_trans(documentation(eventPartlyLocated,xtChineseLanguage,s("(","#$eventPartlyLocated","?","PROC","?","OBJ",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","?","PROC","ç","\232\","\204\","æ","\237\","\220\","äº","\233\","#$subProcess","æ","\230\","¯","ä","½","\215\","äº","\216\","#$Object","?","OBJã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195489).
lisp_trans(termFormat(vEnglishLanguage,eventPartlyLocated,s("event","partly","located")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195655).
lisp_trans(=>(eventPartlyLocated(PROC,OBJ),exists([SUB],and(subProcess(SUB,PROC),eventLocated(SUB,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195727).
lisp_trans(=>(origin(PROCESS,LOC),eventPartlyLocated(PROCESS,LOC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195856).
lisp_trans(=>(destination(PROCESS,LOC),eventPartlyLocated(PROCESS,LOC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195924).
lisp_trans(genlPreds(eventPartlyLocated,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':195997).
lisp_trans(genlPreds(eventLocated,eventPartlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196047).
lisp_trans(rtCaseRole(eventLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196093).
lisp_trans(rtTotalValuedRelation(eventLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196126).
lisp_trans(documentation(eventLocated,vEnglishLanguage,s("(","#$eventLocated","?","PROC","?","OBJ",")","means","that","the","entire","#$Process","?","PROC","is","located","on","#$Object","?","OBJ",",","meaning","that","all","#$subProcess","of","?","PROC","is","located","on","?","OBJ")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196170).
lisp_trans(documentation(eventLocated,xtChineseLanguage,s("(","#$eventLocated","?","PROC","?","OBJ",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","æ","\225\","´","ä","¸","ª","#$Process","?","PROC","æ","\230\","¯","ä","½","\215\","äº","\216\","#$Object","?","OBJï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","æ","\211\","\200\","æ","\234\","\211\","?","PROC","ç","\232\","\204\","#$subProcess","æ","\230\","¯","ä","½","\215\","äº","\216\","?","OBJã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196370).
lisp_trans(termFormat(vEnglishLanguage,eventLocated,s("event","located")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196567).
lisp_trans(=>(eventLocated(PROCESS,OBJ),all([SUB],=>(subProcess(SUB,PROCESS),eventLocated(SUB,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196626).
lisp_trans(genlPreds(exactlyLocated,located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196754).
lisp_trans(documentation(exactlyLocated,vEnglishLanguage,s("The","actual",",","minimal","location","of","an","Object",".","This","is","a","subrelation","of","the","more","general","#$Predicate","#$located",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196791).
lisp_trans(documentation(exactlyLocated,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","ç","\232\","\204\","å","®","\236\","é","\231\","\205\","å","\222\","\214\","æ","\234\","\200\","ç","®","\200\","çº","¦","ç","\232\","\204\","ä","½","\215\","ç","½","®","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","æ","\233\","´","å","\212\","\240\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicate","#$located","ç","\232\","\204\","å","­","\220\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':196949).
lisp_trans(=>(exactlyLocated(OBJ,REGION),not(exists([OTHEROBJ],and(exactlyLocated(OTHEROBJ,REGION),not(equal(OTHEROBJ,OBJ)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197110).
lisp_trans(rtSpatialRelation(cycBetween),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197303).
lisp_trans(rtTernaryPredicate(cycBetween),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197338).
lisp_trans(argIsa(cycBetween,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197374).
lisp_trans(argIsa(cycBetween,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197400).
lisp_trans(argIsa(cycBetween,3,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197426).
lisp_trans(documentation(cycBetween,vEnglishLanguage,s("(","between","?","OBJ1","?","OBJ2","?","OBJ3",")","means","that","?","OBJ2","is","spatially","located","between","?","OBJ1","and","?","OBJ3",".","Note","that","this","implies","that","?","OBJ2","is","directly","between","?","OBJ1","and","?","OBJ3",",","i",".","e",".","the","projections","of","?","OBJ1","and","?","OBJ3","overlap","with","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197452).
lisp_trans(documentation(cycBetween,xtChineseLanguage,s("(","between","?","OBJ1","?","OBJ2","?","OBJ3",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ2","å","\234\","¨","ç","©","ºé","\227\","´","ä","¸","\212\","ä","½","\215\","äº","\216\","?","OBJ1","å","\222\","\214\","?","OBJ3","ä","¹","\213\","é","\227\","´","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","?","OBJ2","æ","­","£","æ","­","£","ä","½","\215\","äº","\216\","å","\234\","¨","?","OBJ1","å","\222\","\214\","?","OBJ3","ä","¹","\213\","é","\227\","´","ï","¼","\214\","å","\215\","³","æ","\230\","¯","?","OBJ1","å","\222\","\214\","?","OBJ3","ç","\232\","\204\","å","°","\204\","å","½","±","å","\222\","\214\","?","OBJ2","ç","\232\","\204\","å","°","\204\","å","½","±","é","\207\","\215\","å","\217\","\240\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197717).
lisp_trans(=>(cycBetween(END1,MID,END2),cycBetween(END2,MID,END1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':197981).
lisp_trans(documentation(betweenOnPath,vEnglishLanguage,s("(","betweenOnPath","?","OBJ1","?","OBJ2","?","OBJ3","?","PATH",")","means","that","?","OBJ2","is","spatially","located","between","?","OBJ1","and","?","OBJ3","on","the","path","?","PATH",".","Note","that","this","is","a","more","specialized","relation","of","between","since","any","object","that","is","between","others","with","respect","to","a","particular","path","is","also","simply","between","them",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198045).
lisp_trans(documentation(betweenOnPath,xtChineseLanguage,s("(","betweenOnPath","?","OBJ1","?","OBJ2","?","OBJ3","?","PATH",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ2","æ","\211\","\200\","å","¤","\204\","ç","\232\","\204\","è","·","¯","å","¾","\204\","?","PATH","å","\234\","¨","ç","©","ºé","\227\","´","ä","¸","\212\","ä","½","\215\","äº","\216\","?","OBJ1","å","\222\","\214\","?","OBJ3","ä","¹","\213\","é","\227\","´","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\233\","´","å","\212\","\240\","ä","¸","\223\","é","\227\","¨","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","\234\","¨","ä","¸","\200\","æ","\235\","¡","è","·","¯","å","¾","\204\","ä","¸","\212\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","ä","»","»","ä","½","\225\","ç","\211\","©","ä","½","\223\","ï","¼","\214\","æ","\240\","¹","æ","\234\","¬","å","°","±","æ","\230\","¯","å","\234\","¨","å","®","\203\","ä","»","¬","ä","¹","\213\","é","\227\","´","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198375).
lisp_trans(rtSpatialRelation(betweenOnPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198680).
lisp_trans(rtQuaternaryPredicate(betweenOnPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198721).
lisp_trans(argIsa(betweenOnPath,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198766).
lisp_trans(argIsa(betweenOnPath,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198798).
lisp_trans(argIsa(betweenOnPath,3,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198830).
lisp_trans(argIsa(betweenOnPath,4,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198862).
lisp_trans(=>(betweenOnPath(OBJ1,OBJ2,OBJ3,PATH),cycBetween(OBJ1,OBJ2,OBJ3)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198895).
lisp_trans(rtBinaryPredicate(traverses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':198973).
lisp_trans(rtSpatialRelation(traverses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199010).
lisp_trans(argIsa(traverses,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199047).
lisp_trans(argIsa(traverses,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199075).
lisp_trans(documentation(traverses,vEnglishLanguage,s("(","#$traverses","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","crosses","or","extends","across","?","OBJ2",".","Note","that","#$crosses","and","#$penetrates","are","subrelations","of","#$traverses",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199103).
lisp_trans(documentation(traverses,xtChineseLanguage,s("(","#$traverses","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","æ","¨","ªè","¿","\207\","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","å","»","¶","ä","¼","¸","è","·","¨","è","¶","\212\","è","·","¨","?","OBJ2",".","æ","³","¨","ï","¼","\232\","#$crosses","å","\222\","\214\","#$penetratesæ","\230\","¯","#$traverses","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199294).
lisp_trans(=>(traverses(OBJ1,OBJ2),or(crosses(OBJ1,OBJ2),penetrates(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199487).
lisp_trans(genlPreds(crosses,traverses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199587).
lisp_trans(rtAsymmetricRelation(crosses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199619).
lisp_trans(rtTransitiveRelation(crosses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199657).
lisp_trans(disjointRelation(crosses,connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199695).
lisp_trans(documentation(crosses,vEnglishLanguage,s("(","crosses","?","OBJ1","?","OBJ2",")","means","that","#$Object","?","OBJ1","#$traverses","Object","?","OBJ2",",","without","being","#$connected","to","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199732).
lisp_trans(documentation(crosses,xtChineseLanguage,s("(","crosses","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Object","?","OBJ1","#$traverses","ç","\211\","©","ä","½","\223\","?","OBJ2ï","¼","\214\","ä","½","\206\","æ","\230\","¯","å","¹","¶","æ","²","¡","æ","\234\","\211\","å","\222\","\214\","å","®","\203\","#$connectedã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':199881).
lisp_trans(genlPreds(penetrates,traverses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200039).
lisp_trans(rtAsymmetricRelation(penetrates),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200074).
lisp_trans(rtIntransitiveRelation(penetrates),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200115).
lisp_trans(rtPartialValuedRelation(penetrates),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200158).
lisp_trans(documentation(penetrates,vEnglishLanguage,s("(","penetrates","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","#$connected","to","?","OBJ2","along","at","least","one","whole","dimension","(","length",",","width","or","depth",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200202).
lisp_trans(documentation(penetrates,xtChineseLanguage,s("(","penetrates","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\222\","\214\","?","OBJ2","èµ","·","ç","\240\","\201\","å","\234\","¨","ä","¸","\200\","æ","\225\","´","ä","¸","ªç","»","´","åº","¦","(","é","\225\","¿","åº","¦","ã","\200\","\201\","é","\230\","\224\","åº","¦","æ","\210\","\226\","æ","·","±","åº","¦",")","#$connectedã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200374).
lisp_trans(=>(penetrates(X,Y),meetsSpatially(X,Y)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200540).
lisp_trans(rtBinaryFunction(uWhereFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200592).
lisp_trans(rtSpatialRelation(uWhereFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200626).
lisp_trans(rtTotalValuedRelation(uWhereFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200661).
lisp_trans(argIsa(uWhereFn,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200700).
lisp_trans(argIsa(uWhereFn,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200728).
lisp_trans(resultIsa(uWhereFn,tPlaceLikeRegion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200757).
lisp_trans(relatedInternalConcept(uWhereFn,uWhenFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200780).
lisp_trans(documentation(uWhereFn,vEnglishLanguage,s("Maps","an","#$Object","and","a","#$TimePoint","at","which","the","#$Object","exists","to","the","#$Region","where","the","#$Object","existed","at","that","#$TimePoint",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200820).
lisp_trans(documentation(uWhereFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Object","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$TimePoint","è","¿","\236\","å","\234\","¨","ä","¸","\200\","èµ","·","ï","¼","\214\","å","®","\203\","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$Object","å","\234\","¨","#$TimePoint","å","­","\230\","å","\234\","¨","äº","\216\","#$Regionã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':200990).
lisp_trans(<=>(equal(uWhereFn(THING,TIME),REGION),holdsDuring(TIME,exactlyLocated(THING,REGION))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201172).
lisp_trans(rtBinaryPredicate(possesses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201276).
lisp_trans(rtAsymmetricRelation(possesses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201313).
lisp_trans(argIsa(possesses,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201353).
lisp_trans(argIsa(possesses,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201380).
lisp_trans(documentation(possesses,vEnglishLanguage,'Relation that holds between an #$Agent and an #$Object when the #$Agent has ownership of the #$Object.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201408).
lisp_trans(documentation(possesses,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","±","\236\","äº","\216\","ä","¸","\200\","ä","¸","ª","#$Agent","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$Object","ç","\232\","\204\","#$Relationï","¼","\214\","å","½","\223\","è","¿","\231\","ä","¸","ª","#$Agent","æ","\213\","¥","æ","\234\","\211\","è","¿","\231\","ä","¸","ª","#$Object","æ","\227\","¶","ï","¼","\214\","è","¿","\231\","æ","®","µå","\205\","³","ç","³","»","å","°","±","æ","\210\","\220\","ç","«","\213\","äº","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201557).
lisp_trans(=>(possesses(PERSON,OBJ),modalAttribute(uses(OBJ,PERSON),cwPermission)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201747).
lisp_trans(=>(and(timeTimePosition(TIME),holdsDuring(TIME,possesses(AGENT1,OBJ)),holdsDuring(TIME,possesses(AGENT2,OBJ))),equal(AGENT1,AGENT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':201832).
lisp_trans(rtUnaryFunction(uPropertyFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202012).
lisp_trans(rtTotalValuedRelation(uPropertyFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202048).
lisp_trans(argIsa(uPropertyFn,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202090).
lisp_trans(resultIsa(uPropertyFn,tSumoSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202118).
lisp_trans(documentation(uPropertyFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Agent","to","the","#$Set","of","#$Objects","owned","by","the","#$Agent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202141).
lisp_trans(documentation(uPropertyFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Agent","å","\222\","\214\","å","±","\236\","äº","\216\","#$Agent","ç","\232\","\204\","#$Object","#$Set","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202273).
lisp_trans(<=>(isa(OBJ,uPropertyFn(PERSON)),possesses(PERSON,OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202423).
lisp_trans(rtBinaryPredicate(precondition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202498).
lisp_trans(rtAsymmetricRelation(precondition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202538).
lisp_trans(rtTransitiveRelation(precondition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202581).
lisp_trans(argGenl(precondition,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202624).
lisp_trans(argGenl(precondition,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202664).
lisp_trans(documentation(precondition,vEnglishLanguage,s("A","very","general","#$Predicate",".","(","#$precondition","?","PROC1","?","PROC2",")","means","that","an","instance","of","?","PROC2","can","exist","only","if","an","instance","of","?","PROC1","also","exists",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202704).
lisp_trans(documentation(precondition,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateã","\200\","\202\","(","#$precondition","?","PROC1","?","PROC2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROC2","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\217\","ªè","\203\","½","å","\234\","¨","?","PROC1","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ä","¹","\237\","å","­","\230\","å","\234\","¨","ç","\232\","\204\","æ","\227\","¶","å","\200\","\231\","æ","\211\","\215\","è","\203\","½","å","­","\230\","å","\234\","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':202897).
lisp_trans(=>(precondition(PROC1,PROC2),=>(exists([INST2],isa(INST2,PROC2)),exists([INST1],isa(INST1,PROC1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203108).
lisp_trans(rtBinaryPredicate(hindersSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203252).
lisp_trans(rtIrreflexiveRelation(hindersSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203295).
lisp_trans(rtPartialValuedRelation(hindersSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203342).
lisp_trans(argGenl(hindersSubclass,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203391).
lisp_trans(argGenl(hindersSubclass,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203434).
lisp_trans(documentation(hindersSubclass,vEnglishLanguage,s("A","very","general","#$Predicate",".","(","#$hindersSubclass","?","PROC1","?","PROC2",")","means","that","the","#$Process","?","PROC1","hindersSubclass","or","hinders","the","occurrence","of","the","#$Process","?","PROC2",".","For","example",",","obstructing","an","object","hindersSubclass","moving","it",".","Note","that","this","is","a","relation","between","types","of","#$Processes",",","not","between","instances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203477).
lisp_trans(documentation(hindersSubclass,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateï","¼","\214\","(","#$hindersSubclass","?","PROC1","?","PROC2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","ç","±","»","?","PROC1","#$hindersSubclass","æ","\210\","\226\","æ","\230\","¯","é","\230\","»","ç","¢","\215\","#$Process","ç","±","»","?","PROC2","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","é","\230\","»","æ","\214\","¡","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","#$hindersSubclass","ç","§","»","å","\212\","¨","å","®","\203\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","#$Process","ç","±","»","å","\210\","«","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","#$Process","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':203836).
lisp_trans(=>(hindersSubclass(PROC1,PROC2),all([TIME,PLACE],decreasesLikelihood(holdsDuring(TIME,exists([INST1],and(isa(INST1,PROC1),eventLocated(INST1,PLACE)))),holdsDuring(TIME,exists([INST2],and(isa(INST2,PROC2),eventLocated(INST2,PLACE))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204216).
lisp_trans(rtBinaryPredicate(preventsSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204600).
lisp_trans(rtIrreflexiveRelation(preventsSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204644).
lisp_trans(rtPartialValuedRelation(preventsSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204692).
lisp_trans(argGenl(preventsSubclass,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204742).
lisp_trans(argGenl(preventsSubclass,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204786).
lisp_trans(relatedInternalConcept(preventsSubclass,hindersSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204830).
lisp_trans(documentation(preventsSubclass,vEnglishLanguage,s("A","very","general","#$Predicate",".","(","preventsSubclass","?","PROC1","?","PROC2",")","means","that","?","PROC1","preventsSubclass","the","occurrence","of","?","PROC2",".","In","other","words",",","if","?","PROC1","is","occurring","in","a","particular","time","and","place",",","?","PROC2","cannot","occur","at","the","same","time","and","place",".","For","example",",","innoculating","preventsSubclass","contracting","disease",".","Note","that","this","is","a","relation","between","types","of","#$Processes",",","not","between","instances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':204888).
lisp_trans(documentation(preventsSubclass,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateï","¼","\214\","(","preventsSubclass","?","PROC1","?","PROC2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROC1","ç","±","»","#$preventsSubclass","?","PROC2","ç","±","»","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","æ","\215\","¢","å","\217\","¥","è","¯","\235\","è","¯","´","ï","¼","\214\","å","¦","\202\","æ","\236\","\234\","?","PROC1","å","\234\","¨","æ","\237\","\220\","ä","¸","ªç","\211\","¹","å","®","\232\","ç","\232\","\204\","æ","\227\","¶","ç","©","ºå","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","?","PROC2","å","°","±","ä","¸","\215\","å","\217\","¯","è","\203\","½","å","\234\","¨","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","æ","\227\","¶","ç","©","ºå","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","æ","³","¨","å","°","\204\","ç","\226\","«","è","\213\","\227\","#$preventsSubclass","æ","\204\","\237\","æ","\237\","\223\","ç","\226\","¾","ç","\227\","\205\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","#$Process","ç","±","»","å","\210\","«","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","#$Process","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':205330).
lisp_trans(=>(preventsSubclass(PROC1,PROC2),all([TIME,PLACE],=>(holdsDuring(TIME,exists([INST1],and(isa(INST1,PROC1),eventLocated(INST1,PLACE)))),not(holdsDuring(TIME,exists([INST2],and(isa(INST2,PROC2),eventLocated(INST2,PLACE)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':205788).
lisp_trans(rtBinaryPredicate(prevents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206178).
lisp_trans(rtIrreflexiveRelation(prevents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206214).
lisp_trans(rtPartialValuedRelation(prevents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206254).
lisp_trans(argIsa(prevents,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206296).
lisp_trans(argGenl(prevents,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206324).
lisp_trans(relatedInternalConcept(prevents,preventsSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206360).
lisp_trans(relatedInternalConcept(prevents,hinders),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206411).
lisp_trans(documentation(prevents,vEnglishLanguage,s("A","very","general","#$Predicate",".","(","prevents","?","PROC1","?","PROC2",")","means","that","an","instance","of","?","PROC1","prevents","the","occurrence","of","?","PROC2",".","Note","the","difference","between","this","relation","and","#$preventsSubclass",",","which","is","relating","classes","and","not","instance","-","class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206453).
lisp_trans(documentation(prevents,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateï","¼","\214\","(","prevents","?","PROC1","?","PROC2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROC1","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","é","\230\","»","æ","­","¢","?","PROC2","ç","±","»","ç","\232\","\204\","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","å","\222\","\214\","#$preventsSubclass","ç","\232\","\204\","å","\214\","ºå","\210\","«","å","\234\","¨","äº","\216\","ï","¼","\214\","å","\220\","\216\","è","\200\","\205\","æ","\230\","¯","è","\201\","\224\","ç","³","»","ç","±","»","å","\210\","«","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","å","®","\236\","ä","¾","\213\","-","ç","±","»","å","\210\","«","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':206734).
lisp_trans(=>(and(prevents(X,P),equal(uWhenFn(X),T),eventLocated(X,L)),not(holdsDuring(T,exists([Y],and(isa(Y,P),eventLocated(Y,L)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207019).
lisp_trans(rtBinaryPredicate(hinders),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207227).
lisp_trans(rtIrreflexiveRelation(hinders),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207262).
lisp_trans(rtPartialValuedRelation(hinders),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207301).
lisp_trans(argIsa(hinders,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207342).
lisp_trans(argGenl(hinders,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207369).
lisp_trans(relatedInternalConcept(hinders,hindersSubclass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207404).
lisp_trans(documentation(hinders,vEnglishLanguage,s("A","genral","#$Predicate",",","where","(","hinders","?","PROC1","?","PROC2",")","means","that","an","instance","of","?","PROC1","#$decreasesLikelihood","of","occurrence","of","?","PROC2",".","Compare","with","#$prevents","which","is","stronger","and","#$hindersSubclass","which","relates","classes","of","#$Processes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207453).
lisp_trans(documentation(hinders,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateï","¼","\214\","(","hinders","?","PROC1","?","PROC2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROC1","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","#$decreasesLikelihood","?","PROC2","ç","±","»","ç","\232\","\204\","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","è","¿","\231\","ä","¸","ªæ","¯","\224\","#$prevents","è","¦","\201\","å","¼","±","ï","¼","\214\","è","\200\","\214\","#$hindersSubclass","å","\210\","\231\","æ","\230\","¯","è","\201\","\224\","ç","³","»","#$Process","ç","±","»","å","\210\","«","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':207729).
lisp_trans(=>(hinders(X,PROC),decreasesLikelihood(and(equal(uWhenFn(X),T),eventLocated(X,L)),holdsDuring(T,exists([Y],and(isa(Y,PROC),eventLocated(Y,L)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208012).
lisp_trans(rtBinaryPredicate(refers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208245).
lisp_trans(argIsa(refers,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208279).
lisp_trans(argIsa(refers,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208304).
lisp_trans(documentation(refers,vEnglishLanguage,s("(","#$refers","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","mentions","or","includes","a","reference","to","?","OBJ2",".","Note","that","#$refers","is","more","general","in","meaning","than","#$represents",",","because","presumably","something","can","represent","something","else","only","if","it","refers","to","this","other","thing",".","For","example",",","an","article","whose","topic","is","a","recent","change","in","the","price","of","oil","may","refer","to","many","other","things",",","e",".","g",".","the","general","state","of","the","economy",",","the","weather","in","California",",","the","prospect","of","global","warming",",","the","options","for","alternative","energy","sources",",","the","stock","prices","of","various","oil","companies",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208329).
lisp_trans(documentation(refers,xtChineseLanguage,s("(","#$refers","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","æ","\217\","\220\","å","\210\","°","æ","\210\","\226\","å","¼","\225\","ç","\224\","¨","?","OBJ2ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$refers","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","¯","\224\","#$represents","æ","\233\","´","æ","¦","\202\","æ","\213\","¬","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","¤","§","æ","¦","\202\","å","\217\","¯","ä","»","¥","è","¯","´","ï","¼","\214\","å","\217\","ªæ","\234\","\211\","å","½","\223\","ä","¸","\200\","æ","\240\","·","ä","¸","\234\","è","¥","¿","å","\234\","¨","å","¼","\225\","ç","\224\","¨","å","\217\","¦","ä","¸","\200\","æ","\240\","·","ä","¸","\234\","è","¥","¿","æ","\227\","¶","æ","\211\","\215\","è","\203\","½","æ","\217\","\217\","è","¿","°","è","¿","\231\","ä","»","¶","ä","¸","\234\","è","¥","¿","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¸","\200\","ç","¯","\207\","ä","¸","»","é","¢","\230\","ä","¸","ºæ","²","¹","ä","»","·","æ","\234\","\200\","è","¿","\221\","ç","\232\","\204\","å","\217\","\230\","å","\214\","\226\","ç","\232\","\204\","æ","\226\","\207\","ç","«","\240\","å","\217\","¯","ä","»","¥","æ","\217\","\220\","å","\210\","°","è","®","¸","å","¤","\232\","å","\205\","¶","å","®","\203\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","ï","¼","\214\","å","¦","\202\","ï","¼","\232\","æ","\200\","»","ä","½","\223\","ç","»","\217\","æµ","\216\","ç","\212\","¶","å","\206\","µã","\200\","\201\","å","\212\","\240\","å","\210\","©","ç","¦","\217\","å","°","¼","äº","\232\","ç","\232\","\204\","å","¤","©","æ","°","\224\","ã","\200\","\201\","å","\205\","¨","ç","\220\","\203\","å","\217\","\230\","æ","\232\","\226\","ç","\232\","\204\","å","\211\","\215\","æ","\231\","¯","ã","\200\","\201\","æ","\233\","¿","ä","»","£","è","\203\","½","æº","\220\","ç","\232\","\204\","é","\200\","\211\","æ","\213\","©","å","\222\","\214\","å","\220\","\204\","å","®","¶","ç","\237\","³","æ","²","¹","å","\205\","¬","å","\217\","¸","è","\202\","¡","ç","¥","¨","ç","\232\","\204\","ä","»","·","æ","\240\","¼","ï","¼","\214\","ç","­","\211\","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':208912).
lisp_trans(genlPreds(names,refers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':209412).
lisp_trans(argIsa(names,1,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':209439).
lisp_trans(documentation(names,vEnglishLanguage,s("(","#$names","?","STRING","?","ENTITY",")","means","that","the","thing","?","ENTITY","has","the","#$SymbolicString","?","STRING","as","its","name",".","Note","that","#$names","and","#$represents","are","the","two","immediate","#$subrelations","of","#$refers",".","The","predicate","#$names","is","used","when","the","referring","item","is","merely","a","tag","without","connotative","content",",","while","the","predicate","#$represents","is","used","for","referring","items","that","have","such","content",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':209471).
lisp_trans(documentation(names,xtChineseLanguage,s("(","#$names","?","STRING","?","ENTITY",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\211\","©","ä","½","\223\","?","ENTITY","ç","\232\","\204\","å","\220\","\215\","å","­","\227\","æ","\230\","¯","#$SymbolicString","?","STRINGã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$names","å","\222\","\214\","#$represents","æ","\230\","¯","#$refers","ç","\232\","\204\","ä","¸","¤","ä","¸","ªç","\233\","´","æ","\216\","¥","ç","\232\","\204\","#$subrelationã","\200\","\202\","å","¼","\225\","ç","\224\","¨","å","\205\","\211\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\240\","\207\","ç","­","¾","ï","¼","\214\","è","\200\","\214\","æ","²","¡","æ","\234\","\211\","å","\220\","«","ä","¹","\211\","å","\206\","\205\","å","®","¹","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","æ","\227\","¶","ï","¼","\214\","ç","\224\","¨","è","°","\223\","è","¯","\215\","#$namesï","¼","\214\","æ","\234\","\211\","å","\206\","\205\","å","®","¹","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","æ","\227\","¶","ç","\224\","¨","è","°","\223\","è","¯","\215\","#$representsã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':209884).
lisp_trans(genlPreds(uniqueIdentifier,names),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210231).
lisp_trans(rtSingleValuedRelation(uniqueIdentifier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210268).
lisp_trans(rtPartialValuedRelation(uniqueIdentifier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210317).
lisp_trans(documentation(uniqueIdentifier,vEnglishLanguage,s("The","class","of","#$names","that","uniquely","identify","an","instance","of","#$Entity",".","Some","examples","of","#$uniqueIdentifiers","are","the","keys","of","tables","in","database","applications","and","the","ISBN","(","International","Standard","Book","Number",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210367).
lisp_trans(documentation(uniqueIdentifier,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\223\","é","\227\","¨","è","¯","\206\","å","\210\","«","#$Entity","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$names","ç","±","»","å","\210\","«","ï","¼","\214\","#$uniqueIdentifier","ç","\232\","\204\","ä","¸","\200\","äº","\233\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","æ","\225\","°","æ","\215\","®","åº","\223\","åº","\224\","ç","\224\","¨","ç","¨","\213\","åº","\217\","æ","\225\","°","æ","\215\","®","åº","\223\","è","¡","¨","ç","\232\","\204\","ç","´","¢","å","¼","\225\","ï","¼","\214\","å","\222\","\214\","ISBN","(","å","\233\","½","é","\231\","\205\","æ","\240\","\207\","å","\207\","\206\","ä","¹","¦","å","\217\","·",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210625).
lisp_trans(genlPreds(represents,refers),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210857).
lisp_trans(documentation(represents,vEnglishLanguage,s("A","very","general","semiotics","#$Predicate",".","(","#$represents","?","THING","?","ENTITY",")","means","that","?","THING","in","some","way","indicates",",","expresses",",","connotes",",","pictures",",","describes",",","etc",".","?","ENTITY",".","The","#$Predicates","#$containsInformation","and","#$realization","are","subrelations","of","#$represents",".","Note","that","#$represents","is","a","subrelation","of","#$refers",",","since","something","can","represent","something","else","only","if","it","refers","to","this","other","thing",".","See","the","documentation","string","for","#$names",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':210889).
lisp_trans(documentation(represents,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","ç","¬","¦","å","\217\","·","#$Predicateï","¼","\214\","(","#$represents","?","THING","?","ENTITY",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","THING","å","\234\","¨","æ","\237\","\220\","äº","\233\","æ","\226\","¹","é","\235\","¢","è","¡","¨","ç","¤","ºã","\200\","\201\","è","¡","¨","æ","\204\","\217\","å","\221\","³","ã","\200\","\201\","æ","\203\","³","è","±","¡","å","\222\","\214\","å","½","¢","å","®","¹","?","ENTITYç","­","\211\","ç","­","\211\","ã","\200\","\202\","#$Predicate","#$containsInformation","å","\222\","\214\","#$realization","æ","\230\","¯","#$represents","ç","\232\","\204\","å","­","\220\","å","\205\","³","ç","³","»","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$represents","æ","\230\","¯","#$refers","ç","\232\","\204\","å","­","\220\","å","\205\","³","ç","³","»","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","\217\","ªæ","\234\","\211\","å","½","\223\","ä","¸","\200\","æ","\240\","·","ä","¸","\234\","è","¥","¿","å","\234\","¨","å","¼","\225\","ç","\224\","¨","å","\217\","¦","ä","¸","\200\","æ","\240\","·","ä","¸","\234\","è","¥","¿","æ","\227\","¶","ï","¼","\214\","æ","\211\","\215\","è","\203\","½","æ","\217\","\217\","è","¿","°","è","¿","\231\","ä","»","¶","ä","¸","\234\","è","¥","¿","ã","\200\","\202\","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$names","ç","\232\","\204\","æ","\226\","\207\","æ","¡","£","å","­","\227\","ç","¬","¦","ä","¸","²","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':211371).
lisp_trans(rtTernaryPredicate(representsForAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':211845).
lisp_trans(argIsa(representsForAgent,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':211892).
lisp_trans(argIsa(representsForAgent,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':211929).
lisp_trans(argIsa(representsForAgent,3,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':211966).
lisp_trans(documentation(representsForAgent,vEnglishLanguage,s("A","very","general","predicate",".","(","#$representsForAgent","?","ENTITY1","?","ENTITY2","?","AGENT",")","means","that","the","?","AGENT","chooses","to","use","?","ENTITY1","to","'","stand","for","'","?","ENTITY2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212002).
lisp_trans(documentation(representsForAgent,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","è","°","\223\","è","¯","\215\","ï","¼","\214\","(","#$representsForAgent","?","ENTITY1","?","ENTITY2","?","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","é","\200\","\211\","æ","\213\","©","ç","\224\","¨","?","ENTITY1","æ","\235\","¥","'","ä","»","£","è","¡","¨","'","?","ENTITY2ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212200).
lisp_trans(=>(representsForAgent(REP,ENTITY,AGENT),represents(REP,ENTITY)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212404).
lisp_trans(rtTernaryPredicate(representsInLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212483).
lisp_trans(argIsa(representsInLanguage,1,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212532).
lisp_trans(argIsa(representsInLanguage,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212585).
lisp_trans(argIsa(representsInLanguage,3,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212624).
lisp_trans(documentation(representsInLanguage,vEnglishLanguage,s("A","very","general","predicate",".","(","#$representsInLanguage","?","THING","?","ENTITY","?","LANGUAGE",")","means","that","the","#$LinguisticExpression","?","THING","stands","for","?","ENTITY","in","the","#$Language","?","LANGUAGE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212665).
lisp_trans(documentation(representsInLanguage,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\215\","\201\","å","\210\","\206\","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","è","°","\223\","è","¯","\215\","ï","¼","\214\","(","#$representsInLanguage","?","THING","?","ENTITY","?","LANGUAGE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$LinguisticExpression","?","THING","å","\234\","¨","#$Language","?","LANGUAGE","ä","»","£","è","¡","¨","?","ENTITYã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':212889).
lisp_trans(=>(representsInLanguage(REP,ENTITY,LANGUAGE),exists([AGENT],representsForAgent(REP,ENTITY,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':213118).
lisp_trans(rtEquivalenceRelation(equivalentContentClass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':213241).
lisp_trans(argGenl(equivalentContentClass,1,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':213295).
lisp_trans(argGenl(equivalentContentClass,2,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':213360).
lisp_trans(documentation(equivalentContentClass,vEnglishLanguage,s("A","#$BinaryPredicate","that","relates","two","subclasses","of","#$ContentBearingPhysical",".","(","#$equivalentContentClass","?","CLASS1","?","CLASS2",")","means","that","the","content","expressed","by","each","instance","of","?","CLASS1","is","also","expressed","by","each","instance","of","?","CLASS2",",","and","vice","versa",".","An","example","would","be","the","relationship","between","English","and","Russian","editions","of","Agatha","Christie","'s","'","Murder","on","the","Orient","Express","'",".","Note","that","(","#$equivalentContentClass","?","CLASS1","?","CLASS2",")","implies","(","#$subsumesContentClass","?","CLASS1","?","CLASS2",")","and","(","#$subsumesContentClass","?","CLASS2","?","CLASS1",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':213425).
lisp_trans(documentation(equivalentContentClass,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ª","#$ContentBearingPhysical","å","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","#$BinaryPredicateï","¼","\214\","(","#$equivalentContentClass","?","CLASS1","?","CLASS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\224\","±","?","CLASS1","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\206\","\205\","å","®","¹","ï","¼","\214\","ä","¹","\237\","ç","\224\","±","?","CLASS2","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","è","¡","¨","è","¾","¾","ï","¼","\214\","å","\217\","\215\","ä","¹","\213\","äº","¦","ç","\204\","¶","ã","\200\","\202\","é","\230\","¿","å","\212\","\240\","è","\216\","\216\","Â","·","å","\205\","\213\","é","\207\","\214\","æ","\226\","¯","è","\222\","\202\","ç","\232\","\204\","è","\221\","\227\","ä","½","\234\","â","\200\","\234\","ä","¸","\234\","æ","\226\","¹","å","¿","«","è","½","¦","è","°","\213\","æ","\235\","\200\","æ","¡","\210\","â","\200\","\235\","ç","\232\","\204\","è","\213\","±","è","¯","­","å","\222\","\214\","ä","¿","\204\","è","¯","­","ç","\211\","\210\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","å","°","±","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","(","#$equivalentContentClass","?","CLASS1","?","CLASS2",")","æ","\232\","\227\","ç","¤","º","(","#$subsumesContentClass","?","CLASS1","?","CLASS2",")","å","\222\","\214\","(","#$subsumesContentClass","?","CLASS2","?","CLASS1",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214005).
lisp_trans(<=>(and(subsumesContentClass(CLASS1,CLASS2),subsumesContentClass(CLASS2,CLASS1)),equivalentContentClass(CLASS1,CLASS2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214574).
lisp_trans(rtBinaryPredicate(subsumesContentClass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214724).
lisp_trans(rtPartialOrderingRelation(subsumesContentClass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214772).
lisp_trans(argGenl(subsumesContentClass,1,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214828).
lisp_trans(argGenl(subsumesContentClass,2,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214891).
lisp_trans(documentation(subsumesContentClass,vEnglishLanguage,s("A","#$BinaryPredicate","that","relates","two","subclasses","of","#$ContentBearingPhysical",".","(","#$subsumesContentClass","?","CLASS1","?","CLASS2",")","means","that","the","content","expressed","by","each","instance","of","?","CLASS2","is","also","expressed","by","each","instance","of","?","CLASS1",".","Examples","include","the","relationship","between","a","poem","and","one","of","its","stanzas","or","between","a","book","and","one","of","its","chapters",".","Note","that","this","is","a","relation","between","subclasses","of","#$ContentBearingObject",",","rather","than","instances",".","If","one","wants","to","relate","instances",",","the","#$Predicate","#$subsumesContentInstance","can","be","used",".","Note","that","#$subsumesContentClass","is","needed","in","many","cases",".","Consider",",","for","example",",","the","relation","between","the","King","James","edition","of","the","Bible","and","its","Book","of","Genesis",".","This","relation","holds","for","every","copy","of","this","edition","and","not","just","for","a","single","instance",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':214954).
lisp_trans(documentation(subsumesContentClass,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ª","#$ContentBearingPhysical","å","­","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","#$BinaryPredicateï","¼","\214\","(","#$subsumesContentClass","?","CLASS1","?","CLASS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\224\","±","?","CLASS1","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\206\","\205\","å","®","¹","ï","¼","\214\","ä","¹","\237\","ç","\224\","±","?","CLASS2","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","è","¡","¨","è","¾","¾","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¸","\200\","é","¦","\226\","è","¯","\227\","å","\222\","\214\","è","¿","\231\","é","¦","\226\","è","¯","\227\","ç","\232\","\204\","ä","¸","\200\","è","\212\","\202\","æ","\210\","\226\","ä","¸","\200\","æ","\234\","¬","ä","¹","¦","å","\222\","\214\","è","¿","\231\","æ","\234\","¬","ä","¹","¦","ç","\232\","\204\","ä","¸","\200\","ç","«","\240\","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","#$ContentBearingObject","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\","å","¦","\202\","æ","\236\","\234\","è","¦","\201\","è","\201\","\224\","ç","³","»","å","®","\236\","ä","¾","\213\","æ","\227\","¶","ï","¼","\214\","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$Predicate","#$subsumesContentInstanceã","\200\","\202\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","æ","\210\","\221\","ä","»","¬","å","\234\","¨","å","¾","\210\","å","¤","\232\","æ","\203\","\205\","å","\206\","µä","¸","\213\","é","\203\","½","é","\234\","\200\","è","¦","\201\","ç","\224\","¨","#$subsumesContentClass","is","needed","in","many","cases",".","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","\234\","£","ç","»","\217\","ç","\232\","\204\","å","\233\","½","ç","\216\","\213\","è","©","¹","å","§","\206\","æ","\226\","¯","ç","\211\","\210\","æ","\234\","¬","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","å","\210\","\233\","ä","¸","\226\","è","®","°","ä","¹","¦","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","é","\200\","\202\","ç","\224\","¨","äº","\216\","æ","­","¤","ç","\211\","\210\","æ","\234\","¬","ç","\232\","\204\","æ","¯","\217\","ä","¸","ªå","\211\","¯","æ","\234\","¬","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","ä","»","\205\","ä","»","\205\","æ","\230\","¯","å","\215\","\225\","ä","¸","\200\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':215794).
lisp_trans(=>(subsumesContentClass(CLASS1,CLASS2),all([OBJ2,INFO],=>(and(isa(OBJ2,CLASS2),containsInformation(OBJ2,INFO)),exists([OBJ1],and(isa(OBJ1,CLASS1),containsInformation(OBJ1,INFO)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':216601).
lisp_trans(genlPreds(equivalentContentInstance,subsumesContentInstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':216885).
lisp_trans(rtEquivalenceRelation(equivalentContentInstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':216949).
lisp_trans(argIsa(equivalentContentInstance,1,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':217006).
lisp_trans(argIsa(equivalentContentInstance,2,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':217066).
lisp_trans(relatedInternalConcept(equivalentContentInstance,equivalentContentClass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':217126).
lisp_trans(documentation(equivalentContentInstance,vEnglishLanguage,s("A","#$BinaryPredicate","relating","two","instances","of","#$ContentBearingPhysical",".","(","#$equivalentContentInstance","?","OBJ1","?","OBJ2",")","means","that","the","content","expressed","by","?","OBJ1","is","identical","to","the","content","expressed","by","?","OBJ2",".","An","example","would","be","the","relationship","between","a","handwritten","draft","of","a","letter","to","one","'s","lawyer","and","a","typed","copy","of","the","same","letter",".","Note","that","(","#$equivalentContentInstance","?","OBJ1","?","OBJ2",")","implies","(","#$subsumesContentInstance","?","OBJ1","?","OBJ2",")","and","(","#$subsumesContentInstance","?","OBJ2","?","OBJ2",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':217200).
lisp_trans(documentation(equivalentContentInstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ª","#$ContentBearingPhysical","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$BinaryPredicateï","¼","\214\","(","#$equivalentContentInstance","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ç","\224\","±","?","OBJ1","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\206\","\205\","å","®","¹","å","\222\","\214\","ç","\224\","±","?","OBJ2","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\206\","\205\","å","®","¹","æ","\230\","¯","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ã","\200\","\202\","ä","¸","\200\","å","°","\201\","ç","»","\231\","å","¾","\213\","å","¸","\210\","ç","\232\","\204\","ä","¿","¡","ç","\232\","\204\","æ","\211\","\213\","ç","¨","¿","å","\222\","\214\","å","\220\","\214\","ä","¸","\200\","å","°","\201\","ä","¿","¡","ç","\232\","\204\","æ","\211\","\223\","å","­","\227\","æ","\234\","¬","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ä","¾","¿","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","(","#$equivalentContentInstance","?","OBJ1","?","OBJ2",")","æ","\232\","\227\","ç","¤","º","(","#$subsumesContentInstance","?","OBJ1","?","OBJ2",")","å","\222\","\214\","(","#$subsumesContentInstance","?","OBJ2","?","OBJ2",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':217742).
lisp_trans(<=>(and(subsumesContentInstance(OBJ1,OBJ2),subsumesContentInstance(OBJ2,OBJ1)),equivalentContentInstance(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218246).
lisp_trans(rtBinaryPredicate(subsumesContentInstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218393).
lisp_trans(rtPartialOrderingRelation(subsumesContentInstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218444).
lisp_trans(argIsa(subsumesContentInstance,1,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218503).
lisp_trans(argIsa(subsumesContentInstance,2,tSumoContentBearingPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218561).
lisp_trans(relatedInternalConcept(subsumesContentInstance,subsumesContentClass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218619).
lisp_trans(documentation(subsumesContentInstance,vEnglishLanguage,s("A","#$BinaryPredicate","relating","two","instances","of","#$ContentBearingPhysical",".","(","#$subsumesContentInstance","?","OBJ1","?","OBJ2",")","means","that","the","content","expressed","by","?","OBJ2","is","part","of","the","content","expressed","by","?","OBJ1",".","An","example","is","the","relationship","between","a","handwritten","poem","and","one","of","its","stanzas",".","Note","that","this","is","a","relation","between","instances",",","rather","than","#$Classes",".","If","one","wants","to","assert","a","content","relationship","between","#$Classes",",","e",".","g",".","between","the","version","of","an","intellectual","work","and","a","part","of","that","work",",","the","relation","#$subsumesContentClass","should","be","used",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':218689).
lisp_trans(documentation(subsumesContentInstance,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ª","#$ContentBearingPhysical","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$BinaryPredicateï","¼","\214\","(","#$subsumesContentInstance","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ2","æ","\211\","\200\","è","¡","¨","è","¾","¾","ç","\232\","\204\","å","\206\","\205\","å","®","¹","æ","\230\","¯","?","OBJ1æ","\211\","\200\","è","¡","¨","è","¾","¾","å","\206\","\205\","å","®","¹","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","ä","¸","\200\","é","¦","\226\","æ","\211\","\213\","å","\206\","\231\","ç","\232\","\204\","è","¯","\227\","å","\222\","\214\","è","¿","\231\","é","¦","\226\","è","¯","\227\","ç","\232\","\204\","ä","¸","\200\","è","\212\","\202\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","ª","å","®","\236\","ä","¾","\213\","å","\222\","\214\","å","®","\236\","ä","¾","\213\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","è","\200\","\214\","é","\235\","\236\","#$Class","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\","å","¦","\202\","æ","\236\","\234\","è","¦","\201\","è","¡","¨","è","¾","¾","#$Class","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ä","¸","\200\","ä","»","½","å","\220\","«","ç","\237\","¥","è","¯","\206\","ç","\211\","\210\","æ","\235\","\203\","ç","\232\","\204\","ä","½","\234\","å","\223\","\201\","å","\222\","\214\","è","¿","\231\","ä","¸","ª","ä","½","\234\","å","\223\","\201\","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","å","\233\","\240\","è","¯","¥","ç","\224\","¨","#$subsumesContentClass","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':219292).
lisp_trans(=>(subsumesContentInstance(OBJ1,OBJ2),all([INFO],=>(containsInformation(OBJ2,INFO),containsInformation(OBJ1,INFO)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':219842).
lisp_trans(genlPreds(realization,represents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220006).
lisp_trans(rtAsymmetricRelation(realization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220043).
lisp_trans(argIsa(realization,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220085).
lisp_trans(argIsa(realization,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220116).
lisp_trans(relatedInternalConcept(realization,equivalentContentInstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220151).
lisp_trans(relatedInternalConcept(realization,containsInformation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220214).
lisp_trans(documentation(realization,vEnglishLanguage,s("A","subrelation","of","#$represents",".","(","#$realization","?","PROCESS","?","PROP",")","means","that","?","PROCESS","is","a","Process","which","expresses","the","content","of","?","PROP",".","Examples","include","a","particular","musical","performance",",","which","realizes","the","content","of","a","musical","score",",","or","the","reading","of","a","poem",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220271).
lisp_trans(documentation(realization,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$represents","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","­","\220\","å","\205\","³","ç","³","»","ï","¼","\214\","(","#$realization","?","PROCESS","?","PROP",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROCESS","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","¡","¨","è","¾","¾","?","PROP","å","\206\","\205\","å","®","¹","ç","\232\","\204\","è","¿","\207\","ç","¨","\213\","ã","\200\","\202\","ä","¾","\213\","å","­","\220\","å","\214\","\205\","æ","\213\","¬","ï","¼","\232\","ä","¸","\200\","ä","¸","ªæ","¼","\224\","ç","»","\216\","ä","¸","\200\","å","\210\","\206\","ä","¹","\220\","è","°","±","å","\206\","\205\","å","®","¹","ç","\232\","\204\","ç","\211\","¹","å","®","\232\","é","\237\","³","ä","¹","\220\","è","¡","¨","æ","¼","\224\","ï","¼","\214\","æ","\210\","\226\","æ","\230\","¯","è","®","\200\","ä","¸","\200\","é","¦","\226\","è","¯","\227\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220574).
lisp_trans(=>(realization(PROCESS,PROP),exists([OBJ],and(tSumoContentBearingObject(OBJ),containsInformation(OBJ,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':220848).
lisp_trans(rtBinaryPredicate(expressedInLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221005).
lisp_trans(rtAsymmetricRelation(expressedInLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221052).
lisp_trans(argIsa(expressedInLanguage,1,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221102).
lisp_trans(argIsa(expressedInLanguage,2,tLanguage),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221154).
lisp_trans(documentation(expressedInLanguage,vEnglishLanguage,s("(","#$expressedInLanguage","?","EXPRESS","?","LANG",")","means","that","the","#$LinguisticExpression","?","EXPRESS","is","part","of","the","#$Language","?","LANG",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221194).
lisp_trans(documentation(expressedInLanguage,xtChineseLanguage,s("(","#$expressedInLanguage","?","EXPRESS","?","LANG",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$LinguisticExpression","?","EXPRESS","æ","\230\","¯","#$Language","?","LANG","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221367).
lisp_trans(<=>(expressedInLanguage(EXPRESS,LANGUAGE),exists([PROP],representsInLanguage(EXPRESS,PROP,LANGUAGE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221543).
lisp_trans(rtBinaryPredicate(subProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221664).
lisp_trans(rtTransitiveRelation(subProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221706).
lisp_trans(rtIrreflexiveRelation(subProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221751).
lisp_trans(rtPartialValuedRelation(subProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221797).
lisp_trans(argIsa(subProposition,1,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221845).
lisp_trans(argIsa(subProposition,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221883).
lisp_trans(documentation(subProposition,vEnglishLanguage,s("(","#$subProposition","?","PROP1","?","PROP2",")","means","that","?","PROP1","is","a","#$Proposition","which","is","a","proper","part","of","the","#$Proposition","?","PROP2",".","In","other","words",",","#$subProposition","is","the","analogue","of","#$properPart","for","chunks","of","abstract","content",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':221921).
lisp_trans(documentation(subProposition,xtChineseLanguage,s("(","#$subProposition","?","PROP1","?","PROP2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PROP1","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Propositionï","¼","\214\","å","®","\203\","æ","\230\","¯","#$Proposition","?","PROP2","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªç","\234\","\237\","æ","­","£","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","æ","\215\","¢","å","\217\","¥","è","¯","\235\","è","¯","´","#$subProposition","æ","\230\","¯","ä","¸","\200\","å","\240\","\206\","æ","\212\","½","è","±","¡","å","\206\","\205\","å","®","¹","ç","\232\","\204\","#$properPart","ç","\232\","\204\","ç","±","»","ä","¼","¼","ç","\211\","©","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222189).
lisp_trans(=>(subProposition(PROP1,PROP2),all([OBJ1,OBJ2],=>(and(containsInformation(OBJ1,PROP1),containsInformation(OBJ2,PROP2)),subsumesContentInstance(OBJ2,OBJ1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222454).
lisp_trans(genlPreds(subPlan,subProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222687).
lisp_trans(rtTransitiveRelation(subPlan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222724).
lisp_trans(rtIrreflexiveRelation(subPlan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222762).
lisp_trans(rtPartialValuedRelation(subPlan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222801).
lisp_trans(argIsa(subPlan,1,cwPlan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222842).
lisp_trans(argIsa(subPlan,2,cwPlan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222866).
lisp_trans(documentation(subPlan,vEnglishLanguage,s("(","#$subPlan","?","PLAN1","?","PLAN2",")","means","that","?","PLAN1","is","a","#$Plan","which","is","a","proper","part","of","?","PLAN2",".","This","relation","is","generally","used","to","relate","a","supporting","#$Plan","to","the","overall","#$Plan","in","a","particular","context",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':222890).
lisp_trans(documentation(subPlan,xtChineseLanguage,s("(","#$subPlan","?","PLAN1","?","PLAN2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PLAN1","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Planï","¼","\214\","å","®","\203\","æ","\230\","¯","?","PLAN2","ç","\232\","\204\","ç","\234\","\237\","æ","­","£","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","ä","¸","\200\","è","\210\","¬","ç","\224\","¨","æ","\235\","¥","å","\234\","¨","ç","\211\","¹","å","®","\232\","ç","\232\","\204\","æ","\203\","\205\","å","\206\","µä","¸","\213\","ï","¼","\214\","æ","\212\","\212\","æ","\225\","´","ä","¸","ª","#$Plan","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\224\","¯","æ","\217\","´","#$Plan","è","\201\","\224\","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223132).
lisp_trans(rtBinaryPredicate(uses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223378).
lisp_trans(rtAsymmetricRelation(uses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223410).
lisp_trans(argIsa(uses,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223445).
lisp_trans(argIsa(uses,2,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223468).
lisp_trans(documentation(uses,vEnglishLanguage,s("(","#$uses","?","OBJECT","AGENT",")","means","that","?","OBJECT","is","used","by","?","AGENT","as","an","instrument","in","an","unspecified","#$Process",".","This","#$Predicate",",","as","its","corresponding","axiom","indicates",",","is","a","composition","of","the","#$CaseRoles","#$agent","and","#$instrument",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223490).
lisp_trans(documentation(uses,xtChineseLanguage,s("(","#$uses","?","OBJECT","AGENT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","AGENT","å","\234\","¨","ä","¸","\200\","ä","¸","ªæ","²","¡","æ","\234\","\211\","æ","\214\","\207\","å","®","\232\","ç","\232\","\204\","#$Process","æ","\211\","\200\","ç","\224\","¨","ç","\232\","\204\","å","·","¥","å","\205\","·","æ","\230\","¯","?","OBJECTï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Predicate","å","°","±","å","¦","\202\","å","®","\203\","ç","\232\","\204\","å","®","\232\","ä","¹","\211\","æ","\211\","\200\","è","¯","´","ç","\232\","\204\","ï","¼","\214\","ç","\224\","±","#$CaseRoleã","\200\","\201\","#$agent","å","\222\","\214\","#$instrument","æ","\236\","\204\","æ","\210\","\220\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':223754).
lisp_trans(=>(uses(OBJ,AGENT),exists([PROC],and(agent(PROC,AGENT),instrument(PROC,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224002).
lisp_trans(rtBinaryFunction(uMultiplicationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224289).
lisp_trans(rtAssociativeFunction(uMultiplicationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224332).
lisp_trans(rtCommutativeFunction(uMultiplicationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224380).
lisp_trans(tSumoRelationExtendedToQuantities(uMultiplicationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224428).
lisp_trans(rtTotalValuedRelation(uMultiplicationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224485).
lisp_trans(argIsa(uMultiplicationFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224533).
lisp_trans(argIsa(uMultiplicationFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224570).
lisp_trans(resultIsa(uMultiplicationFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224607).
lisp_trans(documentation(uMultiplicationFn,vEnglishLanguage,s("If","?","NUMBER1","and","?","NUMBER2","are","#$Numbers",",","then","(","#$MultiplicationFn","?","NUMBER1","?","NUMBER2",")","is","the","arithmetical","product","of","these","numbers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224641).
lisp_trans(documentation(uMultiplicationFn,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","?","NUMBER1","å","\222\","\214\","?","NUMBER2","æ","\230\","¯","#$Numberï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$MultiplicationFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","è","¿","\231\","äº","\233\","æ","\225\","°","å","­","\227\","ç","\232\","\204\","ç","®","\227\","æ","\234\","¯","ç","§","¯","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224822).
lisp_trans(rtBinaryFunction(uAdditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':224997).
lisp_trans(rtAssociativeFunction(uAdditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225034).
lisp_trans(rtCommutativeFunction(uAdditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225076).
lisp_trans(tSumoRelationExtendedToQuantities(uAdditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225118).
lisp_trans(rtTotalValuedRelation(uAdditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225169).
lisp_trans(argIsa(uAdditionFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225211).
lisp_trans(argIsa(uAdditionFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225242).
lisp_trans(resultIsa(uAdditionFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225273).
lisp_trans(documentation(uAdditionFn,vEnglishLanguage,s("If","?","NUMBER1","and","?","NUMBER2","are","#$Numbers",",","then","(","#$AdditionFn","?","NUMBER1","?","NUMBER2",")","is","the","arithmetical","sum","of","these","numbers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225301).
lisp_trans(documentation(uAdditionFn,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","?","NUMBER1","å","\222\","\214\","?","NUMBER2","æ","\230\","¯","#$Number",",","é","\202\","£","ä","¹","\210\","(","#$AdditionFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","è","¿","\231\","äº","\233\","æ","\225\","°","å","­","\227\","ç","\232\","\204\","ç","®","\227\","æ","\234\","¯","å","\222\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225466).
lisp_trans(all([NUMBER],equal(vSuccessorFn(NUMBER),uAdditionFn(NUMBER,1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225627).
lisp_trans(rtBinaryFunction(uSubtractionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225702).
lisp_trans(rtAssociativeFunction(uSubtractionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225742).
lisp_trans(tSumoRelationExtendedToQuantities(uSubtractionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225787).
lisp_trans(rtTotalValuedRelation(uSubtractionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225841).
lisp_trans(argIsa(uSubtractionFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225886).
lisp_trans(argIsa(uSubtractionFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225920).
lisp_trans(resultIsa(uSubtractionFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225954).
lisp_trans(documentation(uSubtractionFn,vEnglishLanguage,s("If","?","NUMBER1","and","?","NUMBER2","are","#$Numbers",",","then","(","#$SubtractionFn","?","NUMBER1","?","NUMBER2",")","is","the","arithmetical","difference","between","?","NUMBER1","and","?","NUMBER2",",","i",".","e",".","?","NUMBER1","minus","?","NUMBER2",".","An","exception","occurs","when","?","NUMBER1","is","equal","to","0",",","in","which","case","(","#$SubtractionFn","?","NUMBER1","?","NUMBER2",")","is","the","negation","of","?","NUMBER2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':225985).
lisp_trans(documentation(uSubtractionFn,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","?","NUMBER1","å","\222\","\214\","?","NUMBER2","æ","\230\","¯","#$Number",",","é","\202\","£","ä","¹","\210\","(","#$SubtractionFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","?","NUMBER1","å","\222\","\214\","?","NUMBER2","ç","\232\","\204\","ç","®","\227\","æ","\234\","¯","å","·","®","ï","¼","\214\","å","\215\","³","ä","½","¿","?","NUMBER1","å","\207\","\217\","?","NUMBER2ï","¼","\214\","é","\231\","¤","äº","\206\","å","\234\","¨","?","NUMBER1","ç","­","\211\","äº","\216\","0","æ","\227\","¶","ï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$SubtractionFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","?","NUMBER2","ç","\232\","\204\","è","´","\237\","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226335).
lisp_trans(all([NUMBER],equal(uPredecessorFn(NUMBER),uSubtractionFn(NUMBER,1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226649).
lisp_trans(rtBinaryFunction(uDivisionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226729).
lisp_trans(rtAssociativeFunction(uDivisionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226766).
lisp_trans(tSumoRelationExtendedToQuantities(uDivisionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226808).
lisp_trans(rtPartialValuedRelation(uDivisionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226859).
lisp_trans(argIsa(uDivisionFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226903).
lisp_trans(argIsa(uDivisionFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226934).
lisp_trans(resultIsa(uDivisionFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226965).
lisp_trans(documentation(uDivisionFn,vEnglishLanguage,s("If","?","NUMBER1","and","?","NUMBER2","are","#$Numbers",",","then","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","is","the","result","of","dividing","?","NUMBER1","by","?","NUMBER2",".","Note","that","when","?","NUMBER1","=","1","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","is","the","reciprocal","of","?","NUMBER2",".","Note","too","that","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","is","undefined","when","?","NUMBER2","=","0",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':226993).
lisp_trans(documentation(uDivisionFn,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","?","NUMBER1","å","\222\","\214\","?","NUMBER2","æ","\230\","¯","#$Number",",","é","\202\","£","ä","¹","\210\","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","?","NUMBER1","é","\231\","¤","?","NUMBER2","ç","\232\","\204\","å","\225\","\206\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","½","\223\","?","NUMBER1","=","1","æ","\227\","¶","ï","¼","\214\","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","å","°","±","æ","\230\","¯","?","NUMBER2","ç","\232\","\204\","å","\200\","\222\","æ","\225\","°","ã","\200\","\202\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","å","½","\223\","?","NUMBER2","=","0","æ","\227\","¶","ï","¼","\214\","(","#$DivisionFn","?","NUMBER1","?","NUMBER2",")","ä","¼","\232\","æ","\230\","¯","ä","¸","ºå","®","\232\","ä","¹","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':227337).
lisp_trans(=>(vtRationalNumber(NUMBER),exists([INT1,INT2],and(ftInt(INT1),ftInt(INT2),equal(NUMBER,uDivisionFn(INT1,INT2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':227685).
lisp_trans(rtUnaryFunction(vAbsoluteValueFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':227884).
lisp_trans(rtTotalValuedRelation(vAbsoluteValueFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':227925).
lisp_trans(argIsa(vAbsoluteValueFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':227972).
lisp_trans(resultIsa(vAbsoluteValueFn,ftNonnegativeRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228010).
lisp_trans(documentation(vAbsoluteValueFn,vEnglishLanguage,s("The","value","of","(","#$AbsoluteValueFn","?","NUMBER",")","is","the","absolute","value","of","the","#$RealNumber","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228056).
lisp_trans(documentation(vAbsoluteValueFn,xtChineseLanguage,s("(","#$AbsoluteValueFn","?","NUMBER",")","ç","\232\","\204\","å","\200\","¼","æ","\227\","¶","#$RealNumber","?","NUMBER","ç","\232\","\204\","ç","»","\235\","å","¯","¹","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228198).
lisp_trans(<=>(and(equal(vAbsoluteValueFn(NUMBER1),NUMBER2),ftRealNumber(NUMBER1),ftRealNumber(NUMBER2)),or(and(ftNonnegativeRealNumber(NUMBER1),equal(NUMBER1,NUMBER2)),and(ftNegativeRealNumber(NUMBER1),equal(NUMBER2,uSubtractionFn(0,NUMBER1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228323).
lisp_trans(rtUnaryFunction(uCeilingFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228721).
lisp_trans(rtTotalValuedRelation(uCeilingFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228756).
lisp_trans(argIsa(uCeilingFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228797).
lisp_trans(resultIsa(uCeilingFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228829).
lisp_trans(documentation(uCeilingFn,vEnglishLanguage,s("(","#$CeilingFn","?","NUMBER",")","returns","the","smallest","#$Integer","greater","than","or","equal","to","the","#$RealNumber","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':228855).
lisp_trans(documentation(uCeilingFn,xtChineseLanguage,s("(","#$CeilingFn","?","NUMBER",")","å","¾","\227\","å","\207\","ºå","¤","§","äº","\216\","æ","\210\","\226\","ç","­","\211\","äº","\216\","#$RealNumber","?","NUMBER","ç","\232\","\204\","æ","\234\","\200\","å","°","\217\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229003).
lisp_trans(=>(equal(uCeilingFn(NUMBER),INT),not(exists([OTHERINT],and(ftInt(OTHERINT),greaterThanOrEqualTo(OTHERINT,NUMBER),lessThan(OTHERINT,INT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229135).
lisp_trans(rtUnaryFunction(vCosineFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229360).
lisp_trans(rtTotalValuedRelation(vCosineFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229394).
lisp_trans(argIsa(vCosineFn,1,vtPlaneAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229434).
lisp_trans(resultIsa(vCosineFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229472).
lisp_trans(documentation(vCosineFn,vEnglishLanguage,s("(","#$CosineFn","?","DEGREE",")","returns","the","cosine","of","the","#$PlaneAngleMeasure","?","DEGREE",".","The","cosine","of","?","DEGREE","is","the","ratio","of","the","side","next","to","?","DEGREE","to","the","hypotenuse","in","a","right","-","angled","triangle",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229500).
lisp_trans(documentation(vCosineFn,xtChineseLanguage,s("(","#$CosineFn","?","DEGREE",")","å","¾","\227\","å","\207\","º","#$PlaneAngleMeasure","?","DEGREE","ç","\232\","\204\","ä","½","\231\","å","¼","¦","ã","\200\","\202\","å","\234\","¨","ä","¸","\200\","ä","¸","ªç","\233\","´","è","§","\222\","ä","¸","\211\","è","§","\222\","å","½","¢","ï","¼","\214\","?","DEGREE","ç","\232\","\204\","ä","½","\231\","å","¼","¦","æ","\230\","¯","?","DEGREE","å","\202\","\215\","è","¾","¹","ç","\232\","\204\","è","¾","¹","å","\222\","\214\","æ","\226\","\234\","è","¾","¹","ç","\232\","\204\","æ","¯","\224\","ç","\216\","\207\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229729).
lisp_trans(rtUnaryFunction(uDenominatorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229931).
lisp_trans(rtTotalValuedRelation(uDenominatorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':229970).
lisp_trans(argIsa(uDenominatorFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230015).
lisp_trans(resultIsa(uDenominatorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230051).
lisp_trans(documentation(uDenominatorFn,vEnglishLanguage,s("(","#$DenominatorFn","?","NUMBER",")","returns","the","denominator","of","the","canonical","reduced","form","of","the","#$RealNumber","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230081).
lisp_trans(documentation(uDenominatorFn,xtChineseLanguage,s("(","#$DenominatorFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","#$RealNumber","?","NUMBER","è","¿","\230\","å","\216\","\237\","è","§","\204\","è","\214\","\203\","å","½","¢","å","¼","\217\","ç","\232\","\204\","å","\210\","\206\","æ","¯","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230238).
lisp_trans(rtBinaryFunction(uExponentiationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230372).
lisp_trans(tSumoRelationExtendedToQuantities(uExponentiationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230415).
lisp_trans(rtTotalValuedRelation(uExponentiationFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230472).
lisp_trans(argIsa(uExponentiationFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230520).
lisp_trans(argIsa(uExponentiationFn,2,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230557).
lisp_trans(resultIsa(uExponentiationFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230593).
lisp_trans(documentation(uExponentiationFn,vEnglishLanguage,s("(","#$ExponentiationFn","?","NUMBER","?","INT",")","returns","the","#$RealNumber","?","NUMBER","raised","to","the","power","of","the","#$Integer","?","INT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230627).
lisp_trans(documentation(uExponentiationFn,xtChineseLanguage,s("(","#$ExponentiationFn","?","NUMBER","?","INT",")","äº","¤","å","\207\","º","#$RealNumber","?","NUMBER","ç","\232\","\204\","#$Integer","?","INTæ","¬","¡","æ","\226\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230788).
lisp_trans(rtUnaryFunction(uFloorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230930).
lisp_trans(rtTotalValuedRelation(uFloorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':230963).
lisp_trans(argIsa(uFloorFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231002).
lisp_trans(resultIsa(uFloorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231032).
lisp_trans(documentation(uFloorFn,vEnglishLanguage,s("(","#$FloorFn","?","NUMBER",")","returns","the","largest","#$Integer","less","than","or","equal","to","the","#$RealNumber","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231056).
lisp_trans(documentation(uFloorFn,xtChineseLanguage,s("(","#$FloorFn","?","NUMBER",")","å","¾","\227\","å","\207\","ºå","°","\217\","äº","\216\","æ","\210\","\226\","ç","­","\211\","äº","\216\","#$RealNumber","?","NUMBER","ç","\232\","\204\","æ","\234\","\200\","å","¤","§","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231196).
lisp_trans(=>(equal(uFloorFn(NUMBER),INT),not(exists([OTHERINT],and(ftInt(OTHERINT),lessThanOrEqualTo(OTHERINT,NUMBER),greaterThan(OTHERINT,INT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231326).
lisp_trans(tFunction(vGreatestCommonDivisorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231549).
lisp_trans(rtVariableArityRelation(vGreatestCommonDivisorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231593).
lisp_trans(rtPartialValuedRelation(vGreatestCommonDivisorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231650).
lisp_trans(resultIsa(vGreatestCommonDivisorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231707).
lisp_trans(argIsa(vGreatestCommonDivisorFn,1,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231747).
lisp_trans(documentation(vGreatestCommonDivisorFn,vEnglishLanguage,s("(","#$GreatestCommonDivisorFn","?","NUMBER1","?","NUMBER2",".",".",".","?","NUMBER",")","returns","the","greatest","common","divisor","of","?","NUMBER1","through","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231789).
lisp_trans(documentation(vGreatestCommonDivisorFn,xtChineseLanguage,s("(","#$GreatestCommonDivisorFn","?","NUMBER1","?","NUMBER2",".",".",".","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER1","å","\210\","°","?","NUMBER","ç","\232\","\204\","æ","\234\","\200\","å","¤","§","å","\205\","¬","çº","¦","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':231970).
lisp_trans(=>(uN(vGreatestCommonDivisorFn,ROW),=>(inList(ELEMENT,uN(vTheListFn,ROW)),ftNumber(ELEMENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':232136).
lisp_trans(=>(equal(uN(vGreatestCommonDivisorFn,ROW),NUMBER),all([ELEMENT],=>(inList(ELEMENT,uN(vTheListFn,ROW)),equal(uRemainderFn(ELEMENT,NUMBER),0)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':232273).
lisp_trans(=>(equal(uN(vGreatestCommonDivisorFn,ROW),NUMBER),not(exists([GREATER],and(greaterThan(GREATER,NUMBER),all([ELEMENT],=>(inList(ELEMENT,uN(vTheListFn,ROW)),equal(uRemainderFn(ELEMENT,GREATER),0))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':232454).
lisp_trans(documentation(multiplicativeFactor,vEnglishLanguage,s("(","multiplicativeFactor","?","NUMBER1","?","NUMBER2",")","means","that","?","NUMBER1","is","a","factor","of","?","NUMBER2",",","i",".","e",".","?","NUMBER1","can","be","multiplied","by","some","#$Integer","to","give","?","NUMBER2","as","a","result",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':232741).
lisp_trans(documentation(multiplicativeFactor,xtChineseLanguage,s("(","multiplicativeFactor","?","NUMBER1","?","NUMBER2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","NUMBER1","æ","\230\","¯","?","NUMBER2","å","\233\","\240\","å","­","\220\","ï","¼","\214\","å","\215\","³","æ","\230\","¯","?","NUMBER1","å","\217\","¯","ä","»","¥","æ","\210\","\220\","æ","\237\","\220\","äº","\233\","#$Integer","è","\200\","\214\","å","¾","\227\","å","\207\","º","?","NUMBER2ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':232962).
lisp_trans(rtBinaryPredicate(multiplicativeFactor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233167).
lisp_trans(rtTransitiveRelation(multiplicativeFactor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233215).
lisp_trans(argIsa(multiplicativeFactor,1,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233266).
lisp_trans(argIsa(multiplicativeFactor,2,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233306).
lisp_trans(=>(multiplicativeFactor(N1,N2),exists([I],and(ftInt(I),equal(N2,uMultiplicationFn(N1,I))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233347).
lisp_trans(rtUnaryFunction(uImaginaryPartFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233484).
lisp_trans(rtTotalValuedRelation(uImaginaryPartFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233525).
lisp_trans(argIsa(uImaginaryPartFn,1,vtComplexNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233572).
lisp_trans(resultIsa(uImaginaryPartFn,vtImaginaryNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233613).
lisp_trans(documentation(uImaginaryPartFn,vEnglishLanguage,s("(","#$ImaginaryPartFn","?","NUMBER",")","returns","the","part","of","?","NUMBER","that","has","the","square","root","of","-1","as","its","factor",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233653).
lisp_trans(documentation(uImaginaryPartFn,xtChineseLanguage,s("(","#$ImaginaryPartFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","æ","\234\","\211\","å","®","\203\","ç","\232\","\204\","å","\233\","\240\","å","­","\220\","ä","¸","º","-1","ç","\232\","\204\","å","¹","³","æ","\226\","¹","æ","\240\","¹","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233805).
lisp_trans(=>(vtComplexNumber(NUMBER),exists([PART1,PART2],and(equal(PART1,uRealNumberFn(NUMBER)),equal(PART2,uImaginaryPartFn(NUMBER))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':233945).
lisp_trans(rtUnaryFunction(uIntegerSquareRootFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234124).
lisp_trans(rtPartialValuedRelation(uIntegerSquareRootFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234169).
lisp_trans(argIsa(uIntegerSquareRootFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234222).
lisp_trans(resultIsa(uIntegerSquareRootFn,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234264).
lisp_trans(documentation(uIntegerSquareRootFn,vEnglishLanguage,s("(","#$IntegerSquareRootFn","?","NUMBER",")","returns","the","integer","square","root","of","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234311).
lisp_trans(documentation(uIntegerSquareRootFn,xtChineseLanguage,s("(","#$IntegerSquareRootFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","å","¹","³","æ","\226\","¹","æ","\240\","¹","ç","\232\","\204\","æ","\225\","´","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234441).
lisp_trans(tFunction(vLeastCommonMultipleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234566).
lisp_trans(rtPartialValuedRelation(vLeastCommonMultipleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234608).
lisp_trans(rtVariableArityRelation(vLeastCommonMultipleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234663).
lisp_trans(resultIsa(vLeastCommonMultipleFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234718).
lisp_trans(argIsa(vLeastCommonMultipleFn,1,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234756).
lisp_trans(documentation(vLeastCommonMultipleFn,vEnglishLanguage,s("(","#$LeastCommonMultipleFn","?","NUMBER1","?","NUMBER2",".",".",".","?","NUMBER",")","returns","the","least","common","multiple","of","?","NUMBER1","through","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234796).
lisp_trans(documentation(vLeastCommonMultipleFn,xtChineseLanguage,s("(","#$LeastCommonMultipleFn","?","NUMBER1","?","NUMBER2",".",".",".","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER1","å","\210\","°","?","NUMBER","ç","\232\","\204\","æ","\234\","\200\","å","°","\217\","å","\205\","¬","å","\200\","\215\","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':234971).
lisp_trans(=>(uN(vLeastCommonMultipleFn,ROW),=>(inList(ELEMENT,uN(vTheListFn,ROW)),ftNumber(ELEMENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235134).
lisp_trans(=>(equal(uN(vLeastCommonMultipleFn,ROW),NUMBER),all([ELEMENT],=>(inList(ELEMENT,uN(vTheListFn,ROW)),equal(uRemainderFn(NUMBER,ELEMENT),0)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235269).
lisp_trans(=>(equal(uN(vLeastCommonMultipleFn,ROW),NUMBER),not(exists([LESS],and(lessThan(LESS,NUMBER),all([ELEMENT],=>(inList(ELEMENT,uN(vTheListFn,ROW)),equal(uRemainderFn(LESS,ELEMENT),0))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235448).
lisp_trans(rtBinaryFunction(vLogFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235721).
lisp_trans(argIsa(vLogFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235753).
lisp_trans(argIsa(vLogFn,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235781).
lisp_trans(resultIsa(vLogFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235814).
lisp_trans(documentation(vLogFn,vEnglishLanguage,s("(","LogFn","?","NUMBER","?","INT",")","returns","the","logarithm","of","the","#$RealNumber","?","NUMBER","in","the","base","denoted","by","the","#$Integer","?","INT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235839).
lisp_trans(documentation(vLogFn,xtChineseLanguage,s("(","LogFn","?","NUMBER","?","INT",")","å","¾","\227\","å","\207\","º","#$RealNumber","?","NUMBER","ä","»","¥","#$Integer","?","INT","ä","¸","ºå","\237\","ºæ","\225\","°","ç","\232\","\204\","å","¯","¹","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':235993).
lisp_trans(rtBinaryFunction(uMaxFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236125).
lisp_trans(rtAssociativeFunction(uMaxFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236157).
lisp_trans(rtCommutativeFunction(uMaxFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236194).
lisp_trans(tSumoRelationExtendedToQuantities(uMaxFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236231).
lisp_trans(rtTotalValuedRelation(uMaxFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236277).
lisp_trans(argIsa(uMaxFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236314).
lisp_trans(argIsa(uMaxFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236340).
lisp_trans(resultIsa(uMaxFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236366).
lisp_trans(documentation(uMaxFn,vEnglishLanguage,s("(","#$MaxFn","?","NUMBER1","?","NUMBER2",")","is","the","largest","of","?","NUMBER1","and","?","NUMBER2",".","In","cases","where","?","NUMBER1","is","equal","to","?","NUMBER2",",","#$MaxFn","returns","one","of","its","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236389).
lisp_trans(documentation(uMaxFn,xtChineseLanguage,s("(","#$MaxFn","?","NUMBER1","?","NUMBER2",")","å","¾","\227\","å","\207\","º","?","NUMBER1","å","\222\","\214\","?","NUMBER2","ä","¸","­","æ","\234\","\200\","å","¤","§","å","\200\","¼","ã","\200\","\202\","ä","¸","\200\","æ","\227\","¦","?","NUMBER1","ç","­","\211\","äº","\216\","?","NUMBER2","ç","\232\","\204\","è","¯","\235\","#$MaxFn","å","°","±","å","¾","\227\","å","\207\","ºå","\205\","¶","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236583).
lisp_trans(=>(equal(uMaxFn(NUMBER1,NUMBER2),NUMBER),or(and(equal(NUMBER,NUMBER1),greaterThan(NUMBER1,NUMBER2)),and(equal(NUMBER,NUMBER2),greaterThan(NUMBER2,NUMBER1)),and(equal(NUMBER,NUMBER1),equal(NUMBER,NUMBER2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':236778).
lisp_trans(rtBinaryFunction(uMinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237091).
lisp_trans(rtAssociativeFunction(uMinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237123).
lisp_trans(rtCommutativeFunction(uMinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237160).
lisp_trans(tSumoRelationExtendedToQuantities(uMinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237197).
lisp_trans(rtTotalValuedRelation(uMinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237243).
lisp_trans(argIsa(uMinFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237280).
lisp_trans(argIsa(uMinFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237306).
lisp_trans(resultIsa(uMinFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237332).
lisp_trans(documentation(uMinFn,vEnglishLanguage,s("(","#$MinFn","?","NUMBER1","?","NUMBER2",")","is","the","smallest","of","?","NUMBER1","and","?","NUMBER2",".","In","cases","where","?","NUMBER1","is","equal","to","?","NUMBER2",",","#$MinFn","returns","one","of","its","arguments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237355).
lisp_trans(documentation(uMinFn,xtChineseLanguage,s("(","#$MinFn","?","NUMBER1","?","NUMBER2",")","å","¾","\227\","å","\207\","º","?","NUMBER1","å","\222\","\214\","?","NUMBER2","ä","¸","­","æ","\234\","\200\","å","°","\217\","å","\200\","¼","ã","\200\","\202\","ä","¸","\200\","æ","\227\","¦","?","NUMBER1","ç","­","\211\","äº","\216\","?","NUMBER2","ç","\232\","\204\","è","¯","\235\","#$MinFn","å","°","±","å","¾","\227\","å","\207\","ºå","\205\","¶","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237550).
lisp_trans(=>(equal(uMinFn(NUMBER1,NUMBER2),NUMBER),or(and(equal(NUMBER,NUMBER1),lessThan(NUMBER1,NUMBER2)),and(equal(NUMBER,NUMBER2),lessThan(NUMBER2,NUMBER1)),and(equal(NUMBER,NUMBER1),equal(NUMBER,NUMBER2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':237745).
lisp_trans(rtUnaryFunction(uNumeratorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238052).
lisp_trans(rtTotalValuedRelation(uNumeratorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238089).
lisp_trans(argIsa(uNumeratorFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238132).
lisp_trans(resultIsa(uNumeratorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238166).
lisp_trans(documentation(uNumeratorFn,vEnglishLanguage,s("(","#$NumeratorFn","?","NUMBER",")","returns","the","numerator","of","the","canonical","reduced","form","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238194).
lisp_trans(documentation(uNumeratorFn,xtChineseLanguage,s("(","#$NumeratorFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","è","¿","\230\","å","\216\","\237\","è","§","\204\","è","\214\","\203\","å","½","¢","å","¼","\217\","ç","\232\","\204\","å","\210\","\206\","å","­","\220\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238325).
lisp_trans(ftPositiveRealNumber(tSumoPi),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238442).
lisp_trans(documentation(tSumoPi,vEnglishLanguage,'Pi is the #$RealNumber that is the ratio of the perimeter of a circle to its diameter.  It is approximately equal to 3.141592653589793.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238475).
lisp_trans(documentation(tSumoPi,xtChineseLanguage,'Pi æ\230\¯ä¸\200\ä¸ª #$RealNumberï¼\214\å®\203\æ\230\¯å\234\\206\å\234\\210\ç\232\\204\å\234\\206\å\221\¨å\222\\214\ç\233\´å¾\204\ç\232\\204\æ¯\224\ç\216\\207\ï¼\214\å¤§çº¦ç­\211\äº\216\  3.141592653589793ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238650).
lisp_trans(ftPositiveRealNumber(tSumoNumberE),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238795).
lisp_trans(documentation(tSumoNumberE,vEnglishLanguage,'NumberE is the #$RealNumber that is the base for natural logarithms.  It is approximately equal to 2.718282.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238833).
lisp_trans(documentation(tSumoNumberE,xtChineseLanguage,'NumberE æ\230\¯ä¸\200\ä¸ª #$RealNumberï¼\214\å®\203\æ\230\¯è\207\ªç\204\¶å¯¹æ\225\°ç\232\\204\æ\234\ºç\216\\207\ï¼\214\å¤§çº¦ ç­\211\äº\216\2.718282ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':238986).
lisp_trans(rtUnaryFunction(uRationalNumberFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239119).
lisp_trans(argIsa(uRationalNumberFn,1,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239161).
lisp_trans(resultIsa(uRationalNumberFn,vtRationalNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239196).
lisp_trans(documentation(uRationalNumberFn,vEnglishLanguage,s("(","#$RationalNumberFn","?","NUMBER",")","returns","the","rational","representation","of","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239236).
lisp_trans(documentation(uRationalNumberFn,xtChineseLanguage,s("(","#$RationalNumberFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","ç","\232\","\204\","æ","¯","\224\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239364).
lisp_trans(rtUnaryFunction(uRealNumberFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239472).
lisp_trans(argIsa(uRealNumberFn,1,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239510).
lisp_trans(resultIsa(uRealNumberFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239541).
lisp_trans(documentation(uRealNumberFn,vEnglishLanguage,s("(","RealNumberFn","?","NUMBER",")","returns","the","part","of","?","NUMBER","that","is","a","#$RealNumber",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239573).
lisp_trans(documentation(uRealNumberFn,xtChineseLanguage,s("(","RealNumberFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","ç","\232\","\204\","#$RealNumber","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239695).
lisp_trans(rtUnaryFunction(vReciprocalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239808).
lisp_trans(tSumoRelationExtendedToQuantities(vReciprocalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239846).
lisp_trans(rtTotalValuedRelation(vReciprocalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239899).
lisp_trans(argIsa(vReciprocalFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239943).
lisp_trans(resultIsa(vReciprocalFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':239976).
lisp_trans(documentation(vReciprocalFn,vEnglishLanguage,"(ReciprocalFn ?NUMBER) is the reciprocal element of ?NUMBER with respect to the multiplication operator (#$MultiplicationFn), i.e. 1/?NUMBER.  Not all numbers have a reciprocal element.  For example the number 0 does not.  If a number ?NUMBER has a reciprocal ?RECIP, then the product of ?NUMBER and ?RECIP will be 1, e.g. 3*1/3 = 1.  The reciprocal of an element is #$equal to applying the #$ExponentiationFn function to the element to the power -1."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':240006).
lisp_trans(documentation(vReciprocalFn,xtChineseLanguage,"(ReciprocalFn ?NUMBER) æ\230\¯ç\233\¸å¯¹äº\216\ä¹\230\æ³\225\è¿\220\ç®\227\ (#$MultiplicationFn),?NUMBER ç\232\\204\ä¹\230\æ³\225\é\200\\206\å\205\\203\ç´\240\(å\200\\222\æ\225\°),å\215\³æ\230\¯ 1/?NUMBERã\200\\202\ä¸\215\æ\230\¯æ\211\\200\æ\234\\211\ç\232\\204\æ\225\°å­\227\é\203\½æ\234\\211\å\200\\222\æ\225\°ç\232\\204\ï¼\214\ æ¯\224\å¦\202\è¯´æ\225\°å­\227\0å°±æ²¡æ\234\\211\ã\200\\202\å¦\202\æ\236\\234\ä¸\200\ä¸ªæ\225\°å­\227\ ?NUMBERæ\234\\211\å\200\\222\æ\225\° ?RECIPç\232\\204\è¯\235\ï¼\214\é\202\£ä¹\210\ ?NUMBER å\222\\214\ ?RECIP ç\232\\204\ç§¯ä¼\232\æ\230\¯1, ä¾\213\å¦\202\ï¼\232\ 3*1/3 = 1ã\200\\202\ä¸\200\ä¸ªå\205\\203\ç´\240\ç\232\\204\å\200\\222\æ\225\° #$equal å¯¹é\202\£ä¸ªå\205\\203\ç´\240\ä»¥-1ç\232\\204\æ¬¡æ\226\¹ï¼\214\åº\224\ç\224\¨ #$ExponentiationFn å\207\½æ\225\°ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':240504).
lisp_trans(=>(vtQuantity(NUMBER),equal(vReciprocalFn(NUMBER),uExponentiationFn(NUMBER,-1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':240955).
lisp_trans(=>(vtQuantity(NUMBER),equal(1,uMultiplicationFn(NUMBER,vReciprocalFn(NUMBER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241056).
lisp_trans(rtBinaryFunction(uRemainderFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241156).
lisp_trans(tSumoRelationExtendedToQuantities(uRemainderFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241194).
lisp_trans(rtPartialValuedRelation(uRemainderFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241246).
lisp_trans(argIsa(uRemainderFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241291).
lisp_trans(argIsa(uRemainderFn,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241323).
lisp_trans(resultIsa(uRemainderFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241355).
lisp_trans(documentation(uRemainderFn,vEnglishLanguage,s("(","RemainderFn","?","NUMBER","?","DIVISOR",")","is","the","remainder","of","the","number","?","NUMBER","divided","by","the","number","?","DIVISOR",".","The","result","has","the","same","sign","as","?","DIVISOR",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241384).
lisp_trans(documentation(uRemainderFn,xtChineseLanguage,s("(","RemainderFn","?","NUMBER","?","DIVISOR",")","æ","\230\","¯","æ","\225\","°","å","­","\227\","?","NUMBER","é","\231\","¤","ä","»","¥","æ","\225\","°","å","­","\227\","?","DIVISOR","ç","\232\","\204\","ä","½","\231\","æ","\225\","°","ï","¼","\214\","å","\225\","\206\","æ","\225\","°","ç","\232\","\204\","æ","­","£","è","´","\237\","å","\200\","¼","ä","¸","\216\","?","DIVISOR","ç","\233\","¸","å","\220\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241574).
lisp_trans(<=>(equal(uRemainderFn(NUMBER1,NUMBER2),NUMBER),equal(uAdditionFn(uMultiplicationFn(uFloorFn(uDivisionFn(NUMBER1,NUMBER2)),NUMBER2),NUMBER),NUMBER1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241744).
lisp_trans(=>(equal(uRemainderFn(NUMBER1,NUMBER2),NUMBER),equal(uSignumFn(NUMBER2),uSignumFn(NUMBER))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':241912).
lisp_trans(=>(ftEvenInteger(NUMBER),equal(uRemainderFn(NUMBER,2),0)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242020).
lisp_trans(=>(ftOddInteger(NUMBER),equal(uRemainderFn(NUMBER,2),1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242095).
lisp_trans(=>(vtPrimeNumber(PRIME),all([NUMBER],=>(equal(uRemainderFn(PRIME,NUMBER),0),or(equal(NUMBER,1),equal(NUMBER,PRIME))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242169).
lisp_trans(rtUnaryFunction(uRoundFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242368).
lisp_trans(tSumoRelationExtendedToQuantities(uRoundFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242401).
lisp_trans(rtTotalValuedRelation(uRoundFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242449).
lisp_trans(argIsa(uRoundFn,1,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242488).
lisp_trans(resultIsa(uRoundFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242516).
lisp_trans(documentation(uRoundFn,vEnglishLanguage,s("(","#$RoundFn","?","NUMBER",")","is","the","#$Integer","closest","to","?","NUMBER","on","the","number","line",".","If","?","NUMBER","is","halfway","between","two","#$Integers","(","for","example","3.5",")",",","it","denotes","the","larger","#$Integer",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242541).
lisp_trans(documentation(uRoundFn,xtChineseLanguage,s("(","#$RoundFn","?","NUMBER",")","æ","\230\","¯","å","\234\","¨","æ","\225\","°","å","­","\227\","çº","¿","ä","¸","\212\","æ","\234\","\200\","æ","\216\","¥","è","¿","\221\","?","NUMBER","ç","\232\","\204\","#$Integerï","¼","\214\","å","¦","\202\","æ","\236\","\234\","?","NUMBER","ä","½","\215\","äº","\216\","ä","¸","¤","ä","¸","ª","#$Integer","ç","\232\","\204\","ä","¸","\200\","å","\215\","\212\","(","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","3.5",")","æ","\227\","¶",",","è","¿","\231\","å","°","\206\","ä","¼","\232\","å","¾","\227\","å","\207\","ºè","¾","\203\","å","¤","§","ç","\232\","\204\","#$Integerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242757).
lisp_trans(=>(equal(uRoundFn(NUMBER1),NUMBER2),or(=>(lessThan(uSubtractionFn(NUMBER1,uFloorFn(NUMBER1)),0.5),equal(NUMBER2,uFloorFn(NUMBER1))),=>(greaterThanOrEqualTo(uSubtractionFn(NUMBER1,uFloorFn(NUMBER1)),0.5),equal(NUMBER2,uCeilingFn(NUMBER1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':242976).
lisp_trans(rtUnaryFunction(uSignumFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243291).
lisp_trans(rtTotalValuedRelation(uSignumFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243325).
lisp_trans(argIsa(uSignumFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243365).
lisp_trans(resultIsa(uSignumFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243396).
lisp_trans(documentation(uSignumFn,vEnglishLanguage,s("(","SignumFn","?","NUMBER",")","denotes","the","sign","of","?","NUMBER",".","This","is","one","of","the","following","values",":","-1",",","1",",","or","0",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243421).
lisp_trans(documentation(uSignumFn,xtChineseLanguage,s("(","SignumFn","?","NUMBER",")","å","¾","\227\","å","\207\","º","?","NUMBER","ç","\232\","\204\","æ","­","£","è","´","\237\","ç","¬","¦","å","\217\","·","ï","¼","\214\","è","¿","\231\","å","°","\206\","ä","¼","\232\","æ","\230\","¯","ä","»","¥","ä","¸","\213\","å","\205\","¶","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\200\","¼","ï","¼","\232\","-1","ï","¼","\214\","1","æ","\210\","\226\","0","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243563).
lisp_trans(=>(ftNonnegativeRealNumber(NUMBER),or(equal(uSignumFn(NUMBER),1),equal(uSignumFn(NUMBER),0))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243717).
lisp_trans(=>(ftPositiveRealNumber(NUMBER),equal(uSignumFn(NUMBER),1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243845).
lisp_trans(=>(ftNegativeRealNumber(NUMBER),equal(uSignumFn(NUMBER),-1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':243924).
lisp_trans(rtUnaryFunction(vSineFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244004).
lisp_trans(rtTotalValuedRelation(vSineFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244036).
lisp_trans(argIsa(vSineFn,1,vtPlaneAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244074).
lisp_trans(resultIsa(vSineFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244110).
lisp_trans(documentation(vSineFn,vEnglishLanguage,s("(","#$SineFn","?","DEGREE",")","is","the","sine","of","the","#$PlaneAngleMeasure","?","DEGREE",".","The","sine","of","?","DEGREE","is","the","ratio","of","the","side","opposite","?","DEGREE","to","the","hypotenuse","in","a","right","-","angled","triangle",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244136).
lisp_trans(documentation(vSineFn,xtChineseLanguage,s("(","#$SineFn","?","DEGREE",")","æ","\230\","¯","#$PlaneAngleMeasure","?","DEGREE","ç","\232\","\204\","æ","­","£","å","¼","¦","ã","\200\","\202\","å","\234\","¨","ä","¸","\200\","ä","¸","ªç","\233\","´","è","§","\222\","ä","¸","\211\","è","§","\222\","å","½","¢","ï","¼","\214\","?","DEGREE","ç","\232\","\204\","æ","­","£","å","¼","¦","æ","\230\","¯","?","DEGREE","å","¯","¹","è","¾","¹","å","\222\","\214\","æ","\226\","\234\","è","¾","¹","ç","\232\","\204\","æ","¯","\224\","ç","\216\","\207\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244353).
lisp_trans(rtUnaryFunction(vSquareRootFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244541).
lisp_trans(argIsa(vSquareRootFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244579).
lisp_trans(resultIsa(vSquareRootFn,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244614).
lisp_trans(documentation(vSquareRootFn,vEnglishLanguage,s("(","SquareRootFn","?","NUMBER",")","is","the","principal","square","root","of","?","NUMBER",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244642).
lisp_trans(documentation(vSquareRootFn,xtChineseLanguage,s("(","SquareRootFn","?","NUMBER",")","æ","\230\","¯","?","NUMBERç","\232\","\204\","ä","¸","»","è","¦","\201\","å","¹","³","æ","\226\","¹","æ","\240\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244753).
lisp_trans(=>(equal(vSquareRootFn(NUMBER1),NUMBER2),equal(uMultiplicationFn(NUMBER2,NUMBER2),NUMBER1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244856).
lisp_trans(rtUnaryFunction(vTangentFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244963).
lisp_trans(rtTotalValuedRelation(vTangentFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':244998).
lisp_trans(argIsa(vTangentFn,1,vtPlaneAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245039).
lisp_trans(resultIsa(vTangentFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245078).
lisp_trans(documentation(vTangentFn,vEnglishLanguage,s("(","#$TangentFn","?","DEGREE",")","is","the","tangent","of","the","#$PlaneAngleMeasure","?","DEGREE",".","The","tangent","of","?","DEGREE","is","the","ratio","of","the","side","opposite","?","DEGREE","to","the","side","next","to","?","DEGREE","in","a","right","-","angled","triangle",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245107).
lisp_trans(documentation(vTangentFn,xtChineseLanguage,s("(","#$TangentFn","?","DEGREE",")","æ","\230\","¯","#$PlaneAngleMeasure","?","DEGREE","ç","\232\","\204\","å","\210\","\207\","çº","¿","ã","\200\","\202\","å","\234\","¨","ä","¸","\200\","ä","¸","ªç","\233\","´","è","§","\222\","ä","¸","\211\","è","§","\222\","å","½","¢","ï","¼","\214\","?","DEGREE","ç","\232\","\204\","å","\210\","\207\","çº","¿","æ","\230\","¯","?","DEGREE","å","¯","¹","è","¾","¹","å","\222\","\214\","?","DEGREE","ç","\232\","\204\","æ","¯","\224\","ç","\216\","\207\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245346).
lisp_trans(=>(vtPlaneAngleMeasure(DEGREE),equal(vTangentFn(DEGREE),uDivisionFn(vSineFn(DEGREE),vCosineFn(DEGREE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245542).
lisp_trans(rtBinaryPredicate(identityElement),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245668).
lisp_trans(rtAsymmetricRelation(identityElement),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245711).
lisp_trans(argIsa(identityElement,1,rtBinaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245757).
lisp_trans(argIsa(identityElement,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245799).
lisp_trans(documentation(identityElement,vEnglishLanguage,s("An","object","?","ID","is","the","identity","element","for","#$BinaryFunction","?","FUNCTION","just","in","case",",","for","every","instance","?","INST",",","applying","?","FUNCTION","to","?","INST","and","?","ID","results","in","?","INST",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':245833).
lisp_trans(documentation(identityElement,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","ç","\232\","\204\","?","ID","æ","\230\","¯","#$BinaryFunction","?","FUNCTION","ç","\232\","\204\","èº","«","ä","»","½","å","\205\","\203\","ç","´","\240\","ï","¼","\214\","ä","»","¥","é","\230\","²","?","INSTç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ï","¼","\214\","åº","\224\","ç","\224\","¨","?","FUNCTION","å","\210\","°","?","INST","å","\222\","\214\","?","ID","ä","¼","\232\","å","¾","\227\","å","\207\","º","?","INSTã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246046).
lisp_trans(=>(identityElement(FUNCTION,ID),all([INST],=>(and(argIsa(FUNCTION,1,CLASS),isa(INST,CLASS)),equal(uFn(FUNCTION,ID,INST),INST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246252).
lisp_trans(identityElement(uMultiplicationFn,1),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246473).
lisp_trans(identityElement(uAdditionFn,0),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246510).
lisp_trans(identityElement(uSubtractionFn,0),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246541).
lisp_trans(identityElement(uDivisionFn,1),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246575).
lisp_trans(rtUnaryFunction(vSuccessorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246607).
lisp_trans(rtTotalValuedRelation(vSuccessorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246644).
lisp_trans(argIsa(vSuccessorFn,1,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246687).
lisp_trans(resultIsa(vSuccessorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246718).
lisp_trans(documentation(vSuccessorFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Integer","to","its","successor",",","e",".","g",".","the","successor","of","5","is","6",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246746).
lisp_trans(documentation(vSuccessorFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Integer","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","å","\220\","\216\","ç","»","­","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","5","ç","\232\","\204\","å","\220\","\216\","ç","»","§","æ","\230\","¯","6","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':246881).
lisp_trans(=>(equal(vSuccessorFn(INT1),vSuccessorFn(INT2)),equal(INT1,INT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247039).
lisp_trans(=>(ftInt(INT),lessThan(INT,vSuccessorFn(INT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247119).
lisp_trans(=>(and(ftInt(INT1),ftInt(INT2)),not(and(lessThan(INT1,INT2),lessThan(INT2,vSuccessorFn(INT1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247190).
lisp_trans(=>(ftInt(INT),equal(INT,vSuccessorFn(uPredecessorFn(INT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247366).
lisp_trans(=>(ftInt(INT),equal(INT,uPredecessorFn(vSuccessorFn(INT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247450).
lisp_trans(rtUnaryFunction(uPredecessorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247534).
lisp_trans(rtTotalValuedRelation(uPredecessorFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247573).
lisp_trans(argIsa(uPredecessorFn,1,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247618).
lisp_trans(resultIsa(uPredecessorFn,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247651).
lisp_trans(documentation(uPredecessorFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Integer","to","its","predecessor",",","e",".","g",".","the","predecessor","of","5","is","4",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247681).
lisp_trans(documentation(uPredecessorFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Integer","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","å","\211\","\215\","é","©","±","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","5","ç","\232\","\204\","å","\211\","\215\","é","©","±","æ","\230\","¯","4","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247822).
lisp_trans(=>(equal(uPredecessorFn(INT1),uPredecessorFn(INT2)),equal(INT1,INT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':247982).
lisp_trans(=>(ftInt(INT),greaterThan(INT,uPredecessorFn(INT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248066).
lisp_trans(=>(and(ftInt(INT1),ftInt(INT2)),not(and(lessThan(INT2,INT1),lessThan(uPredecessorFn(INT1),INT2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248142).
lisp_trans(rtPartialValuedRelation(average),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248320).
lisp_trans(rtBinaryPredicate(average),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248361).
lisp_trans(rtSingleValuedRelation(average),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248396).
lisp_trans(argIsa(average,1,ftList),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248436).
lisp_trans(argIsa(average,2,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248460).
lisp_trans(termFormat(vEnglishLanguage,average,"average"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248490).
lisp_trans(documentation(average,vEnglishLanguage,s("A","partial","function","that","relates","a","#$List","to","a","#$RealNumber",",","provided","that","the","#$List","only","has","list","elements","that","are","#$RealNumbers",".","The","#$RealNumber","associated","with","the","#$List","is","equal","to","the","mathematical","average","of","the","#$RealNumbers","in","the","#$List","divided","by","the","total","number","of","list","elements",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248537).
lisp_trans(documentation(average,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ï","¼","\214\","å","\217\","ªè","¦","\201\","ä","¸","\200\","ä","¸","ª","#$List","ç","\232\","\204\","å","\205\","\203\","ç","´","\240\","é","\203\","½","æ","\230\","¯","#$RealNumberï","¼","\214\","å","®","\203\","ä","¼","\232\","æ","\212\","\212\","è","¿","\231\","ä","¸","ª","#$List","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$RealNumber","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$List","è","\201\","\224\","ç","³","»","ç","\232\","\204\","#$RealNumber","ç","­","\211\","äº","\216\","è","¿","\231\","ä","¸","ª","#$List","å","\206\","\205\","ç","\232\","\204\","#$RealNumber","ç","\232\","\204\","æ","\225\","°","å","­","¦","å","¹","³","å","\235\","\207\","é","\231\","¤","ä","»","¥","å","\210\","\227\","è","¡","¨","å","\205\","\203\","ç","´","\240\","ç","\232\","\204\","æ","\200\","»","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':248873).
lisp_trans(=>(average(LIST,AVERAGE),all([LISTITEM],=>(inList(LISTITEM,LIST),ftRealNumber(LISTITEM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249182).
lisp_trans(genlPreds(subset,genls),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249703).
lisp_trans(argIsa(subset,1,tSumoSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249733).
lisp_trans(argIsa(subset,2,tSumoSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249755).
lisp_trans(documentation(subset,vEnglishLanguage,s("(","subset","?","SET1","?","SET2",")","is","true","just","in","case","the","#$elements","of","the","#$Set","?","SET1","are","also","#$elements","of","the","#$Set","?","SET2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249777).
lisp_trans(documentation(subset,xtChineseLanguage,s("(","subset","?","SET1","?","SET2",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ï","¼","\214\","ä","»","¥","é","\230\","²","#$Set","?","SET1","ç","\232\","\204\","#$elements","ä","¹","\237\","æ","\230\","¯","#$Set","?","SET2","ç","\232\","\204\","#$elementã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':249934).
lisp_trans(=>(subset(SUBSET,SET),all([ELEMENT],=>(element(ELEMENT,SUBSET),element(ELEMENT,SET)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250079).
lisp_trans(rtBinaryPredicate(element),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250213).
lisp_trans(rtAsymmetricRelation(element),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250248).
lisp_trans(genlPreds(element,isa),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250286).
lisp_trans(argIsa(element,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250317).
lisp_trans(argIsa(element,2,tSumoSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250343).
lisp_trans(documentation(element,vEnglishLanguage,s("(","element","?","ENTITY","?","SET",")","is","true","just","in","case","?","ENTITY","is","contained","in","the","#$Set","?","SET",".","An","#$Entity","can","be","an","#$element","of","another","#$Entity","only","if","the","latter","is","a","#$Set",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250366).
lisp_trans(documentation(element,xtChineseLanguage,s("(","element","?","ENTITY","?","SET",")","æ","\230\","¯","ç","\234\","\237\","ç","\232\","\204\","ï","¼","\214\","ä","»","¥","é","\230\","²","#$Set","?","SET","å","·","²","å","\214\","\205\","å","\220\","«","äº","\206\","è","¿","\231\","ä","¸","ª","?","ENTITYã","\200\","\202\","ä","¸","\200\","ä","¸","ª","#$Entity","å","\217\","¯","ä","»","¥","æ","\230\","¯","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ª","#$Entity","ç","\232\","\204\","#$element","å","½","\223\","ä","¸","\224\","ä","»","\205\","å","½","\223\","å","\220\","\216\","è","\200\","\205\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Setã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250576).
lisp_trans(=>(all([ELEMENT],<=>(element(ELEMENT,SET1),element(ELEMENT,SET2))),equal(SET1,SET2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250799).
lisp_trans(rtBinaryFunction(uUnionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250921).
lisp_trans(rtTotalValuedRelation(uUnionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250955).
lisp_trans(argIsa(uUnionFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':250994).
lisp_trans(argIsa(uUnionFn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':251024).
lisp_trans(resultIsa(uUnionFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':251054).
lisp_trans(documentation(uUnionFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","two","#$SetOrClasses","to","the","union","of","these","#$SetOrClasses",".","An","object","is","an","#$element","of","the","union","of","two","#$SetOrClasses","just","in","case","it","is","an","#$instance","of","either","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':251081).
lisp_trans(documentation(uUnionFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$SetOrClass","å","\222\","\214\","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","å","¹","¶","é","\233\","\206\","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","æ","\230\","¯","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","å","¹","¶","é","\233\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$elementï","¼","\214\","ä","»","¥","é","\230\","²","å","®","\203\","æ","\230\","¯","ä","¸","¤","ä","¸","ª","#$SetOrClass","å","\205\","¶","ä","¸","­","ä","¹","\213\","ä","¸","\200\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':251328).
lisp_trans(rtBinaryFunction(uIntersectionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':251988).
lisp_trans(rtTotalValuedRelation(uIntersectionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252029).
lisp_trans(argIsa(uIntersectionFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252075).
lisp_trans(argIsa(uIntersectionFn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252112).
lisp_trans(resultIsa(uIntersectionFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252149).
lisp_trans(documentation(uIntersectionFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","two","#$SetOrClasses","to","the","intersection","of","these","#$SetOrClasses",".","An","object","is","an","instance","of","the","intersection","of","two","#$SetOrClasses","just","in","case","it","is","an","instance","of","both","of","those","#$SetOrClasses",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252183).
lisp_trans(documentation(uIntersectionFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$SetOrClass","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","äº","¤","é","\233\","\206\","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","æ","\230\","¯","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","äº","¤","é","\233\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ï","¼","\214\","ä","»","¥","é","\230\","²","å","®","\203\","å","\220\","\214\","æ","\227\","¶","æ","\230\","¯","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252457).
lisp_trans(rtBinaryFunction(uRelativeComplementFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252743).
lisp_trans(rtTotalValuedRelation(uRelativeComplementFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252790).
lisp_trans(argIsa(uRelativeComplementFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252842).
lisp_trans(argIsa(uRelativeComplementFn,2,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252885).
lisp_trans(resultIsa(uRelativeComplementFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252928).
lisp_trans(documentation(uRelativeComplementFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","two","#$SetOrClasses","to","the","difference","between","these","#$SetOrClasses",".","More","precisely",",","(","#$RelativeComplementFn","?","CLASS1","?","CLASS2",")","denotes","the","instances","of","?","CLASS1","that","are","not","also","instances","of","?","CLASS2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':252968).
lisp_trans(documentation(uRelativeComplementFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$SetOrClass","å","\222\","\214\","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","å","·","®","å","¼","\202\","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ï","¼","\214\","æ","\233\","´","ç","¡","®","å","®","\236\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","(","#$RelativeComplementFn","?","CLASS1","?","CLASS2",")","å","¾","\227\","å","\207\","ºå","\234\","¨","?","CLASS1","å","\215\","´","ä","¸","\215\","å","±","\236\","äº","\216\","?","CLASS2","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253250).
lisp_trans(rtUnaryFunction(uComplementFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253525).
lisp_trans(rtTotalValuedRelation(uComplementFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253563).
lisp_trans(argIsa(uComplementFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253607).
lisp_trans(resultIsa(uComplementFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253642).
lisp_trans(documentation(uComplementFn,vEnglishLanguage,s("The","complement","of","a","given","#$SetOrClass","C","is","the","#$SetOrClass","of","all","things","that","are","not","instances","of","C",".","In","other","words",",","an","object","is","an","instance","of","the","complement","of","a","#$SetOrClass","C","just","in","case","it","is","not","an","instance","of","C",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253674).
lisp_trans(documentation(uComplementFn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ªç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$SetOrClass","C","ç","\232\","\204\","è","¡","¥","é","\233\","\206\","ï","¼","\214\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\214\","\205\","å","\220\","«","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\234\","è","¥","¿","ã","\200\","\201\","ä","½","\206\","ä","¸","\215\","å","\214\","\205\","æ","\213\","¬","Cå","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$SetOrClassã","\200\","\202\","æ","\215\","¢","å","\217\","¥","è","¯","\235\","æ","\225\","°","ï","¼","\214\","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","æ","\230\","¯","#$SetOrClass","C","è","¡","¥","é","\233\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ï","¼","\214\","ä","»","¥","é","\230\","²","å","®","\203\","ä","¸","\215\","æ","\230\","¯","C","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':253947).
lisp_trans(rtUnaryFunction(uGeneralizedUnionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254213).
lisp_trans(rtTotalValuedRelation(uGeneralizedUnionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254257).
lisp_trans(argGenl(uGeneralizedUnionFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254307).
lisp_trans(resultIsa(uGeneralizedUnionFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254356).
lisp_trans(documentation(uGeneralizedUnionFn,vEnglishLanguage,s("A","#$UnaryFunction","that","takes","a","#$SetOrClass","of","#$Classes","as","its","single","argument","and","returns","a","#$SetOrClass","which","is","the","merge","of","all","of","the","#$Classes","in","the","original","#$SetOrClass",",","i",".","e",".","the","#$SetOrClass","containing","just","those","instances","which","are","instances","of","an","instance","of","the","original","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254394).
lisp_trans(documentation(uGeneralizedUnionFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\213\","¿","#$Class","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$SetOrClass","ä","¸","ºå","®","\203\","ç","\232\","\204\","å","\215\","\225\","ä","¸","\200\","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","è","¿","\224\","å","\233\","\236\","ç","\224\","±","å","\216\","\237\","æ","\234\","¬","#$SetOrClass","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","#$Class","å","\220\","\210\","å","¹","¶","ä","¸","ºä","¸","\200\","ä","¸","ª","#$SetOrClassï","¼","\214\","å","\215\","³","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$SetOrClass","é","\207\","\214\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\214\","\205\","æ","\213\","¬","å","\217\","ªå","±","\236\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$SetOrClass","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':254747).
lisp_trans(rtUnaryFunction(uGeneralizedIntersectionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255066).
lisp_trans(rtTotalValuedRelation(uGeneralizedIntersectionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255117).
lisp_trans(argGenl(uGeneralizedIntersectionFn,1,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255174).
lisp_trans(resultIsa(uGeneralizedIntersectionFn,tCol),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255230).
lisp_trans(documentation(uGeneralizedIntersectionFn,vEnglishLanguage,s("A","#$UnaryFunction","that","takes","a","#$SetOrClass","of","#$Classes","as","its","single","argument","and","returns","a","#$SetOrClass","which","is","the","intersection","of","all","of","the","#$Classes","in","the","original","#$SetOrClass",",","i",".","e",".","the","#$SetOrClass","containing","just","those","instances","which","are","instances","of","all","instances","of","the","original","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255275).
lisp_trans(documentation(uGeneralizedIntersectionFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\213\","¿","#$Class","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$SetOrClass","ä","¸","ºå","®","\203\","ç","\232\","\204\","å","\215\","\225\","ä","¸","\200\","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","è","¿","\224\","å","\233\","\236\","ç","\224\","±","å","\216\","\237\","æ","\234\","¬","#$SetOrClass","æ","\211\","\200\","æ","\234\","\211\","#$Class","ç","\232\","\204\","äº","¤","é","\233\","\206\","ä","¸","ºä","¸","\200\","ä","¸","ª","#$SetOrClassï","¼","\214\","å","\215\","³","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$SetOrClass","é","\207\","\214\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","å","\217\","ªå","\214\","\205\","æ","\213\","¬","å","\207\","ºç","\216\","°","å","\234\","¨","æ","\211\","\200\","æ","\234\","\211\","å","\216\","\237\","æ","\234\","¬","#$SetOrClass","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255643).
lisp_trans(rtUnaryFunction(vCardinalityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':255978).
lisp_trans(rtTotalValuedRelation(vCardinalityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256017).
lisp_trans(rtAsymmetricRelation(vCardinalityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256062).
lisp_trans(argIsa(vCardinalityFn,1,uUnionFn(tCol,ttSumoCollection)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256106).
lisp_trans(resultIsa(vCardinalityFn,ftNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256163).
lisp_trans(documentation(vCardinalityFn,vEnglishLanguage,s("(","CardinalityFn","?","CLASS",")","returns","the","number","of","instances","in","the","#$SetOrClass","?","CLASS","or","the","number","of","members","in","the","?","CLASS","#$Collection",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256192).
lisp_trans(documentation(tSumoNullSet,vEnglishLanguage,s("Any","#$SetOrClass","that","contains","no","instances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256467).
lisp_trans(documentation(tSumoNullSet,xtChineseLanguage,s("ä","»","»","ä","½","\225\","æ","²","¡","æ","\234\","\211\","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$SetOrClass")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256554).
lisp_trans(=>(tSumoNullSet(SET),not(exists([INST],isa(INST,SET)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256632).
lisp_trans(documentation(tSumoNonNullSet,vEnglishLanguage,s("Any","#$SetOrClass","that","contains","at","least","one","instance",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256807).
lisp_trans(documentation(tSumoNonNullSet,xtChineseLanguage,s("ä","»","»","ä","½","\225\","å","\214\","\205\","å","\220\","«","èµ","·","ç","\240\","\201\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$SetOrClassã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':256906).
lisp_trans(=>(tSumoNonNullSet(SET),exists([INST],isa(INST,SET))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257002).
lisp_trans(genls(tSumoFiniteSet,tSumoSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257080).
lisp_trans(documentation(tSumoFiniteSet,vEnglishLanguage,s("A","#$Set","containing","a","finite","number","of","elements",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257105).
lisp_trans(documentation(tSumoFiniteSet,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\214\","\205\","å","\220\","«","ä","¸","\200\","ç","»","\204\","æ","\234\","\211\","é","\231\","\220\","å","\205\","\203\","ç","´","\240\","ç","\232\","\204\","#$Setã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257198).
lisp_trans(=>(tSumoFiniteSet(SET),exists([NUMBER],and(ftNonnegativeInteger(NUMBER),equal(NUMBER,vCardinalityFn(SET))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257292).
lisp_trans(documentation(ttPairwiseDisjointClass,vEnglishLanguage,s("A","#$SetOrClass","is","a","#$PairwiseDisjointClass","just","in","case","every","instance","of","the","#$SetOrClass","is","either","#$equal","to","or","#$disjoint","from","every","other","instance","of","the","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257560).
lisp_trans(documentation(ttPairwiseDisjointClass,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$SetOrClass","æ","\230\","¯","#$PairwiseDisjointClass","ä","»","¥","é","\230\","²","è","¿","\231\","ä","¸","ª","#$SetOrClass","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","å","\222\","\214\","#$SetOrClass","ä","¸","­","å","\205\","¶","ä","»","\226\","ä","»","»","ä","½","\225\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","æ","\230\","¯","#$equal","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","#$disjoint","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':257790).
lisp_trans(=>(ttPairwiseDisjointClass(SUPERCLASS),all([CLASS1,CLASS2],=>(and(isa(CLASS1,SUPERCLASS),isa(CLASS2,SUPERCLASS)),or(equal(CLASS1,CLASS2),disjointWith(CLASS1,CLASS2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':258027).
lisp_trans(documentation(ttMutuallyDisjointClass,vEnglishLanguage,s("A","#$SetOrClass","is","a","#$MutuallyDisjointClass","just","in","case","there","exists","nothing","which","is","an","instance","of","all","of","the","instances","of","the","original","#$SetOrClass",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':258417).
lisp_trans(documentation(ttMutuallyDisjointClass,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$SetOrClass","å","®","\236\","#$MutuallyDisjointClassï","¼","\214\","ä","»","¥","é","\230\","²","å","¹","¶","æ","²","¡","æ","\234\","\211\","å","±","\236\","äº","\216\","å","\216\","\237\","æ","\235\","¥","ç","\232\","\204\","#$SetOrClass","æ","\211\","\200\","æ","\234\","\211\","å","®","\236\","ä","¾","\213\","ç","\233\","¸","äº","¤","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':258628).
lisp_trans(=>(ttMutuallyDisjointClass(CLASS),all([INST1,INST2],=>(and(isa(INST1,CLASS),isa(INST2,INST1)),exists([INST3],and(isa(INST3,CLASS),not(isa(INST2,INST3))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':258811).
lisp_trans(rtBinaryFunction(uKappaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259119).
lisp_trans(rtPartialValuedRelation(uKappaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259153).
lisp_trans(argIsa(uKappaFn,1,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259194).
lisp_trans(argIsa(uKappaFn,2,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259228).
lisp_trans(resultIsa(uKappaFn,tSet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259255).
lisp_trans(documentation(uKappaFn,vEnglishLanguage,s("A","class","-","forming","operator","that","takes","two","arguments",":","a","variable","and","a","formula","containing","at","least","one","unbound","occurrence","of","the","variable",".","The","result","of","applying","#$KappaFn","to","a","variable","and","a","formula","is","the","#$SetOrClass","of","things","that","satisfy","the","formula",".","For","example",",","we","can","denote","the","#$SetOrClass","of","prime","numbers","that","are","less","than","100","with","the","following","expression",":","(","KappaFn","?","NUMBER","(","and","(","instance","?","NUMBER","PrimeNumber",")","(","lessThan","?","NUMBER","100",")",")",")",".","Note","that","the","use","of","this","function","is","discouraged",",","since","there","is","currently","no","axiomatic","support","for","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259277).
lisp_trans(documentation(uKappaFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","»","\204\","æ","\210\","\220\","ç","±","»","å","\210\","«","ç","\232\","\204\","è","¿","\220\","ç","®","\227\","ç","¬","¦","ï","¼","\214\","å","®","\203\","æ","\213\","¿","ä","¸","¤","ä","¸","ªå","\217\","\202\","æ","\225\","°","ï","¼","\232\","ä","¸","\200\","ä","¸","ªå","\217\","\230\","æ","\225\","°","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","å","\214\","\205\","å","\220\","«","å","±","\236\","äº","\216\","è","¿","\231\","ä","¸","ªå","\217\","\230\","æ","\225\","°","ï","¼","\214\","èµ","·","ç","\240\","\201\","ä","¸","\200\","ä","¸","ªä","¸","\215\","å","\217\","\227\","é","\231\","\220\","å","\210\","¶","ä","¾","\213\","å","­","\220\","ç","\232\","\204\","å","\205\","¬","å","¼","\217\","ã","\200\","\202\","åº","\224\","ç","\224\","¨","#$KappaFn","å","\210\","°","ä","¸","\200\","ä","¸","ªå","\217\","\230\","æ","\225\","°","å","\222\","\214\","ä","¸","\200\","ä","¸","ªå","\205\","¬","å","¼","\217\","ç","\232\","\204\","ç","»","\223\","æ","\236\","\234\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\214\","\205\","å","\220\","«","æ","»","¡","è","¶","³","è","¿","\231\","ä","¸","ªå","\205\","¬","å","¼","\217\","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","#$SetOrClassã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","æ","\210\","\221\","ä","»","¬","ç","\224\","¨","ä","»","¥","ä","¸","\213\","ç","\232\","\204\","æ","\226\","¹","å","¼","\217\","è","¡","¨","è","¾","¾","å","°","\217\","äº","\216\","100","ç","´","\240\","æ","\225\","°","ç","\232\","\204\","#$SetOrClassï","¼","\232\","(","KappaFn","?","NUMBER","(","and","(","instance","?","NUMBER","PrimeNumber",")","(","lessThan","?","NUMBER","100",")",")",")","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¯","·","å","°","½","é","\207\","\217\","é","\201\","¿","å","\205\","\215\","ç","\224\","¨","è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","ï","¼","\214\","å","\233\","\240\","ä","¸","ºç","\233\","®","å","\211\","\215\","è","¿","\230\","æ","²","¡","æ","\234\","\211\","ç","¼","\226\","å","\206\","\231\","å","\205\","¬","ç","\220\","\206\","æ","\235\","¥","æ","\224\","¯","æ","\214\","\201\","å","®","\203\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':259875).
lisp_trans(genls(tSumoGraph,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':261105).
lisp_trans(documentation(tSumoGraph,vEnglishLanguage,s("The","#$Class","of","graphs",",","where","a","graph","is","understood","to","be","a","set","of","#$GraphNodes","connected","by","#$GraphArcs",".","Note","that","this","#$Class","includes","only","connected","graphs",",","i",".","e",".","graphs","in","which","there","is","a","#$GraphPath","between","any","two","#$GraphNodes",".","Note","too","that","every","#$Graph","is","required","to","contain","at","least","two","#$GraphArcs","and","three","#$GraphNodes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':261131).
lisp_trans(documentation(tSumoGraph,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","¾","ç","\232\","\204\","#$Classï","¼","\214\","æ","\210\","\221\","ä","»","¬","å","\217\","¯","ä","»","¥","æ","\212\","\212\","å","\233\","¾","ç","\220\","\206\","è","§","£","æ","\210\","\220\","ä","¸","\200\","ç","»","\204\","ç","\224\","±","#$GraphArc","è","\201\","\224\","ç","³","»","ç","\232\","\204\","#$GraphNodeã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ª","#$Class","å","\217\","ªå","\214\","\205\","æ","\213\","¬","è","¿","\236\","é","\200\","\232\","å","\233\","¾","ï","¼","\214\","å","\215\","³","æ","\230\","¯","ä","¸","¤","ä","¸","ª","#$GraphNode","ä","¹","\213\","é","\227\","´","æ","\234\","\211\","ä","¸","\200\","ä","¸","ª","#$GraphPath","ç","\232\","\204\","å","\233\","¾","ï","¼","\214\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$Graph","é","\234\","\200\","è","¦","\201\","æ","\213\","¥","æ","\234\","\211\","èµ","·","ç","\240\","\201\","ä","¸","¤","ä","¸","ª","#$GraphArc","å","\222\","\214\","ä","¸","\211\","ä","¸","ª","#$GraphNodeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':261507).
lisp_trans(=>(and(tSumoGraph(GRAPH),tSumoGraphNode(NODE1),tSumoGraphNode(NODE2),graphPart(NODE1,GRAPH),graphPart(NODE2,GRAPH),not(equal(NODE1,NODE2))),exists([ARC,PATH],or(links(NODE1,NODE2,ARC),and(subGraph(PATH,GRAPH),tSumoGraphPath(PATH),or(and(equal(uBeginNodeFn(PATH),NODE1),equal(uEndNodeFn(PATH),NODE2)),and(equal(uBeginNodeFn(PATH),NODE2),equal(uEndNodeFn(PATH),NODE1))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':261846).
lisp_trans(=>(tSumoGraph(GRAPH),exists([NODE1,NODE2,NODE3,ARC1,ARC2],and(graphPart(NODE1,GRAPH),graphPart(NODE2,GRAPH),graphPart(NODE3,GRAPH),graphPart(ARC1,GRAPH),graphPart(ARC2,GRAPH),links(NODE1,NODE2,ARC1),links(NODE2,NODE3,ARC2),not(equal(NODE1,NODE2)),not(equal(NODE2,NODE3)),not(equal(NODE1,NODE3)),not(equal(ARC1,ARC2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':262486).
lisp_trans(genls(tDirectedGraph,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':262971).
lisp_trans(documentation(tDirectedGraph,vEnglishLanguage,s("The","#$Class","of","directed","graphs",".","A","directed","graph","is","a","#$Graph","in","which","all","#$GraphArcs","have","direction",",","i",".","e",".","every","#$GraphArc","has","an","initial","node","(","see","#$InitialNodeFn",")","and","a","terminal","node","(","see","#$TerminalNodeFn",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263002).
lisp_trans(documentation(tDirectedGraph,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\234\","\211\","å","\220\","\221\","å","\233\","¾","ç","\232\","\204\","#$Classï","¼","\214\","æ","\234\","\211\","å","\220\","\221\","å","\233\","¾","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","#$GraphArc","é","\203\","½","æ","\234\","\211\","æ","\226\","¹","å","\220\","\221\","ï","¼","\214\","å","\215\","³","æ","\230\","¯","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$GraphArc","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","§","\213\","ç","\202\","¹","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$InitialNodeFn",")","å","\222\","\214\","ä","¸","\200\","ä","¸","ªç","»","\210\","ç","\202\","¹","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$TerminalNodeFn",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263262).
lisp_trans(=>(and(tDirectedGraph(GRAPH),tSumoGraphArc(ARC),graphPart(ARC,GRAPH)),exists([NODE1,NODE2],and(equal(uInitialNodeFn(ARC),NODE1),equal(uTerminalNodeFn(ARC),NODE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263503).
lisp_trans(genls(tSumoTree,tDirectedGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263748).
lisp_trans(documentation(tSumoTree,vEnglishLanguage,s("A","Tree","is","a","#$DirectedGraph","that","has","no","#$GraphLoops",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263778).
lisp_trans(documentation(tSumoTree,xtChineseLanguage,s("æ","\240\","\221\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","²","¡","æ","\234\","\211\","#$GraphLoop","ç","\232\","\204\","#$DirectedGraphã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263871).
lisp_trans(=>(tSumoTree(GRAPH),not(exists([LOOP],and(tSumoGraphLoop(LOOP),graphPart(LOOP,GRAPH))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':263965).
lisp_trans(=>(tSumoTree(GRAPH),not(exists([LOOP],and(tSumoGraphCircuit(LOOP),graphPart(LOOP,GRAPH))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':264105).
lisp_trans(=>(tSumoTree(GRAPH),not(exists([ARC1,ARC2,NODE],and(graphPart(ARC1,GRAPH),graphPart(ARC2,GRAPH),graphPart(NODE,GRAPH),equal(uTerminalNodeFn(ARC1),NODE),equal(uTerminalNodeFn(ARC2),NODE),not(equal(ARC1,ARC2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':264248).
lisp_trans(genls(tSumoGraphPath,tDirectedGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':264555).
lisp_trans(documentation(tSumoGraphPath,vEnglishLanguage,s("Informally",",","a","single",",","directed","route","between","two","#$GraphNodes","in","a","#$Graph",".","Formally",",","a","#$DirectedGraph","that","is","a","#$subGraph","of","the","original","#$Graph","and","such","that","no","two","#$GraphArcs","in","the","#$DirectedGraph","have","the","same","intial","node","(","see","#$InitialNodeFn",")","or","the","same","terminal","node","(","see","#$TerminalNodeFn",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':264590).
lisp_trans(documentation(tSumoGraphPath,xtChineseLanguage,s("é","\235\","\236\","å","½","¢","å","¼","\217\","æ","\235\","¥","è","¯","´","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Graph","ç","\232\","\204\","ä","¸","¤","ä","¸","ª","#$GraphNode","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\215\","\225\","ä","¸","\200\","æ","\234\","\211\","å","\220\","\221\","ç","\232\","\204\","è","·","¯","å","¾","\204\","ã","\200\","\202\","å","½","¢","å","¼","\217\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$DirectedGraphï","¼","\214\","å","®","\203\","æ","\230\","¯","å","\216\","\237\","æ","\235\","¥","ç","\232\","\204\","#$Graph","ç","\232\","\204\","#$subGraphï","¼","\214\","è","\200\","\214\","ä","½","¿","å","¾","\227\","è","¿","\231\","ä","¸","ª","#$DirectedGraph","é","\207\","\214\","æ","²","¡","æ","\234\","\211\","ä","¸","¤","ä","¸","ª","#$GraphArc","æ","\234\","\211\","ç","\235\","\200\","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","å","§","\213\","ç","\202\","¹","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$InitialNodeFn",")","æ","\210\","\226\","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ç","»","\210\","ç","\202\","¹","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$TerminalNodeFn",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':264938).
lisp_trans(=>(and(tSumoGraphPath(GRAPH),tSumoGraphArc(ARC),graphPart(ARC,GRAPH)),=>(equal(uInitialNodeFn(ARC),NODE),not(exists([OTHER],and(equal(uInitialNodeFn(OTHER),NODE),not(equal(OTHER,ARC))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':265326).
lisp_trans(=>(and(tSumoGraphPath(GRAPH),tSumoGraphArc(ARC),graphPart(ARC,GRAPH)),=>(equal(uTerminalNodeFn(ARC),NODE),not(exists([OTHER],and(equal(uTerminalNodeFn(OTHER),NODE),not(equal(OTHER,ARC))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':265617).
lisp_trans(genls(tSumoGraphCircuit,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':265910).
lisp_trans(documentation(tSumoGraphCircuit,vEnglishLanguage,s("A","#$GraphPath","that","begins","(","see","#$BeginNodeFn",")","and","ends","(","see","#$EndNodeFn",")","at","the","same","#$GraphNode",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':265944).
lisp_trans(documentation(tSumoGraphCircuit,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","¼","\200\","å","§","\213\","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$BeginNodeFn",")","å","\222\","\214\","ç","»","\223\","æ","\235\","\237\","(","å","\217\","¯","å","\217\","\202\","è","\200\","\203\","#$EndNodeFn",")","é","\203\","½","å","\234\","¨","å","\220\","\214\","ä","¸","\200\","ä","¸","ª","#$GraphNode","ç","\232\","\204\","#$GraphPathã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266089).
lisp_trans(<=>(tSumoGraphCircuit(GRAPH),exists([NODE],and(equal(uBeginNodeFn(GRAPH),NODE),equal(uEndNodeFn(GRAPH),NODE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266264).
lisp_trans(genls(tSumoMultiGraph,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266423).
lisp_trans(documentation(tSumoMultiGraph,vEnglishLanguage,s("The","#$Class","of","multigraphs",".","A","multigraph","is","a","#$Graph","containing","at","least","one","pair","of","#$GraphNodes","that","are","connected","by","more","than","one","#$GraphArc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266451).
lisp_trans(documentation(tSumoMultiGraph,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¤","\232\","æ","\240\","·","å","\233\","¾","ç","\232\","\204\","#$Classï","¼","\214\","ä","¸","\200\","ä","¸","ªå","¤","\232\","æ","\240\","·","å","\233\","¾","æ","\213\","¥","æ","\234\","\211\","èµ","·","ç","\240\","\201\","ä","¸","\200\","å","¯","¹","è","\201\","\224\","ç","³","»","è","¶","\205\","è","¿","\207\","ä","¸","\200\","ä","¸","ª","#$GraphArc","#$GraphNode","ç","\232\","\204\","#$Graphã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266644).
lisp_trans(<=>(tSumoMultiGraph(GRAPH),exists([ARC1,ARC2,NODE1,NODE2],and(graphPart(ARC1,GRAPH),graphPart(ARC2,GRAPH),graphPart(NODE1,GRAPH),graphPart(NODE2,GRAPH),links(NODE1,NODE2,ARC1),links(NODE1,NODE2,ARC2),not(equal(ARC1,ARC2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':266810).
lisp_trans(genls(tSumoPseudoGraph,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267148).
lisp_trans(documentation(tSumoPseudoGraph,vEnglishLanguage,s("The","#$Class","of","pseudographs",".","A","pseudograph","is","a","#$Graph","containing","at","least","one","#$GraphLoop",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267177).
lisp_trans(documentation(tSumoPseudoGraph,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¼","ªå","\233\","¾","ç","\232\","\204\","#$Classï","¼","\214\","ä","¸","\200\","ä","¸","ªä","¼","ªå","\233\","¾","æ","\230\","¯","æ","\213\","¥","æ","\234\","\211\","èµ","·","ç","\240\","\201\","ä","¸","\200\","ä","¸","ª","#$GraphLoop","ç","\232\","\204\","#$Graphã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267317).
lisp_trans(<=>(tSumoPseudoGraph(GRAPH),exists([LOOP],and(tSumoGraphLoop(LOOP),graphPart(LOOP,GRAPH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267453).
lisp_trans(genls(tSumoGraphElement,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267595).
lisp_trans(sumo_partition(tSumoGraphElement,tSumoGraphNode,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267628).
lisp_trans(documentation(tSumoGraphElement,vEnglishLanguage,s("Noncompositional","parts","of","#$Graphs",".","These","parts","are","restricted","to","#$GraphNodes","and","#$GraphArcs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267672).
lisp_trans(documentation(tSumoGraphElement,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Graph","ç","\232\","\204\","é","\235\","\236\","ç","»","\204\","æ","\210\","\220\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","è","¿","\231\","äº","\233\","é","\203\","¨","å","\210\","\206\","é","\231\","\220\","äº","\216\","#$GraphNode","å","\222\","\214\","#$GraphArcã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267815).
lisp_trans(=>(tSumoGraphElement(PART),exists([GRAPH],and(tSumoGraph(GRAPH),graphPart(PART,GRAPH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':267948).
lisp_trans(genls(tSumoGraphNode,tSumoGraphElement),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268087).
lisp_trans(documentation(tSumoGraphNode,vEnglishLanguage,'Graphs are comprised of #$GraphNodes and #$GraphArcs.  Every #$GraphNode is linked by a #$GraphArc.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268121).
lisp_trans(documentation(tSumoGraphNode,xtChineseLanguage,'Graph æ\230\¯ç\224\± #$GraphNode å\222\\214\ #$GraphArc ç»\204\æ\210\\220\ï¼\214\æ\211\\200\æ\234\\211\ç\232\\204\ #$GraphNode é\203\½æ\230\¯ç\224\± #$GraphArc è\201\\224\ç³»ç\232\\204\.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268267).
lisp_trans(=>(tSumoGraphNode(NODE),exists([OTHER,ARC],links(NODE,OTHER,ARC))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268417).
lisp_trans(genls(tSumoGraphArc,tSumoGraphElement),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268511).
lisp_trans(documentation(tSumoGraphArc,vEnglishLanguage,'Graphs are comprised of #$GraphNodes and #$GraphArcs.  Every #$GraphArc links two #$GraphNodes.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268544).
lisp_trans(documentation(tSumoGraphArc,xtChineseLanguage,'Graph æ\230\¯ç\224\± #$GraphNode å\222\\214\ #$GraphArc ç»\204\æ\210\\220\ï¼\214\æ¯\217\ä¸ª #$GraphArc é\203\½ä¼\232\è\201\\224\ç³»ä¸¤ä¸ª #$GraphNodeã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268685).
lisp_trans(=>(tSumoGraphArc(ARC),exists([NODE1,NODE2],links(NODE1,NODE2,ARC))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268832).
lisp_trans(genls(tSumoGraphLoop,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268927).
lisp_trans(documentation(tSumoGraphLoop,vEnglishLanguage,s("A","#$GraphArc","in","which","a","#$GraphNode","is","linked","to","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':268957).
lisp_trans(documentation(tSumoGraphLoop,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\224\","±","#$GraphNode","è","\201\","\224\","ç","³","»","ç","\235\","\200\","è","\207\","ªå","·","±","ç","\232\","\204\","#$GraphArcã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269058).
lisp_trans(<=>(tSumoGraphLoop(LOOP),exists([NODE],links(NODE,NODE,LOOP))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269164).
lisp_trans(=>(and(equal(uInitialNodeFn(ARC),NODE),equal(uTerminalNodeFn(ARC),NODE)),tSumoGraphLoop(ARC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269253).
lisp_trans(rtTernaryPredicate(links),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269380).
lisp_trans(argIsa(links,1,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269414).
lisp_trans(argIsa(links,2,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269441).
lisp_trans(argIsa(links,3,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269468).
lisp_trans(documentation(links,vEnglishLanguage,s("a","#$TernaryPredicate","that","specifies","the","#$GraphArc","connecting","two","#$GraphNodes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269494).
lisp_trans(documentation(links,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TernaryPredicateï","¼","\214\","å","®","\203\","æ","\214\","\207\","å","®","\232\","è","\201\","\224\","ç","³","»","ä","¸","¤","ä","¸","ª","#$GraphNode","ç","\232\","\204\","#$GraphArcã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269614).
lisp_trans(=>(links(NODE1,NODE2,ARC),links(NODE2,NODE1,ARC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269742).
lisp_trans(rtBinaryPredicate(graphPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269808).
lisp_trans(rtAsymmetricRelation(graphPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269845).
lisp_trans(rtTotalValuedRelation(graphPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269885).
lisp_trans(rtIrreflexiveRelation(graphPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269926).
lisp_trans(argIsa(graphPart,1,tSumoGraphElement),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':269967).
lisp_trans(argIsa(graphPart,2,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270001).
lisp_trans(documentation(graphPart,vEnglishLanguage,s("A","basic","relation","for","#$Graphs","and","their","parts",".","(","#$graphPart","?","PART","?","GRAPH",")","means","that","?","PART","is","a","#$GraphArc","or","#$GraphNode","of","the","#$Graph","?","GRAPH",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270028).
lisp_trans(documentation(graphPart,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Graph","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","å","\205\","³","ç","³","»","ã","\200\","\202\","(","#$graphPart","?","PART","?","GRAPH",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","PART","æ","\230\","¯","#$Graph","?","GRAPH","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$GraphArc","æ","\210\","\226\","#$GraphNodeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270218).
lisp_trans(rtBinaryPredicate(subGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270428).
lisp_trans(rtReflexiveRelation(subGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270464).
lisp_trans(rtTransitiveRelation(subGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270502).
lisp_trans(argIsa(subGraph,1,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270541).
lisp_trans(argIsa(subGraph,2,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270567).
lisp_trans(documentation(subGraph,vEnglishLanguage,s("The","relation","between","two","#$Graphs","when","one","#$Graph","is","a","part","of","the","other",".","(","#$subGraph","?","GRAPH1","?","GRAPH2",")","means","that","?","GRAPH1","is","a","part","of","?","GRAPH2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270593).
lisp_trans(documentation(subGraph,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","½","¢","å","®","¹","ä","¸","¤","ä","¸","ª","#$Graphï","¼","\214\","è","\200\","\214\","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªå","\233\","¾","æ","\230\","¯","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªå","\233\","¾","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","æ","\227\","¶","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","(","#$subGraph","?","GRAPH1","?","GRAPH2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","GRAPH1","æ","\230\","¯","?","GRAPH2","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270781).
lisp_trans(=>(and(subGraph(GRAPH1,GRAPH2),graphPart(ELEMENT,GRAPH1)),graphPart(ELEMENT,GRAPH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':270995).
lisp_trans(rtBinaryPredicate(pathLength),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271104).
lisp_trans(rtAsymmetricRelation(pathLength),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271142).
lisp_trans(rtIrreflexiveRelation(pathLength),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271183).
lisp_trans(argIsa(pathLength,1,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271225).
lisp_trans(argIsa(pathLength,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271257).
lisp_trans(documentation(pathLength,vEnglishLanguage,s("A","#$BinaryPredicate","that","specifies","the","length","(","in","number","of","#$GraphNodes",")","of","a","#$GraphPath",".","(","#$pathLength","?","PATH","?","NUMBER",")","means","that","there","are","?","NUMBER","nodes","in","the","#$GraphPath","?","PATH",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271295).
lisp_trans(documentation(pathLength,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","æ","\214\","\207\","å","®","\232\","ä","¸","\200\","ä","¸","ª","#$GraphPath","ç","\232\","\204\","é","\225\","¿","åº","¦","(","ä","»","¥","#$GraphNode","ä","»","¥","ç","\232\","\204\","æ","\225\","°","é","\207\","\217\",")","ï","¼","\214\","(","#$pathLength","?","PATH","?","NUMBER",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","#$GraphPath","?","PATH","ä","¸","\212\","æ","\234\","\211\","?","NUMBER","ç","\232\","\204\","è","\212\","\202\","ç","\202\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271522).
lisp_trans(rtUnaryFunction(uInitialNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271761).
lisp_trans(rtPartialValuedRelation(uInitialNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271800).
lisp_trans(argIsa(uInitialNodeFn,1,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271847).
lisp_trans(resultIsa(uInitialNodeFn,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271881).
lisp_trans(documentation(uInitialNodeFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$GraphArc","to","the","initial","node","of","the","#$GraphArc",".","Note","that","this","is","a","partial","function",".","In","particular",",","the","function","is","undefined","for","#$GraphArcs","that","are","not","part","of","a","#$DirectedGraph",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':271913).
lisp_trans(documentation(uInitialNodeFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphArc","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$GraphArcç","\232\","\204\","å","§","\213\","ç","\202\","¹","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ï","¼","\214\","ç","\211\","¹","å","\210\","«","æ","\230\","¯","å","½","\223\","#$GraphArc","ä","¸","\215\","å","±","\236\","äº","\216\","#$DirectedGraph","æ","\227\","¶","ï","¼","\214\","è","¿","\231\","ä","¼","\232\","æ","\230\","¯","ä","¸","ªä","¸","ºå","®","\232\","ä","¹","\211\","ç","\232\","\204\","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272178).
lisp_trans(rtUnaryFunction(uTerminalNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272451).
lisp_trans(rtPartialValuedRelation(uTerminalNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272491).
lisp_trans(argIsa(uTerminalNodeFn,1,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272539).
lisp_trans(resultIsa(uTerminalNodeFn,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272574).
lisp_trans(documentation(uTerminalNodeFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$GraphArc","to","the","terminal","node","of","the","#$GraphArc",".","Note","that","this","is","a","partial","function",".","In","particular",",","the","function","is","undefined","for","#$GraphArcs","that","are","not","part","of","a","#$DirectedGraph",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272607).
lisp_trans(documentation(uTerminalNodeFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphArc","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$GraphArcç","\232\","\204\","ç","»","\210\","ç","\202\","¹","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","å","\207\","½","æ","\225\","°","ï","¼","\214\","ç","\211\","¹","å","\210\","«","æ","\230\","¯","å","½","\223\","#$GraphArc","ä","¸","\215\","å","±","\236\","äº","\216\","#$DirectedGraph","æ","\227\","¶","ï","¼","\214\","è","¿","\231\","ä","¼","\232\","æ","\230\","¯","ä","¸","ªä","¸","ºå","®","\232\","ä","¹","\211\","ç","\232\","\204\","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':272874).
lisp_trans(rtUnaryFunction(uBeginNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273150).
lisp_trans(rtTotalValuedRelation(uBeginNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273187).
lisp_trans(argIsa(uBeginNodeFn,1,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273230).
lisp_trans(resultIsa(uBeginNodeFn,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273263).
lisp_trans(relatedInternalConcept(uBeginNodeFn,uInitialNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273293).
lisp_trans(documentation(uBeginNodeFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$GraphPath","to","the","#$GraphNode","that","is","the","beginning","of","the","#$GraphPath",".","Note","that",",","unlike","#$InitialNodeFn","(","which","relates","a","#$GraphArc","to","a","#$GraphNode",")",",","#$BeginNodeFn","is","a","total","function","-","every","#$GraphPath","has","a","beginning",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273344).
lisp_trans(documentation(uBeginNodeFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphPath","è","\201\","\224\","ç","³","»","å","\210\","°","#$GraphPath","å","¼","\200\","ç","«","¯","ç","\232\","\204\","#$GraphNodeã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","·","\237\","#$InitialNodeFn","ä","¸","\215\","å","\220\","\214\","(","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphArc","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$GraphNode","è","\201\","\224\","ç","³","»",")","ï","¼","\214\","#$BeginNodeFn","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\200\","»","ä","½","\223\","ç","\232\","\204\","å","\207\","½","æ","\225\","°","-","æ","¯","\217\","ä","¸","ª","#$GraphPath","é","\203\","½","æ","\234\","\211\","å","®","\203\","ç","\232\","\204\","å","¼","\200\","ç","«","¯","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273646).
lisp_trans(rtUnaryFunction(uEndNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':273966).
lisp_trans(rtTotalValuedRelation(uEndNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274001).
lisp_trans(argIsa(uEndNodeFn,1,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274042).
lisp_trans(resultIsa(uEndNodeFn,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274073).
lisp_trans(relatedInternalConcept(uEndNodeFn,uTerminalNodeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274101).
lisp_trans(documentation(uEndNodeFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$GraphPath","to","the","#$GraphNode","that","is","the","end","of","the","#$GraphPath",".","Note","that",",","unlike","#$TerminalNodeFn","(","which","relates","a","#$GraphArc","to","a","#$GraphNode",")",",","#$EndNodeFn","is","a","total","function","-","every","#$GraphPath","has","a","end",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274151).
lisp_trans(documentation(uEndNodeFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphPath","å","\222\","\214\","#$GraphPath","æ","\234\","«","ç","«","¯","ç","\232\","\204\","#$GraphNodeã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\222\","\214\","#$TerminalNodeFnä","¸","\215\","å","\220\","\214\","(","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphArc","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$GraphNode","è","\201\","\224\","ç","³","»",")","ï","¼","\214\","#$EndNodeFn","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\200\","»","ä","½","\223\","ç","\232\","\204\","å","\207\","½","æ","\225\","°","-","æ","¯","\217\","ä","¸","ª","#$GraphPath","é","\203\","½","æ","\234\","\211\","å","®","\203\","ç","\232\","\204\","æ","\234\","«","ç","«","¯","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274438).
lisp_trans(rtBinaryPredicate(arcWeight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274746).
lisp_trans(rtSingleValuedRelation(arcWeight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274783).
lisp_trans(argIsa(arcWeight,1,tSumoGraphArc),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274825).
lisp_trans(argIsa(arcWeight,2,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274855).
lisp_trans(documentation(arcWeight,vEnglishLanguage,s("This","predicate","indicates","the","value","of","a","#$GraphArc","in","a","#$Graph",".","This","could","map","to","the","length","of","a","road","in","a","road","network","or","the","flow","rate","of","a","pipe","in","a","plumbing","system",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':274885).
lisp_trans(documentation(arcWeight,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªè","°","\223\","è","¯","\215\","è","¡","¨","ç","¤","º","#$GraphArc","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$Graph","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\","è","¿","\231\","å","\217\","¯","ä","»","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ªé","\201\","\223\","è","·","¯","ç","½","\221\","ç","»","\234\","ç","\232\","\204\","é","\225\","¿","åº","¦","ï","¼","\214\","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","ç","®","¡","é","\201\","\223\","ç","³","»","ç","»","\237\","å","\206\","\205\","ç","®","¡","é","\201\","\223\","ç","\232\","\204\","æµ","\201\","é","\207\","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275101).
lisp_trans(rtUnaryFunction(uPathWeightFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275293).
lisp_trans(argIsa(uPathWeightFn,1,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275331).
lisp_trans(resultIsa(uPathWeightFn,vtQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275365).
lisp_trans(documentation(uPathWeightFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$GraphPath","to","the","sum","of","the","#$arcWeights","on","the","#$GraphArcs","in","the","#$GraphPath",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275395).
lisp_trans(documentation(uPathWeightFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$GraphPath","è","\201\","\224\","ç","³","»","å","\210\","°","å","\234\","¨","è","¿","\231\","æ","\235\","¡","#$GraphPath","#$GraphArcs","ä","¸","\212\","ç","\232\","\204\","#$arcWeight","æ","\200\","»","å","\222\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275554).
lisp_trans(=>(and(equal(uPathWeightFn(PATH),SUM),subGraph(SUBPATH,PATH),graphPart(ARC1,PATH),arcWeight(ARC1,NUMBER1),all([ARC2],=>(graphPart(ARC2,PATH),or(graphPart(ARC2,SUBPATH),equal(ARC2,ARC1))))),equal(SUM,uAdditionFn(uPathWeightFn(SUBPATH),NUMBER1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':275731).
lisp_trans(=>(and(equal(uPathWeightFn(PATH),SUM),graphPart(ARC1,PATH),graphPart(ARC2,PATH),arcWeight(ARC1,NUMBER1),arcWeight(ARC2,NUMBER2),all([ARC3],=>(graphPart(ARC3,PATH),or(equal(ARC3,ARC1),equal(ARC3,ARC2))))),equal(uPathWeightFn(PATH),uAdditionFn(NUMBER1,NUMBER2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276110).
lisp_trans(rtBinaryFunction(uMinimalWeightedPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276514).
lisp_trans(rtTotalValuedRelation(uMinimalWeightedPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276562).
lisp_trans(argIsa(uMinimalWeightedPathFn,1,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276615).
lisp_trans(argIsa(uMinimalWeightedPathFn,2,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276658).
lisp_trans(resultIsa(uMinimalWeightedPathFn,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276701).
lisp_trans(documentation(uMinimalWeightedPathFn,vEnglishLanguage,s("This","#$BinaryFunction","assigns","two","#$GraphNodes","to","the","#$GraphPath","with","the","smallest","sum","of","weighted","arcs","between","the","two","#$GraphNodes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276741).
lisp_trans(documentation(uMinimalWeightedPathFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","ä","»","¥","ä","¸","¤","ä","¸","ª","#$GraphNode","ä","¹","\213\","é","\227\","´","å","¼","§","è","¡","¡","é","\207\","\217\","æ","\200\","»","å","\222\","\214\","ç","\232\","\204\","æ","\234\","\200\","å","°","\217\","å","\200\","¼","ï","¼","\214\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$GraphNode","å","\210\","\206\","é","\205\","\215\","å","\210\","°","#$GraphPath","ä","¸","\212\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':276932).
lisp_trans(=>(equal(uMinimalWeightedPathFn(NODE1,NODE2),PATH),isa(PATH,uGraphPathFn(NODE1,NODE2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277134).
lisp_trans(=>(and(equal(uMinimalWeightedPathFn(NODE1,NODE2),PATH),equal(uPathWeightFn(PATH),NUMBER1)),all([PATH2],=>(and(isa(PATH2,uGraphPathFn(NODE1,NODE2)),equal(uPathWeightFn(PATH2),NUMBER2)),greaterThanOrEqualTo(NUMBER2,NUMBER1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277243).
lisp_trans(rtBinaryFunction(uMaximalWeightedPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277566).
lisp_trans(rtTotalValuedRelation(uMaximalWeightedPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277614).
lisp_trans(argIsa(uMaximalWeightedPathFn,1,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277667).
lisp_trans(argIsa(uMaximalWeightedPathFn,2,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277710).
lisp_trans(resultIsa(uMaximalWeightedPathFn,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277753).
lisp_trans(documentation(uMaximalWeightedPathFn,vEnglishLanguage,s("This","#$BinaryFunction","assigns","two","#$GraphNodes","to","the","#$GraphPath","with","the","largest","sum","of","weighted","arcs","between","the","two","#$GraphNodes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277793).
lisp_trans(documentation(uMaximalWeightedPathFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","ä","»","¥","ä","¸","¤","ä","¸","ª","#$GraphNode","ä","¹","\213\","é","\227\","´","å","¼","§","è","¡","¡","é","\207\","\217\","æ","\200\","»","å","\222\","\214\","ç","\232\","\204\","æ","\234\","\200\","å","¤","§","å","\200\","¼","ï","¼","\214\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$GraphNode","å","\210\","\206\","é","\205\","\215\","å","\210\","°","#$GraphPath","ä","¸","\212\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':277983).
lisp_trans(=>(equal(uMaximalWeightedPathFn(NODE1,NODE2),PATH),isa(PATH,uGraphPathFn(NODE1,NODE2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278185).
lisp_trans(=>(and(equal(uMaximalWeightedPathFn(NODE1,NODE2),PATH),equal(uPathWeightFn(PATH),NUMBER1)),all([PATH2],=>(and(isa(PATH2,uGraphPathFn(NODE1,NODE2)),equal(uPathWeightFn(PATH2),NUMBER2)),lessThanOrEqualTo(NUMBER2,NUMBER1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278294).
lisp_trans(rtBinaryFunction(uGraphPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278614).
lisp_trans(rtTotalValuedRelation(uGraphPathFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278652).
lisp_trans(argIsa(uGraphPathFn,1,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278695).
lisp_trans(argIsa(uGraphPathFn,2,tSumoGraphNode),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278728).
lisp_trans(resultGenl(uGraphPathFn,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278761).
lisp_trans(documentation(uGraphPathFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","two","#$GraphNodes","to","the","#$Class","of","#$GraphPaths","between","those","two","nodes",".","Note","that","the","two","#$GraphNodes","must","belong","to","the","same","#$Graph",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':278799).
lisp_trans(documentation(uGraphPathFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","¤","ä","¸","ª","#$GraphNode","è","\201\","\224\","ç","³","»","å","\210\","°","è","¿","\231\","ä","¸","¤","ä","¸","ªè","\212\","\202\","ç","\202\","¹","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$GraphPath","#$Classã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$GraphNode","å","¿","\205\","é","¡","»","å","±","\236\","äº","\216\","å","\220\","\214\","ä","¸","\200\","ä","¸","ª","#$Graphã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279012).
lisp_trans(=>(and(graphPart(PATH,GRAPH),not(tDirectedGraph(GRAPH))),<=>(equal(uGraphPathFn(NODE1,NODE2),PATH),equal(uGraphPathFn(NODE2,NODE1),PATH))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279233).
lisp_trans(rtUnaryFunction(uCutSetFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279428).
lisp_trans(argIsa(uCutSetFn,1,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279462).
lisp_trans(resultGenl(uCutSetFn,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279488).
lisp_trans(documentation(uCutSetFn,vEnglishLanguage,s("A","#$UnaryFunction","that","assigns","a","#$Graph","the","#$Class","of","#$GraphPaths","that","partition","the","graph","into","two","separate","graphs","if","cut",".","There","may","be","more","than","one","cutset","for","a","given","graph",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279523).
lisp_trans(documentation(uCutSetFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","\234\","¨","è","¦","\201\","å","\210\","\207\","å","¼","\200\","ä","¸","\200\","ä","¸","ª","#$Graph","ç","\232\","\204\","æ","\227\","¶","å","\200\","\231\","ï","¼","\214\","å","®","\203\","ä","¼","\232\","ç","»","\231\","è","¿","\231\","ä","¸","ªå","\233\","¾","å","\210\","\206\","é","\205\","\215\","æ","\212\","\212\","å","®","\203\","å","\210\","\222\","å","\210\","\206\","ä","¸","ºä","¸","¤","ç","\232\","\204\","#$GraphPath","#$Classã","\200\","\202\","å","\220\","\214\","ä","¸","\200\","ä","¸","ªå","\233\","¾","å","\217\","¯","ä","»","¥","æ","\234\","\211\","å","¤","\232\","ç","§","\215\","å","\210\","\206\","å","\211\","²","ç","\232\","\204\","ç","»","\204\","å","\220\","\210\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279747).
lisp_trans(rtUnaryFunction(uMinimalCutSetFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':279977).
lisp_trans(argIsa(uMinimalCutSetFn,1,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280018).
lisp_trans(resultGenl(uMinimalCutSetFn,tSumoGraphPath),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280051).
lisp_trans(relatedInternalConcept(uMinimalCutSetFn,uCutSetFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280093).
lisp_trans(documentation(uMinimalCutSetFn,vEnglishLanguage,s("A","#$UnaryFunction","that","assigns","a","#$Graph","the","#$Class","of","#$GraphPaths","which","comprise","cutsets","for","the","#$Graph","and","which","have","the","least","number","of","#$GraphArcs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280143).
lisp_trans(documentation(uMinimalCutSetFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","ä","»","¥","æ","\234\","\200\","å","°","\221\","æ","\235\","¡","#$GraphArc","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Graph","å","\210\","\222\","å","\210\","\206\","ç","\232\","\204\","å","\210\","\206\","å","\211\","²","ç","»","\204\","å","\220\","\210\","ï","¼","\214\","ç","»","\231\","è","¿","\231\","ä","¸","ª","#$Graph","å","\210\","\206\","é","\205\","\215\","#$GraphPath","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280349).
lisp_trans(=>(tSumoGraph(GRAPH),genls(uMinimalCutSetFn(GRAPH),uCutSetFn(GRAPH))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280549).
lisp_trans(=>(equal(uMinimalCutSetFn(GRAPH),PATHCLASS),exists([NUMBER],all([PATH],=>(isa(PATH,PATHCLASS),pathLength(PATH,NUMBER))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280639).
lisp_trans(not(exists([PATH1,PATH2],and(isa(PATH1,uCutSetFn(GRAPH)),isa(PATH2,uMinimalCutSetFn(GRAPH)),pathLength(PATH1,NUMBER1),pathLength(PATH2,NUMBER2),lessThan(NUMBER1,NUMBER2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':280830).
lisp_trans(rtBinaryPredicate(abstractCounterpart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281121).
lisp_trans(argIsa(abstractCounterpart,1,tSumoAbstract),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281168).
lisp_trans(argIsa(abstractCounterpart,2,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281208).
lisp_trans(genlPreds(abstractCounterpart,represents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281248).
lisp_trans(documentation(abstractCounterpart,vEnglishLanguage,s("(","abstractCounterpart","?","AB","?","PHYS",")","relates","a","#$Physical","entity","to","an","#$Abstract","one","which","is","an","idealized","model","in","some","dimension","of","the","#$Physical","entity",".","For","example",",","an","#$Abstract","#$GraphNode","could","be","stated","to","be","the","counterpart","of","an","actual","#$Computer","in","a","#$ComputerNetwork",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281293).
lisp_trans(documentation(abstractCounterpart,xtChineseLanguage,s("(","abstractCounterpart","?","AB","?","PHYS",")","å","®","\203\","ä","¸","\200\","ä","¸","ª","#$Physical","å","®","\236\","ä","½","\223\","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$Physical","entity","å","\234\","¨","æ","\237\","\220\","äº","\233\","ç","»","´","åº","¦","ç","\232\","\204\","ç","\220\","\206\","æ","\203\","³","æ","¨","¡","å","¼","\217\","ç","\232\","\204\","#$Abstract","è","\201\","\224\","ç","³","»","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$Abstract","#$GraphNode","å","\217\","¯","ä","»","¥","è","¡","¨","è","¾","¾","ä","¸","º","#$ComputerNetwork","é","\207\","\214\","ä","¸","\200\","ä","¸","ªå","®","\236\","é","\231\","\205\","#$Computer","ç","\232\","\204\","å","¯","¹","åº","\224\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281626).
lisp_trans(genls(tPhysicalSystem,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281929).
lisp_trans(documentation(tPhysicalSystem,vEnglishLanguage,'PhysicalSystem is the class of complex #$Physical things.  A #$PhysicalSystem may have one or more corresponding abstract #$Graph representations.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':281964).
lisp_trans(documentation(tPhysicalSystem,xtChineseLanguage,'PhysicalSystem æ\230\¯ä¸\200\ç±»å¤\215\æ\235\\202\ç\232\\204\ #$Physical ç\211\©ä½\223\ï¼\214\ ä¸\200\ä¸ª #$PhysicalSystem å\217\¯ä»¥æ\234\\211\ä¸\200\ä¸ªæ\210\\226\ä¸\200\ä¸ªä»¥ä¸\212\ç\232\\204\å¯¹åº\224\æ\212\½è±¡ #$Graph ç\232\\204\ä»£è¡¨ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282162).
lisp_trans(rtBinaryPredicate(subSystem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282360).
lisp_trans(argIsa(subSystem,1,tPhysicalSystem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282397).
lisp_trans(argIsa(subSystem,2,tPhysicalSystem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282433).
lisp_trans(documentation(subSystem,vEnglishLanguage,s("(","#$subSystem","?","SUB","?","SYSTEM",")","means","that","the","#$PhysicalSystem","?","SUB","is","a","part","of","the","#$PhysicalSystem","?","SYSTEM",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282470).
lisp_trans(documentation(subSystem,xtChineseLanguage,s("(","#$subSystem","?","SUB","?","SYSTEM",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$PhysicalSystem","?","SUB","æ","\230\","¯","#$PhysicalSystem","?","SYSTEM","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282621).
lisp_trans(rtBinaryPredicate(systemPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282773).
lisp_trans(argIsa(systemPart,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282811).
lisp_trans(argIsa(systemPart,2,tPhysicalSystem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282842).
lisp_trans(documentation(systemPart,vEnglishLanguage,s("(","#$systemPart","?","PART","?","SYSTEM",")","means","that","the","#$Physical","thing","?","PART","is","a","#$SystemElement","in","the","#$PhysicalSystem","?","SYSTEM",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':282880).
lisp_trans(documentation(systemPart,xtChineseLanguage,s("(","#$systemPart","?","PART","?","SYSTEM",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Physical","ç","\211\","©","ä","½","\223\","?","PART","æ","\230\","¯","#$PhysicalSystem","?","SYSTEM","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$SystemElementã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283046).
lisp_trans(=>(and(subSystem(SUB,SYSTEM),systemPart(PART,SUB)),systemPart(PART,SYSTEM)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283216).
lisp_trans(rtBinaryPredicate(graphMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283316).
lisp_trans(argIsa(graphMeasure,1,tSumoGraph),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283356).
lisp_trans(argIsa(graphMeasure,2,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283386).
lisp_trans(documentation(graphMeasure,vEnglishLanguage,s("(","graphMeasure","?","GRAPH","?","MEAS",")","fixes","a","#$UnitOfMeasure","that","is","used","for","the","#$arcWeight","of","a","given","#$Graph",".","Stating","such","a","relationship","entails","that","the","components","of","given","graph","are","the","#$abstractCounterparts","of","sets","of","#$Physical","#$Entity","(","ies",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283424).
lisp_trans(documentation(graphMeasure,xtChineseLanguage,s("(","graphMeasure","?","GRAPH","?","MEAS",")","ç","»","\231\","ä","¸","\200\","ä","¸","ª","#$Graph","ç","\232\","\204\","#$arcWeight","è","®","¾","å","®","\232\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasureã","\200\","\202\","è","¯","´","æ","\230\","\216\","è","¿","\231\","ä","¸","ªå","\205\","³","ç","³","»","æ","\204\","\217\","å","\221\","³","ç","\235\","\200\","æ","\237\","\220\","ä","¸","ªå","\233\","¾","ç","\232\","\204\","å","\205\","\203\","ä","»","¶","ï","¼","\214\","æ","\230\","¯","#$Physical","#$Entity","é","\233\","\206\","å","\220\","\210\","é","\207\","\214\","ç","\232\","\204\","#$abstractCounterpartã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283716).
lisp_trans(=>(graphMeasure(G,M),all([AC],and(graphPart(AC,G),exists([PC],abstractCounterpart(AC,PC))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':283966).
lisp_trans(=>(and(graphMeasure(G,M),tSumoGraphNode(AN),tSumoGraphArc(AA),abstractCounterpart(AN,PN),abstractCounterpart(AA,PA),arcWeight(AA,uMeasureFn(N,M))),measure(PA,uMeasureFn(N,M))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':284105).
lisp_trans(genls(ttUnitOfMeasure,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285063).
lisp_trans(documentation(ttUnitOfMeasure,vEnglishLanguage,s("A","standard","of","measurement","for","some","dimension",".","For","example",",","the","#$Meter","is","a","#$UnitOfMeasure","for","the","dimension","of","length",",","as","is","the","#$Inch",".","There","is","no","intrinsic","property","of","a","#$UnitOfMeasure","that","makes","it","primitive","or","fundamental",",","rather",",","a","system","of","units","(","e",".","g",".","#$SystemeInternationalUnit",")","defines","a","set","of","orthogonal","dimensions","and","assigns","units","for","each",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285105).
lisp_trans(documentation(ttUnitOfMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\237\","\220\","äº","\233\","é","\207\","\217\","ä","\213\","\236\","ç","\232\","\204\","é","\207\","\217\","åº","¦","æ","\240\","\207\","å","\207\","\206\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$Meter","å","\222\","\214\","#$Inch","æ","\230\","¯","é","\225\","¿","åº","¦","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\","#$UnitOfMeasure","æ","²","¡","æ","\234\","\211\","ä","»","¤","å","®","\203\","å","\216\","\237\","å","§","\213\","å","\222\","\214\","å","\237\","ºæ","\234\","¬","ç","\232\","\204\","å","\233\","ºæ","\234\","\211\","æ","\200\","§","è","´","¨",",","å","\217\","\215\","è","\200\","\214\","ä","¸","\200\","ä","¸","ªå","\215\","\225\","ä","½","\215\","å","\210\","¶","(","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$SystemeInternationalUnit",")","å","\217\","¯","å","\206\","³","å","®","\232\","ä","¸","\200\","ç","»","\204\","ç","\232\","\204\","æ","­","£","äº","¤","ç","»","´","åº","¦","ï","¼","\214\","å","¹","¶","ç","»","\231\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªç","»","´","åº","¦","å","\210\","\206\","é","\205\","\215\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285512).
lisp_trans(genls(ttCompositeUnitOfMeasure,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285846).
lisp_trans(genls(ttCompositeUnitOfMeasure,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285894).
lisp_trans(documentation(ttCompositeUnitOfMeasure,vEnglishLanguage,s("Instances","of","this","#$Class","are","#$UnitsOfMeasure","defined","by","the","functional","composition","of","other","units",",","each","of","which","might","be","a","#$CompositeUnitOfMeasure","or","a","#$NonCompositeUnitOfMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':285945).
lisp_trans(documentation(ttCompositeUnitOfMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","±","å","\205\","¶","ä","»","\226\","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","å","¤","\215\","å","\220\","\210\","å","\207\","½","æ","\225\","°","æ","\211\","\200\","å","\206\","³","å","®","\232\","ç","\232\","\204\","#$UnitsOfMeasure","#$Class","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ï","¼","\214\","å","½","\223\","ä","¸","­","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªå","\217\","¯","ä","»","¥","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$CompositeUnitOfMeasure","æ","\210\","\226\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$NonCompositeUnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286187).
lisp_trans(genls(ttNonCompositeUnitOfMeasure,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286435).
lisp_trans(genls(ttNonCompositeUnitOfMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286486).
lisp_trans(documentation(ttNonCompositeUnitOfMeasure,vEnglishLanguage,s("Instances","of","this","#$Class","are","#$UnitsOfMeasure","that","are","applied","to","a","single","dimension",",","and","so","are","not","intrinsically","defined","by","the","functional","composition","of","other","units",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286540).
lisp_trans(documentation(ttNonCompositeUnitOfMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","åº","\224\","ç","\224\","¨","å","\215\","\225\","ä","¸","\200\","ç","»","´","åº","¦","ç","\232\","\204\","#$UnitsOfMeasure","#$Class","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ï","¼","\214\","å","\233\","\240\","æ","­","¤","å","®","\203\","ä","¸","\215\","æ","\230\","¯","ç","\224\","±","å","\205\","¶","ä","»","\226\","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","å","¤","\215\","å","\220\","\210\","å","\207\","½","æ","\225\","°","å","\234\","¨","æ","\234\","¬","è","´","¨","ä","¸","\212\","å","\206\","³","å","®","\232\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286770).
lisp_trans(sumo_partition(ttUnitOfMeasure,ttCompositeUnitOfMeasure,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':286967).
lisp_trans(=>(and(isa(QUANT,uMeasureFn(N,UNIT)),ttCompositeUnitOfMeasure(UNIT)),vtFunctionQuantity(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287043).
lisp_trans(=>(and(isa(QUANT,uMeasureFn(N,UNIT)),ttNonCompositeUnitOfMeasure(UNIT)),vtConstantQuantity(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287181).
lisp_trans(genls(tSumoSystemeInternationalUnit,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287323).
lisp_trans(documentation(tSumoSystemeInternationalUnit,vEnglishLanguage,s("The","#$Class","of","Systeme","International","(","SI",")","units",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287373).
lisp_trans(documentation(tSumoSystemeInternationalUnit,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287481).
lisp_trans(genls(vtLengthMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287583).
lisp_trans(documentation(vtLengthMeasure,vEnglishLanguage,s("A","#$subclass","of","#$ConstantQuantity",",","instances","of","which","are","measures","of","length",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287625).
lisp_trans(documentation(vtLengthMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$ConstantQuantity","ç","\232\","\204\","#$subclassï","¼","\214\","å","®","\203\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","é","\225\","¿","åº","¦","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287752).
lisp_trans(genls(vtUnitOfLength,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287888).
lisp_trans(documentation(vtUnitOfLength,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$LengthMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':287938).
lisp_trans(documentation(vtUnitOfLength,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$LengthMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288109).
lisp_trans(genls(vtMassMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288271).
lisp_trans(documentation(vtMassMeasure,vEnglishLanguage,s("A","#$subclass","of","#$ConstantQuantity",",","instances","of","which","are","measures","of","the","amount","of","matter","in","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288311).
lisp_trans(documentation(vtMassMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$ConstantQuantity","ç","\232\","\204\","#$subclassï","¼","\214\","æ","\230\","¯","é","\207\","\217\","åº","¦","#$Object","æ","\211\","\200\","å","\220\","«","ç","\211\","©","è","´","¨","æ","\225\","°","é","\207\","\217\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288465).
lisp_trans(genls(vtUnitOfMass,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288606).
lisp_trans(documentation(vtUnitOfMass,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$MassMeasure",",","which","denote","the","amount","of","matter","in","#$PhysicalObjects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288654).
lisp_trans(documentation(vtUnitOfMass,vEnglishLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$MassMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureï","¼","\214\","æ","\235\","¥","è","¡","¨","ç","¤","º","#$PhysicalObject","æ","\211\","\200\","å","\220\","«","ç","\211\","©","è","´","¨","ç","\232\","\204\","æ","\225\","°","é","\207\","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':288877).
lisp_trans(genls(vtAreaMeasure,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289086).
lisp_trans(documentation(vtAreaMeasure,vEnglishLanguage,s("Measures","of","the","amount","of","space","in","two","dimensions",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289126).
lisp_trans(documentation(vtAreaMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","äº","\214\","ç","»","´","ç","©","ºé","\227\","´","ç","\232\","\204\","å","°","ºåº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289223).
lisp_trans(genls(vtUnitOfArea,ttCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289313).
lisp_trans(documentation(vtUnitOfArea,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$AreaMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289358).
lisp_trans(documentation(vtUnitOfArea,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$AreaMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289525).
lisp_trans(genls(vtVolumeMeasure,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289681).
lisp_trans(documentation(vtVolumeMeasure,vEnglishLanguage,s("Measures","of","the","amount","of","space","in","three","dimensions",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289723).
lisp_trans(documentation(vtVolumeMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","ä","¸","\211\","ç","»","´","ç","©","ºé","\227\","´","ç","\232\","\204\","å","°","ºåº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289824).
lisp_trans(genls(vtUnitOfVolume,ttCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289916).
lisp_trans(documentation(vtUnitOfVolume,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$VolumeMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':289963).
lisp_trans(documentation(vtUnitOfVolume,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$VolumeMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290134).
lisp_trans(genls(vtTemperatureMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290296).
lisp_trans(documentation(vtTemperatureMeasure,vEnglishLanguage,s("Measures","of","temperature",".","In","scientific","circles",",","the","temperature","of","something","is","understood","as","the","average","velocity","of","the","atoms","or","molecules","that","make","up","the","thing",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290343).
lisp_trans(documentation(vtTemperatureMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","æ","¸","©","åº","¦","ç","\232\","\204\","ï","¼","\214\","ç","§","\221\","å","­","¦","ä","¸","\212\","æ","\235\","¥","è","¯","´","ï","¼","\214\","ä","¸","\200\","ä","»","¶","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","æ","¸","©","åº","¦","æ","\230\","¯","æ","\236\","\204\","æ","\210\","\220\","è","¿","\231\","ä","¸","ªä","¸","\234\","è","¥","¿","å","\216\","\237\","å","­","\220\","æ","\210\","\226\","å","\210\","\206\","å","­","\220\","ç","\232\","\204\","å","¹","³","å","\235\","\207\","é","\200\","\237\","åº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290561).
lisp_trans(genls(vtUnitOfTemperature,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290740).
lisp_trans(documentation(vtUnitOfTemperature,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$TemperatureMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290795).
lisp_trans(documentation(vtUnitOfTemperature,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$TemperatureMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':290976).
lisp_trans(genls(vtCurrencyMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291148).
lisp_trans(documentation(vtCurrencyMeasure,vEnglishLanguage,s("Instances","of","this","#$subclass","of","#$ConstantQuantity","are","measures","of","#$monetaryValue","stated","in","terms","of","some","#$UnitOfCurrency","such","as","#$UnitedStatesDollar",",","#$UnitedStatesCent",",","RMB",",","Lira",",","Yen",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291192).
lisp_trans(documentation(vtCurrencyMeasure,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$ConstantQuantity","#$subclass","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","#$monetaryValue","ç","\232\","\204\","ï","¼","\214\","å","®","\203\","ä","»","¥","æ","\237\","\220\","äº","\233\","#$UnitOfCurrency","å","¦","\202\","#$UnitedStatesDollar","ï","¼","\214\","#$UnitedStatesCentã","\200\","\201\","äººæ","°","\221\","å","¸","\201\","ã","\200\","\201\","æ","\227\","¥","å","\205\","\203\","ç","­","\211\","ç","­","\211\","æ","\235\","¥","è","¡","¨","ç","¤","ºã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291437).
lisp_trans(genls(vtUnitOfCurrency,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291690).
lisp_trans(documentation(vtUnitOfCurrency,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$CurrencyMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291742).
lisp_trans(documentation(vtUnitOfCurrency,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$CurrencyMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':291917).
lisp_trans(genls(vtAngleMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292083).
lisp_trans(documentation(vtAngleMeasure,vEnglishLanguage,s("The","value","of","an","angle","in","a","plane","or","in","a","solid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292124).
lisp_trans(documentation(vtAngleMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¹","³","é","\235\","¢","æ","\210\","\226\","å","\233\","ºä","½","\223\","ä","¸","\200\","ä","¸","ªè","§","\222\","åº","¦","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292219).
lisp_trans(genls(vtUnitOfAngularMeasure,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292310).
lisp_trans(documentation(vtUnitOfAngularMeasure,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$AngleMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292368).
lisp_trans(documentation(vtUnitOfAngularMeasure,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$AngleMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292546).
lisp_trans(genls(vtPlaneAngleMeasure,vtAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292715).
lisp_trans(documentation(vtPlaneAngleMeasure,vEnglishLanguage,s("The","value","of","an","angle","in","a","plane",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292757).
lisp_trans(documentation(vtPlaneAngleMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¹","³","é","\235\","¢","ä","¸","\200\","ä","¸","ªè","§","\222\","åº","¦","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292843).
lisp_trans(genls(vtSolidAngleMeasure,vtAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292930).
lisp_trans(disjointWith(vtSolidAngleMeasure,vtPlaneAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':292972).
lisp_trans(documentation(vtSolidAngleMeasure,vEnglishLanguage,s("The","value","of","an","angle","in","a","solid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293019).
lisp_trans(documentation(vtSolidAngleMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","ºä","½","\223\","ä","¸","\200\","ä","¸","ªè","§","\222\","åº","¦","ç","\232\","\204\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293105).
lisp_trans(genls(vtUnitOfInformation,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293192).
lisp_trans(documentation(vtUnitOfInformation,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$InformationMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293247).
lisp_trans(documentation(vtUnitOfInformation,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$InformationMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293428).
lisp_trans(genls(vtUnitOfDuration,ttNonCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293600).
lisp_trans(documentation(vtUnitOfDuration,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$TimeDuration",".","Note","that","#$TimeDuration","is","a","#$subclass","of","#$TimeMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293652).
lisp_trans(documentation(vtUnitOfDuration,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","¨","#$MeasureFn","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$TimeDuration","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$TimeDuration","æ","\230\","¯","#$TimeMeasure","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$subclassã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':293884).
lisp_trans(rtBinaryFunction(uMeasureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294112).
lisp_trans(rtTotalValuedRelation(uMeasureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294148).
lisp_trans(argIsa(uMeasureFn,1,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294189).
lisp_trans(argIsa(uMeasureFn,2,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294221).
lisp_trans(resultIsa(uMeasureFn,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294256).
lisp_trans(documentation(uMeasureFn,vEnglishLanguage,s("This","#$BinaryFunction","maps","a","#$RealNumber","and","a","#$UnitOfMeasure","to","that","#$Number","of","units",".","It","is","used","to","express","`","measured","'","instances","of","#$PhysicalQuantity",".","Example",":","the","concept","of","three","meters","is","represented","as","(","#$MeasureFn","3","#$Meter",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294291).
lisp_trans(documentation(uMeasureFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$BinaryFunction","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$RealNumber","å","\222\","\214\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","æ","\210\","\220\","è","¿","\231\","ä","¸","ª","#$Number","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\","è","¿","\231\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","è","¾","¾","#$PhysicalQuantity","ç","\232\","\204\","æ","\237\","\220\","ç","§","\215\","å","\210\","\206\","é","\207\","\217\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¸","\211\","ç","±","³","å","\217\","¯","ä","»","¥","è","¿","\231\","æ","\240\","·","æ","\235\","¥","è","¡","¨","ç","¤","º","(","#$MeasureFn","3","#$Meter",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294574).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfLength(UNIT)),vtLengthMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294859).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfMass(UNIT)),vtMassMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':294992).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfArea(UNIT)),vtAreaMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295121).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfVolume(UNIT)),vtVolumeMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295250).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfTemperature(UNIT)),vtTemperatureMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295383).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfCurrency(UNIT)),vtCurrencyMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295526).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfAngularMeasure(UNIT)),vtAngleMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295663).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfDuration(UNIT)),timeTimeDuration(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295803).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfInformation(UNIT)),vtInformationMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':295937).
lisp_trans(=>(and(tSumoRelationExtendedToQuantities(REL),rtBinaryRelation(REL),ftRealNumber(NUMBER1),ftRealNumber(NUMBER2),[REL,NUMBER1,NUMBER2]),all([UNIT],=>(ttUnitOfMeasure(UNIT),[REL,uMeasureFn(NUMBER1,UNIT),uMeasureFn(NUMBER2,UNIT)]))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':296570).
lisp_trans(genls(vtUnitOfMeasureMultiplier,rtUnaryFunction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':296919).
lisp_trans(genls(vtUnitOfMeasureMultiplier,rtTotalValuedRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':296968).
lisp_trans(documentation(vtUnitOfMeasureMultiplier,vEnglishLanguage,s("Each","#$instance","of","this","#$Class","is","a","#$UnaryFunction","that",",","when","evaluated","on","its","single","argument",",","a","#$UnitOfMeasure",",","produces","another","#$UnitOfMeasure","that","is","a","numeric","multiple","of","the","argument",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297023).
lisp_trans(documentation(vtUnitOfMeasureMultiplier,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$instance","é","\203\","½","æ","\230\","¯","#$UnaryFunctionï","¼","\214\","å","½","\223\","æ","\210\","\221\","ä","»","¬","ä","»","¥","å","\215\","\225\","ä","¸","\200\","ç","\232\","\204\","å","\217\","\202\","æ","\225\","°","æ","\235\","¥","è","¯","\204\","ä","¼","°","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","ä","¼","\232\","äº","§","ç","\224\","\237\","å","\207\","ºå","\217\","¦","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasureï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","è","¿","\231\","æ","\230\","¯","å","\217\","\202\","æ","\225\","°","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\225\","°","å","\200\","¼","å","\200\","\215\","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297275).
lisp_trans(=>(and(vtUnitOfMeasureMultiplier(FUNCTION),ttCompositeUnitOfMeasure(UNIT)),ttCompositeUnitOfMeasure([FUNCTION,UNIT])),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297557).
lisp_trans(=>(and(vtUnitOfMeasureMultiplier(FUNCTION),ttNonCompositeUnitOfMeasure(UNIT)),ttNonCompositeUnitOfMeasure([FUNCTION,UNIT])),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297718).
lisp_trans(vtUnitOfMeasureMultiplier(uKiloFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297885).
lisp_trans(argIsa(uKiloFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297927).
lisp_trans(resultIsa(uKiloFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297959).
lisp_trans(documentation(uKiloFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to","1",",","0","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$KiloFn","#$Gram",")","is","1",",","0","#$Grams",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':297988).
lisp_trans(documentation(uKiloFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0","å","\200\","\215\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$KiloFn","#$Gram",")","æ","\230\","¯","1",",","0","#$Gramsã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298209).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(KILOUNIT,uKiloFn(UNIT))),equal(uMeasureFn(1,KILOUNIT),uMeasureFn(1000,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298435).
lisp_trans(vtUnitOfMeasureMultiplier(uMegaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298578).
lisp_trans(argIsa(uMegaFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298620).
lisp_trans(resultIsa(uMegaFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298652).
lisp_trans(documentation(uMegaFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to","1",",","0",",","0","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$MegaFn","#$Hertz",")","is","1",",","0",",","0","#$Hertz",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298681).
lisp_trans(documentation(uMegaFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0","å","\200\","\215\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MegaFn","#$Hertz",")","æ","\230\","¯","1",",","0",",","0","#$Hertzã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':298912).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(MEGAUNIT,uMegaFn(UNIT))),equal(uMeasureFn(1,MEGAUNIT),uMeasureFn(1000000,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299145).
lisp_trans(vtUnitOfMeasureMultiplier(uGigaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299291).
lisp_trans(argIsa(uGigaFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299333).
lisp_trans(resultIsa(uGigaFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299365).
lisp_trans(documentation(uGigaFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to","1",",","0",",","0",",","0","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$GigaFn","#$Hertz",")","is","1",",","0",",","0",",","0","#$Hertz",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299394).
lisp_trans(documentation(uGigaFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0",",","0","å","\200\","\215\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$GigaFn","#$Hertz",")","æ","\230\","¯","1",",","0",",","0",",","0","#$Hertzã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299633).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(GIGAUNIT,uGigaFn(UNIT))),equal(uMeasureFn(1,GIGAUNIT),uMeasureFn(1000000000,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':299874).
lisp_trans(vtUnitOfMeasureMultiplier(uTeraFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300023).
lisp_trans(argIsa(uTeraFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300065).
lisp_trans(resultIsa(uTeraFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300097).
lisp_trans(documentation(uTeraFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to","1",",","0",",","0",",","0",",","0","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$TeraFn","#$Hertz",")","is","1",",","0",",","0",",","0",",","0","#$Hertz",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300126).
lisp_trans(documentation(uTeraFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0",",","0",",","0","å","\200\","\215\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$TeraFn","#$Hertz",")","æ","\230\","¯","1",",","0",",","0",",","0",",","0","#$Hertz",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300373).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(TERAUNIT,uTeraFn(UNIT))),equal(uMeasureFn(1,TERAUNIT),uMeasureFn(1000000000000,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300620).
lisp_trans(vtUnitOfMeasureMultiplier(uMilliFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300772).
lisp_trans(argIsa(uMilliFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300815).
lisp_trans(resultIsa(uMilliFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300848).
lisp_trans(documentation(uMilliFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to",".","1","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$MilliFn","#$Gram",")","is",".","1","#$Grams",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':300878).
lisp_trans(documentation(uMilliFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0","ä","¹","\213\","ä","¸","\200\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MilliFn","#$Gram",")","æ","\230\","¯",".","1","#$Gramsã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301099).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(MILLIUNIT,uMilliFn(UNIT))),equal(uMeasureFn(1,MILLIUNIT),uMeasureFn(0.001,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301327).
lisp_trans(vtUnitOfMeasureMultiplier(uMicroFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301474).
lisp_trans(argIsa(uMicroFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301517).
lisp_trans(resultIsa(uMicroFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301550).
lisp_trans(documentation(uMicroFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to",".","1","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$MicroFn","#$Meter",")","is",".","1","#$Meters",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301580).
lisp_trans(documentation(uMicroFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0","ä","¹","\213\","ä","¸","\200\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MicroFn","#$Meter",")","æ","\230\","¯",".","1","#$Meters",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':301809).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(MICROUNIT,uMicroFn(UNIT))),equal(uMeasureFn(1,MICROUNIT),uMeasureFn(1.0e-6,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302044).
lisp_trans(vtUnitOfMeasureMultiplier(uNanoFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302194).
lisp_trans(argIsa(uNanoFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302236).
lisp_trans(resultIsa(uNanoFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302268).
lisp_trans(documentation(uNanoFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to",".","1","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$MicroFn","#$SecondDuration",")","is",".","1","#$SecondDurations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302297).
lisp_trans(documentation(uNanoFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0",",","0","ä","¹","\213\","ä","¸","\200\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MicroFn","#$SecondDuration",")","æ","\230\","¯",".","1","#$SecondDurationsã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302550).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(NANOUNIT,uNanoFn(UNIT))),equal(uMeasureFn(1,NANOUNIT),uMeasureFn(1.0e-9,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302812).
lisp_trans(vtUnitOfMeasureMultiplier(uPicoFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':302962).
lisp_trans(argIsa(uPicoFn,1,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303004).
lisp_trans(resultIsa(uPicoFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303036).
lisp_trans(documentation(uPicoFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$UnitOfMeasure","into","a","#$UnitOfMeasure","that","is","equal","to",".","1","units","of","the","original","#$UnitOfMeasure",".","For","example",",","(","#$PicoFn","#$SecondDuration",")","is",".","1","#$SecondDurations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303065).
lisp_trans(documentation(uPicoFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$UnitOfMeasure","è","\201\","\224\","ç","³","»","é","\203\","½","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","#$UnitOfMeasure","1",",","0",",","0",",","0",",","0","ä","¹","\213\","ä","¸","\200\","ç","\232\","\204\","#$UnitOfMeasure","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$PicoFn","#$SecondDuration",")","æ","\230\","¯",".","1","#$SecondDurations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303323).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(PICOUNIT,uPicoFn(UNIT))),equal(uMeasureFn(1,PICOUNIT),uMeasureFn(1.0e-12,UNIT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303589).
lisp_trans(rtBinaryFunction(uIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303742).
lisp_trans(rtTotalValuedRelation(uIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303779).
lisp_trans(argIsa(uIntervalFn,1,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303821).
lisp_trans(argIsa(uIntervalFn,2,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303860).
lisp_trans(resultGenl(uIntervalFn,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303899).
lisp_trans(relatedInternalConcept(uIntervalFn,timeRecurrentTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':303943).
lisp_trans(documentation(uIntervalFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","two","instances","of","#$ConstantQuantity","to","the","#$subclass","of","#$ConstantQuantity","that","comprises","the","interval","from","the","first","#$ConstantQuantity","to","the","second","#$ConstantQuantity",".","For","example",",","(","#$IntervalFn","(","#$MeasureFn","8","#$Meter",")","(","#$MeasureFn","14","#$Meter",")",")","would","return","the","#$subclass","of","#$ConstantQuantity","comprising","quantities","between","8","and","14","meters","in","length",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':304003).
lisp_trans(documentation(uIntervalFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","#$ConstantQuantity","ç","\232\","\204\","ä","¸","¤","ä","¸","ªå","®","\236\","ä","¾","\213\","è","\201\","\224\","ç","³","»","å","\210\","°","å","\214\","\205\","å","\220\","«","ä","»","\216\","ç","¬","¬","ä","¸","\200\","ä","¸","ª","#$ConstantQuantity","å","\210\","°","ç","¬","¬","äº","\214\","ä","¸","ª","#$ConstantQuantity","ç","\232\","\204\","é","\227\","´","é","\232\","\224\","ç","\232\","\204\","#$ConstantQuantity","#$subclass","ä","¸","\212\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$IntervalFn","(","#$MeasureFn","8","#$Meter",")","(","#$MeasureFn","14","#$Meter",")",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºå","\214\","\205\","å","\220\","«","é","\225\","¿","åº","¦","ç","\224\","±","8","å","\210\","°","14","ç","±","³","ä","¹","\213\","é","\227\","´","æ","\225\","°","é","\207\","\217\","ç","\232\","\204\","#$ConstantQuantity","#$subclassã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':304434).
lisp_trans(=>(and(isa(QUANTITY,uIntervalFn(FROM,TO)),isa(FROM,CLASS),isa(TO,CLASS)),isa(QUANTITY,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':304838).
lisp_trans(<=>(isa(QUANTITY,uIntervalFn(FROM,TO)),and(greaterThanOrEqualTo(QUANTITY,FROM),lessThanOrEqualTo(QUANTITY,TO))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':304984).
lisp_trans(rtUnaryFunction(uMagnitudeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305136).
lisp_trans(rtTotalValuedRelation(uMagnitudeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305173).
lisp_trans(argIsa(uMagnitudeFn,1,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305217).
lisp_trans(resultIsa(uMagnitudeFn,ftRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305257).
lisp_trans(documentation(uMagnitudeFn,vEnglishLanguage,s("The","magnitude","of","a","#$PhysicalQuantity","is","the","numeric","value","for","the","quantity",".","In","other","words",",","#$MagnitudeFn","converts","a","#$PhysicalQuantity","with","an","associated","#$UnitOfMeasure","into","an","ordinary","#$RealNumber",".","For","example",",","the","magnitude","of","the","(","#$ConstantQuantity","2","#$Kilometer",")","is","the","#$RealNumber","2",".","Note","that","the","magnitude","of","a","quantity","in","a","given","unit","times","that","unit","is","equal","to","the","original","quantity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305288).
lisp_trans(documentation(uMagnitudeFn,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$PhysicalQuantity","ç","\232\","\204\","å","¤","§","å","°","\217\","æ","\230\","¯","è","¿","\231\","ä","¸","ªé","\207\","\217\","ç","\232\","\204\","æ","\225\","°","å","\200\","¼","ã","\200\","\202\","æ","\215\","¢","å","\217\","¥","è","¯","\235\","è","¯","´","ï","¼","\214\","#$MagnitudeFn","ä","»","¥","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","#$UnitOfMeasure","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$PhysicalQuantity","è","½","¬","æ","\215\","¢","æ","\210\","\220\","ä","¸","\200\","ä","¸","ªæ","\231\","®","é","\200\","\232\","ç","\232\","\204\","#$RealNumberã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$ConstantQuantity","2","#$Kilometer",")","ç","\232\","\204\","å","¤","§","å","°","\217\","æ","\230\","¯","#$RealNumber","2","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\237\","\220\","ç","§","\215\","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","é","\207\","\217\","æ","\210\","\220\","ä","»","¥","è","¿","\231\","ä","¸","ªå","\215\","\225\","ä","½","\215\","ä","¼","\232\","ç","­","\211\","äº","\216\","å","\216\","\237\","æ","\234\","¬","ç","\232\","\204\","é","\207\","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':305738).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(QUANT,uMeasureFn(NUMBER,UNIT))),equal(uMagnitudeFn(QUANT),NUMBER)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306115).
lisp_trans(rtUnaryFunction(uUnitFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306248).
lisp_trans(rtTotalValuedRelation(uUnitFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306280).
lisp_trans(argIsa(uUnitFn,1,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306318).
lisp_trans(resultIsa(uUnitFn,ttUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306353).
lisp_trans(documentation(uUnitFn,vEnglishLanguage,'UnitFn returns just the #$UnitOfMeasure of a #$PhysicalQuantity with an associated #$UnitOfMeasure and #$RealNumber magnitude.  For example, the unit of the #$ConstantQuantity (#$MeasureFn 2 #$Kilometer) is the #$UnitOfMeasure #$Kilometer.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306383).
lisp_trans(documentation(uUnitFn,xtChineseLanguage,s("#$UnitFn","ä","»","¥","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","#$UnitOfMeasure","å","\222\","\214\","#$RealNumber","å","¤","§","å","°","\217\","ï","¼","\214\","å","\217\","ªå","¾","\227\","å","\207\","ºä","¸","\200\","ä","¸","ª","#$PhysicalQuantity","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","#$ConstantQuantity","(","#$MeasureFn","2","#$Kilometer",")","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","æ","\230\","¯","#$UnitOfMeasure","#$Kilometerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306666).
lisp_trans(=>(and(ttUnitOfMeasure(UNIT),equal(QUANT,uMeasureFn(NUMBER,UNIT))),equal(uUnitFn(QUANT),UNIT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':306930).
lisp_trans(rtBinaryFunction(cycPerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307062).
lisp_trans(rtTotalValuedRelation(cycPerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307094).
lisp_trans(argIsa(cycPerFn,1,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307131).
lisp_trans(argIsa(cycPerFn,2,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307165).
lisp_trans(resultIsa(cycPerFn,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307200).
lisp_trans(documentation(cycPerFn,vEnglishLanguage,'PerFn maps two instances of #$PhysicalQuantity to the #$FunctionQuantity composed of these two instances.  For example, (#$PerFn (#$MeasureFn 2 (#$MicroFn #$Gram)) (#$MeasureFn 1 (#$KiloFn #$Gram))) denotes the #$FunctionQuantity of 2 micrograms per kiogram. This function is useful, because it allows the knowledge engineer to dynamically generate instances of #$FunctionQuantity.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307232).
lisp_trans(documentation(cycPerFn,xtChineseLanguage,'PerFn æ\212\\212\ä¸¤ä¸ª #$PhysicalQuantity ç\232\\204\å®\236\ä¾\213\è\201\\224\ç³»å\210\°ç\224\±è¿\231\ä¸¤ä¸ªå®\236\ä¾\213\ æ\211\\200\ç»\204\æ\210\\220\ç\232\\204\ #$FunctionQuantityã\200\\202\ä¾\213\å¦\202\ï¼\232\(#$PerFn (#$MeasureFn 2 (#$MicroFn #$Gram)) (#$MeasureFn 1  (#$KiloFn#$Gram)))è¡¨ç¤º2å¾®å\205\\213\/å\215\\203\å\205\\213\ç\232\\204\ #$FunctionQuantityã\200\\202\è¿\231\ä¸ªå\207\½æ\225\°å¾\210\æ\234\\211\ç\224\¨å\233\\240\ä¸ºå®\203\å\205\\201\è®¸ç\237\¥è¯\206\å·¥ç¨\213\å¸\210\é\232\\217\æ\227\¶ç¼\226\å\210\¶æ\226\°ç\232\\204\  #$FunctionQuantity å®\236\ä¾\213\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':307656).
lisp_trans(genlPreds(vDensityFn,cycPerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308037).
lisp_trans(rtTotalValuedRelation(vDensityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308067).
lisp_trans(rtBinaryFunction(vDensityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308108).
lisp_trans(argIsa(vDensityFn,1,vtMassMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308144).
lisp_trans(argIsa(vDensityFn,2,vtVolumeMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308177).
lisp_trans(resultIsa(vDensityFn,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308212).
lisp_trans(documentation(vDensityFn,vEnglishLanguage,'DensityFn maps an instance of #$MassMeasure and an instance of #$VolumeMeasure to the density represented by this proportion of mass and volume.  For example, (#$DensityFn (#$MeasureFn 3 #$Gram) (#$MeasureFn 1 #$Liter)) represents the density of 3 grams per liter.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308247).
lisp_trans(documentation(vDensityFn,xtChineseLanguage,'DensityFn æ\212\\212\ #$MassMeasure ç\232\\204\å®\236\ä¾\213\å\222\\214\  #$VolumeMeasure ç\232\\204\å®\236\ä¾\213\å\222\\214\ç\224\±è¿\231\ä¸ªè´¨é\207\\217\å\222\\214\ä½\223\ç§¯æ¯\224\ä¾\213\æ\211\\200\ä»£è¡¨ç\232\\204\å¯\206\åº¦è\201\\224\ç³»èµ·æ\235\¥ã\200\\202\ä¾\213\å¦\202\ï¼\232\ (#$DensityFn (#$MeasureFn 3 #$Gram)(#$MeasureFn 1 #$Liter)) è¡¨ç¤ºå¯\206\åº¦3å\205\\213\/å\215\\207\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308558).
lisp_trans(genlPreds(vSpeedFn,cycPerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308832).
lisp_trans(rtTotalValuedRelation(vSpeedFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308860).
lisp_trans(rtBinaryFunction(vSpeedFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308899).
lisp_trans(argIsa(vSpeedFn,1,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308933).
lisp_trans(argIsa(vSpeedFn,2,timeTimeDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308966).
lisp_trans(resultIsa(vSpeedFn,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':308998).
lisp_trans(documentation(vSpeedFn,vEnglishLanguage,s("Maps","an","instance","of","#$LengthMeasure","and","an","instance","of","#$TimeDuration","to","the","speed","represented","by","this","proportion","of","distance","and","time",".","For","example",",","(","#$SpeedFn","(","#$MeasureFn","55","#$Mile",")","(","#$MeasureFn","1","#$HourDuration",")",")","represents","the","velocity","of","55","miles","per","hour",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309031).
lisp_trans(documentation(vSpeedFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","æ","\212\","\212\","#$LengthMeasure","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","å","\222\","\214\","#$TimeDuration","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","å","\222\","\214\","ç","\224\","±","è","¿","\231\","ä","¸","ªæ","\227\","¶","é","\227\","´","å","\222\","\214\","è","·","\235\","ç","¦","»","æ","¯","\224\","ä","¾","\213\","æ","\211\","\200\","ä","»","£","è","¡","¨","ç","\232\","\204\","é","\200\","\237\","ç","\216\","\207\","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$SpeedFn","(","#$MeasureFn","55","#$Mile",")","(","#$MeasureFn","1","#$HourDuration",")",")","è","¡","¨","ç","¤","ºé","\200\","\237\","åº","¦","55","è","\213\","±","é","\207\","\214\","æ","¯","\217\","å","°","\217\","æ","\227\","¶","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309334).
lisp_trans(rtQuaternaryFunction(uVelocityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309632).
lisp_trans(rtTotalValuedRelation(uVelocityFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309673).
lisp_trans(argIsa(uVelocityFn,1,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309715).
lisp_trans(argIsa(uVelocityFn,2,timeTimeDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309751).
lisp_trans(argIsa(uVelocityFn,3,tPlaceLikeRegion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309786).
lisp_trans(argIsa(uVelocityFn,4,vtDirectionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309815).
lisp_trans(resultIsa(uVelocityFn,vtFunctionQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309858).
lisp_trans(documentation(uVelocityFn,vEnglishLanguage,s("Specifies","the","velocity","of","an","object",",","i",".","e",".","the","speed","and","the","direction","of","the","speed",".","For","example","(","#$VelocityFn","(","#$MeasureFn","55","#$Mile",")","(","#$MeasureFn","2","#$HourDuration",")","?","REFERENCE","#$North",")","denotes","the","velocity","of","55","miles","per","hour","North","of","the","given","reference","point","?","REFERENCE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':309894).
lisp_trans(documentation(uVelocityFn,xtChineseLanguage,s("è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","æ","\214\","\207\","å","\207\","ºä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","ç","\232\","\204\","é","\200\","\237\","åº","¦","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","è","¯","´","é","\200\","\237\","ç","\216\","\207\","å","\222\","\214\","é","\200\","\237\","ç","\216\","\207\","ç","\232\","\204\","æ","\226\","¹","å","\220\","\221\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$VelocityFn","(","#$MeasureFn","55","#$Mile",")","(","#$MeasureFn","2","#$HourDuration",")","?","REFERENCE","#$North",")","è","¡","¨","ç","¤","ºä","»","\216\","ä","¸","\200\","ä","¸","ªé","¢","\204\","å","®","\232\","ç","\232\","\204\","å","\235\","\220\","æ","\240\","\207\","?","REFERENCE","ä","»","¥","æ","¯","\217\","å","°","\217\","æ","\227\","¶","55","è","\213\","±","é","\207\","\214\","ç","\232\","\204\","é","\200\","\237\","åº","¦","å","\220\","\221\","å","\214\","\227\","ç","§","»","å","\212\","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':310214).
lisp_trans(=>(measure(OBJECT,uVelocityFn(DISTANCE,TIME,REF,DIRECTION)),measure(OBJECT,vSpeedFn(DISTANCE,TIME))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':310527).
lisp_trans(vtUnitOfLength(vMeterFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':310794).
lisp_trans(tSumoSystemeInternationalUnit(vMeterFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':310824).
lisp_trans(documentation(vMeterFn,vEnglishLanguage,s("SI","#$UnitOfLength",".","Symbol",":","m",".","It","is","one","of","the","base","units","in","SI",",","and","it","is","currently","defined","as","follows",":","the","#$Meter","is","the","length","of","the","path","traveled","by","light","in","a","vacuum","during","a","time","interval","of","1","/","299792458","of","a","#$SecondDuration",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':310866).
lisp_trans(documentation(vMeterFn,xtChineseLanguage,'UnitOfLength ç\232\\204\å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ã\200\\202\ç¬¦å\217\·ï¼\232\mã\200\\202\è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ä¸­ç\232\\204\ä¸\200\ ä¸ªå\237\ºæ\234\¬å\215\\225\ä½\215\ï¼\214\è\200\\214\å®\203\ç\216\°å\234\¨ç\232\\204\å®\232\ä¹\211\å¦\202\ä¸\213\ï¼\232\#$Meter æ\230\¯å\205\\211\å\234\¨ç\234\\237\ç©ºä¸­å\234\¨æ\227\¶è·\235\ 1/299792458 #$SecondDuration å\206\\205\æ\211\\200\è¡\214\ç»\217\ç\232\\204\ è·\235\ç¦»ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311142).
lisp_trans(vtUnitOfMass(vGramFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311421).
lisp_trans(tSumoSystemeInternationalUnit(vGramFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311448).
lisp_trans(documentation(vGramFn,vEnglishLanguage,s("Submultiple","of","kilogram",".","Symbol",":","g",".","1","kilogram","=","1000","#$Grams",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311489).
lisp_trans(vtUnitOfDuration(actSecondDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311612).
lisp_trans(tSumoSystemeInternationalUnit(actSecondDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311653).
lisp_trans(documentation(actSecondDuration,vEnglishLanguage,s("SI","#$UnitOfDuration",".","Symbol",":","s",".","It","is","one","of","the","base","units","in","SI",",","and","it","is","currently","defined","as","follows",":","the","#$SecondDuration","is","the","duration","of","9192631770","periods","of","the","radiation","corresponding","to","the","transition","between","the","two","hyperfine","levels","of","the","ground","state","of","the","cesium","133","atom",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':311704).
lisp_trans(documentation(actSecondDuration,xtChineseLanguage,'UnitOfDuration ç\232\\204\å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ã\200\\202\ç¬¦å\217\·ï¼\232\sã\200\\202\è¿\231\æ\230\¯ å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ä¸­ç\232\\204\ä¸\200\ä¸ªå\237\ºæ\234\¬å\215\\225\ä½\215\ï¼\214\è\200\\214\å®\203\ç\216\°å\234\¨ç\232\\204\å®\232\ä¹\211\å¦\202\ä¸\213\ï¼\232\#$SecondDuration æ\230\¯é\212\«133å\216\\237\å­\220\å\237\ºæ\205\\213\ç\232\\204\å\205\©å\200\\213\è¶\205\ç²¾ç´°è\203\½é\232\\216\é\226\\223\èº\215\é\201\· å°\215\æ\207\\211\è¼»å°\204\ç\232\\204\9,192,631,770å\200\\213\é\200\±æ\234\\237\ç\232\\204\æ\214\\201\çº\214\æ\231\\202\é\226\\223\ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':312046).
lisp_trans(ttCompositeUnitOfMeasure(vAmpereFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':312386).
lisp_trans(tSumoSystemeInternationalUnit(vAmpereFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':312427).
lisp_trans(documentation(vAmpereFn,vEnglishLanguage,"SI electric current measure.  Symbol: A. It is one of the base units in SI. It is defined as follows: the #$Ampere is that constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 #$Meter apart in a vacuum, would produce between these conductors a force equal to 2*10^(-7) #$Newton per #$Meter of length."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':312470).
lisp_trans(documentation(vAmpereFn,xtChineseLanguage,"è¿\231\æ\230\¯é\207\\217\åº¦ç\224\µæµ\201\ç\232\\204\å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ã\200\\202\ç¬¦å\217\·ï¼\232\Aã\200\\202\è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ä¸­ç\232\\204\ä¸\200\ä¸ªå\237\ºæ\234\¬ å\215\\225\ä½\215\ï¼\214\è\200\\214\å®\203\ç\216\°å\234\¨ç\232\\204\å®\232\ä¹\211\å¦\202\ä¸\213\ï¼\232\#$Ampere æ\230\¯å\234\¨ç\234\\237\ç©ºä¸­ç\233\¸è·\235\ä¸º1 #$Meterç\232\\204\ä¸¤æ\240\¹æ\227\\240\é\231\\220\é\225\¿å¹³è¡\214\ç\233\´å¯¼çº¿ï¼\214\é\200\\232\ä»¥ç\233\¸ç­\211\ç\232\\204\æ\201\\222\å®\232\ç\224\µæµ\201\ï¼\214\ å½\223\æ¯\217\ #$Meter å¯¼çº¿ä¸\212\æ\211\\200\å\217\\227\ä½\234\ç\224\¨å\212\\233\ä¸º2*10^(-7) #$Newtonæ\227\¶ï¼\214\å\220\\204\å¯¼çº¿ä¸\212\ç\232\\204\ç\224\µæµ\201\ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':312904).
lisp_trans(vtUnitOfTemperature(vtKelvinDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':313317).
lisp_trans(tSumoSystemeInternationalUnit(vtKelvinDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':313359).
lisp_trans(documentation(vtKelvinDegree,vEnglishLanguage,s("SI","#$UnitOfMeasure","used","with","#$MeasureFn","to","produce","terms","denoting","instances","of","#$TemperatureMeasure",".","Symbol",":","K",".","It","is","one","of","the","base","units","in","SI","(","it","is","also","a","unit","in","the","ITS","system",")",".","Kelvin","differs","from","the","Celsius","scale","in","that","the","triple","point","of","water","is","defined","to","be","273.16","#$KelvinDegrees","while","it","is","0","#$CelsiusDegrees",".","The","magnitudes","of","intervals","in","the","two","scales","are","the","same",".","By","definition","the","conversion","constant","is","273.15",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':313408).
lisp_trans(documentation(vtKelvinDegree,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ç","\232\","\204\","#$UnitOfMeasureï","¼","\214\","å","®","\203\","å","\222\","\214\","#$MeasureFn","ä","¸","\200\","èµ","·","åº","\224\","ç","\224\","¨","ï","¼","\214\","æ","\235\","¥","äº","§","ç","\224\","\237\","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","º","#$TemperatureMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","ç","\224\","¨","è","¯","­","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","Kã","\200\","\202\","è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","å","\237\","ºæ","\234\","¬","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","(","å","®","\203\","ä","¹","\237\","æ","\230\","¯","æ","\231\","ºè","\203\","½","è","¿","\220\","è","¾","\223\","ç","³","»","ç","»","\237\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\215\","\225\","ä","½","\215\",")","ã","\200\","\202\","å","¼","\200\","å","°","\224\","æ","\226\","\207\","å","\222\","\214\","æ","\221\","\204\","æ","°","\217\","ç","\232\","\204\","å","\210\","\206\","å","\210\","«","å","\234\","¨","äº","\216\","æ","°","´","ç","\232\","\204\","ä","¸","\211\","ç","\233\","¸","é","»","\236\","å","®","\232\","ç","¾","©","ç","\202\","º273",".","16","#$KelvinDegreeï","¼","\214\","è","\200\","\214\","æ","\221\","\204\","æ","°","\217\","åº","¦","å","\210\","\231\","ä","¸","º","0","#$CelsiusDegreeï","¼","\214\","ä","¸","¤","ä","¸","ªæ","¸","©","åº","¦","å","\215\","\225\","ä","½","\215\","ä","¸","­","ç","\232\","\204\","é","\227\","´","é","\232\","\224\","å","¤","§","å","°","\217\","ç","\233\","¸","å","\220\","\214\","ã","\200\","\202\","æ","\214\","\211\","ç","\205\","§","å","®","\232\","ä","¹","\211\","ï","¼","\214\","è","½","¬","æ","\215\","¢","å","¸","¸","æ","\225\","°","ä","¸","º273",".","15","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':313899).
lisp_trans(vtUnitOfMass(tSumoMole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':314441).
lisp_trans(tSumoSystemeInternationalUnit(tSumoMole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':314468).
lisp_trans(documentation(tSumoMole,vEnglishLanguage,s("SI","amount","of","substance","unit",".","symbol",":","mol",".","It","is","one","of","the","base","units","in","SI",".","It","is","defined","as","follows",":","the","#$Mole","is","the","amount","of","substance","of","a","system","which","contains","as","many","elementary","entities","as","there","are","atoms","in","0.012","#$Kilograms","of","carbon","12",".","Note","that",",","when","this","#$UnitOfMeasure","is","used",",","the","elementary","entities","must","be","specified","-","they","may","be","atoms",",","molecules",",","ions",",","electrons",",","etc",".","or","groups","of","such","particles",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':314509).
lisp_trans(documentation(tSumoMole,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","\211\","©","è","´","¨","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","æ","\225\","°","é","\207\","\217\","ã","\200\","\202\","ç","¬","¦","å","\217\","·","ï","¼","\232\","molã","\200\","\202\","è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\237\","ºæ","\234\","¬","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","è","\200\","\214\","å","®","\203\","ç","\216\","°","å","\234\","¨","ç","\232\","\204\","å","®","\232\","ä","¹","\211\","å","¦","\202\","ä","¸","\213\","ï","¼","\232\","#$Mole","æ","\230\","¯","ä","¸","\200\","ç","³","»","ç","»","\237\","ç","\211\","©","è","´","¨","æ","\211\","\200\","å","\220\","«","å","\237\","ºæ","\234\","¬","å","¾","®","ç","²","\222\","ä","¸","ªæ","\225\","°","ä","¸","\216\","0.012","#$Kilogram","ç","¢","³","-12","ä","¸","­","æ","\211\","\200\","å","\220\","«","å","\216\","\237\","å","­","\220\","ä","¸","ªæ","\225\","°","ç","\233\","¸","ç","­","\211\","é","\207\","\217\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\234\","¨","åº","\224\","ç","\224\","¨","è","¿","\231\","ä","¸","ª","#$UnitOfMeasure","æ","\227\","¶","ï","¼","\214\","æ","\210\","\221\","ä","»","¬","å","¿","\205\","é","¡","»","æ","\214\","\207\","å","®","\232\","å","\237\","ºæ","\234\","¬","ç","\232\","\204\","å","®","\236\","ä","½","\223\","ï","¼","\232\","å","®","\203\","ä","»","¬","å","\217\","¯","ä","»","¥","æ","\230\","¯","å","\216\","\237\","å","­","\220\","ã","\200\","\201\","å","\210\","\206\","å","­","\220\","ã","\200\","\201\","ç","¦","»","å","­","\220\","å","\222\","\214\","ç","\224\","µå","­","\220\","ç","­","\211\","ç","­","\211\","ï","¼","\214\","æ","\210\","\226\","æ","\230\","¯","ç","\224\","±","è","¿","\231\","äº","\233\","ç","²","\222\","å","­","\220\","æ","\211\","\200\","ç","»","\204\","æ","\210\","\220\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':314970).
lisp_trans(ttCompositeUnitOfMeasure(vCandelaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':315475).
lisp_trans(tSumoSystemeInternationalUnit(vCandelaFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':315517).
lisp_trans(documentation(vCandelaFn,vEnglishLanguage,"SI luminosity intensity measure.  Symbol: cd. It is one of the base units in SI, and it is currently defined as follows:  the #$Candela is the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540*10^12 #$Hertz and that has a radiant intensity in that direction of 1/683 #$Watt per #$Steradian."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':315561).
lisp_trans(documentation(vCandelaFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦äº®åº¦å¼ºåº¦ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\cdã\200\\202\è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ ä¸­ç\232\\204\ä¸\200\ä¸ªå\237\ºæ\234\¬å\215\\225\ä½\215\ï¼\214\è\200\\214\å®\203\ç\216\°å\234\¨ç\232\\204\å®\232\ä¹\211\å¦\202\ä¸\213\ï¼\232\#$Candela æ\230\¯çµ¦å®\232\ä¸\200\å\200\\213\é¢\221\ç\216\\207\ä¸º 540*10^12 #$Hertz ç\232\\204\å\215\\225\è\211\²è¾\220\å°\204\å\205\\211\æº\220\è\210\\207\ä¸\200\ å\200\\213\æ\226\¹å\220\\221\ï¼\214\ä¸\224\è©²è¼»å°\204\æº\220\å\234\¨è¯¥æ\226\¹å\220\\221\ç\232\\204\è¼»å°\204\å¼·åº¦ä¸º1/683 #$Watt/ #$Steradianï¼\214\å\211\\207\è©²è¼»å°\204\æº\220\å\234\¨è©²æ\226\¹å\220\\221\ç\232\\204\ç\231\¼å\205\\211\å¼·åº¦ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':315950).
lisp_trans(vtUnitOfVolume(vLiterFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316350).
lisp_trans(documentation(vLiterFn,vEnglishLanguage,s("Unit","of","volume","in","the","metric","system",".","It","is","currently","defined","to","be","equal","to","one","cubic","decimeter","(","0.001","cubic","meter",")",".","Symbol",":","l",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316380).
lisp_trans(documentation(vLiterFn,xtChineseLanguage,s("å","\205\","¬","å","\210\","¶","ä","¸","­","ç","\232\","\204\","ä","½","\223\","ç","§","¯","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\","è","\200\","\214\","å","®","\203\","ç","\216\","°","å","\234\","¨","ç","\232\","\204\","å","®","\232\","ä","¹","\211\","ç","­","\211\","äº","\216\","ä","¸","\200\","ç","«","\213\","æ","\226\","¹","å","\210\","\206\","ç","±","³","(","0.001","ç","«","\213\","æ","\226\","¹","ç","±","³",")","ã","\200\","\202\","ç","¬","¦","å","\217\","·","ï","¼","\232\","lã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316550).
lisp_trans(vtUnitOfLength(tSumoCentimeter),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316695).
lisp_trans(documentation(tSumoCentimeter,vEnglishLanguage,s("Submultiple","of","#$Meter",".","Symbol",":","cm",".","It","is","the","100","th","part","of","a","#$Meter")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316730).
lisp_trans(documentation(tSumoCentimeter,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Meter","ç","\232\","\204\","çº","¦","æ","\225\","°","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","cmã","\200\","\202\","å","®","\203\","æ","\230\","¯","100","å","\210\","\206\","ä","¹","\213\","ä","¸","\200\","#$Meterã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316846).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoCentimeter),uMeasureFn(uMultiplicationFn(NUMBER,0.01),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':316963).
lisp_trans(documentation(tSumoMillimeter,vEnglishLanguage,s("Submultiple","of","Meter",".","Symbol",":","mm",".","A","millimeter","is","the","1000","th","part","of","a","meter")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317057).
lisp_trans(documentation(tSumoMillimeter,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","±","³","ç","\232\","\204\","çº","¦","æ","\225\","°","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","mmã","\200\","\202\","1","æ","¯","«","ç","±","³","æ","\230\","¯","1000","å","\210\","\206\","ä","¹","\213\","ä","¸","\200\","ç","±","³","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317179).
lisp_trans(vtUnitOfLength(tSumoMillimeter),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317289).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoMillimeter),uMeasureFn(uMultiplicationFn(NUMBER,0.001),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317325).
lisp_trans(vtUnitOfLength(vKilometerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317424).
lisp_trans(documentation(vKilometerFn,vEnglishLanguage,s("Supermultiple","of","#$Meter",".","Symbol",":","km",".","A","#$Meter","is","the","1000","th","part","of","a","#$Kilometer")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317458).
lisp_trans(documentation(vKilometerFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Meter","ç","\232\","\204\","å","\200\","\215\","æ","\225\","°","ã","\200\","\202\","ç","¬","¦","å","\217\","·","ï","¼","\232\","kmã","\200\","\202\","1","#$Meter","æ","\230\","¯","1000","ä","¹","\213\","1","#$Kilometerã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317586).
lisp_trans(equal(uMeasureFn(NUMBER,vKilometerFn),uMeasureFn(uMultiplicationFn(NUMBER,1000),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317710).
lisp_trans(vtUnitOfAngularMeasure(vRadianFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':317996).
lisp_trans(tSumoSystemeInternationalUnit(vRadianFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318035).
lisp_trans(documentation(vRadianFn,vEnglishLanguage,s("SI","plane","angle","measure",".","Symbol",":","rad",".","It","is","the","angle","of","a","circle","subtended","by","an","arc","equal","in","length","to","the","circle","'s","radius",".","Another","definition","is",":","the","plane","angle","between","two","radii","of","a","circle","which","cut","off","on","the","circumference","an","arc","equal","in","length","to","the","radius",".","#$Radian","=","m","/","m","=","1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318078).
lisp_trans(documentation(vRadianFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","é","\207\","\217\","åº","¦","å","¹","³","é","\235\","¢","è","§","\222\","åº","¦","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","radã","\200\","\202\","å","®","\203\","æ","\230\","¯","å","\234\","¨","å","\234\","\206\","ä","¸","\212\","æ","\211\","\200\","å","\210\","\207\","å","\207\","º","ç","\232\","\204\","å","\234\","\206\","å","¼","§","é","\225\","¿","åº","¦","ç","­","\211\","æ","\226\","¼","å","\215\","\212\","å","¾","\221\","æ","\231\","\202\","ç","\232\","\204\","å","\234\","\223\","å","¿","\203\","è","§","\222\","ï","¼","\233\","å","\217\","¦","ä","¸","\200\","ä","¸","ªå","®","\232\","ä","¹","\211\","æ","\230\","¯","ï","¼","\232\","å","\234\","\206\","å","\221\","¨","ç","\232\","\204\","ä","¸","¤","ä","¸","ªå","\215\","\212\","å","¾","\204\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","¹","³","é","\235\","¢","è","§","\222\","ï","¼","\214\","å","\234\","¨","å","\234\","\206\","å","\221\","¨","ä","¸","\212\","å","\210\","\207\","é","\231\","¤","é","\225\","¿","åº","¦","ç","­","\211\","äº","\216\","å","\215\","\212\","å","¾","\204\","ç","\232\","\204\","å","¼","§","ã","\200\","\202\","#$Radian","=","m","/","m","=","1","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318410).
lisp_trans(vtUnitOfAngularMeasure(tSumoSteradian),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318741).
lisp_trans(tSumoSystemeInternationalUnit(tSumoSteradian),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318783).
lisp_trans(documentation(tSumoSteradian,vEnglishLanguage,s("SI","solid","angle","measure",".","Symbol",":","sr",".","It","is","the","solid","angle","of","a","sphere","subtended","by","a","portion","of","the","surface","whose","area","is","equal","to","the","square","of","the","sphere","'s","radius",".","Another","definition","is",":","the","solid","angle","which",",","having","its","vertex","in","the","center","of","the","sphere",",","cuts","off","an","area","of","the","surface","of","the","sphere","equal","to","that","of","a","square","with","sides","of","length","equal","to","the","radius","of","the","sphere",".","#$Steradian","=","m","^","2","/","m","^","2","=","1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':318829).
lisp_trans(documentation(tSumoSteradian,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","é","\207\","\217\","åº","¦","ç","«","\213\","ä","½","\223\","è","§","\222\","åº","¦","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","srã","\200\","\202\","å","®","\203\","æ","\230\","¯","ç","\224\","±","ä","¸","\200\","ä","¸","ªç","\220\","\203\","ä","½","\223\","è","¡","¨","é","\235\","¢","å","\210\","\207\","å","\207\","ºä","¸","\200\","ä","¸","ªé","\235\","¢","ç","§","¯","ç","­","\211\","äº","\216\","ç","\220\","\203\","ä","½","\223\","å","\215\","\212\","å","¾","\204\","å","¹","³","æ","\226\","¹","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªç","«","\213\","ä","½","\223\","è","§","\222\","ã","\200\","\202\","å","\217\","¦","ä","¸","\200\","ä","¸","ªå","®","\232\","ä","¹","\211\","æ","\230\","¯","ï","¼","\232\","ä","¸","\200\","ä","¸","ªç","\220\","\203\","ä","½","\223\","ä","¸","­","å","¿","\203\","é","¡","¶","ç","\202\","¹","ç","\232\","\204\","ç","«","\213\","ä","½","\223\","è","§","\222\","ï","¼","\214\","å","®","\203\","æ","\230\","¯","ä","»","\216\","ç","\220\","\203\","ä","½","\223\","è","¡","¨","é","\235\","¢","å","\210\","\207\","å","\207\","º","ç","­","\211\","äº","\216\","ä","¸","\200\","ä","¸","ªå","\233\","\233\","è","¾","¹","é","\225\","¿","åº","¦","å","\222\","\214\","ç","\220\","\203\","ä","½","\223\","å","\215\","\212\","å","¾","\204\","ç","\232\","\204\","æ","­","£","æ","\226\","¹","å","½","¢","ç","\232\","\204\","é","\235\","¢","ç","§","¯","ã","\200\","\202\","#$Steradian","=","m","^","2","/","m","^","2","=","1","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':319291).
lisp_trans(genls(vtFrequencyMeasure,timeTimeDependentQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':319692).
lisp_trans(documentation(vtFrequencyMeasure,vEnglishLanguage,s("A","#$subclass","of","#$TimeDependentQuantity",",","instances","of","which","are","measures","of","the","frequency","with","which","some","#$Process","occurs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':319742).
lisp_trans(documentation(vtFrequencyMeasure,xtChineseLanguage,'TimeDependentQuantity ç\232\\204\ #$subclassï¼\214\ , å®\203\æ\234\\211\äº\233\å®\236\ä¾\213\æ\230\¯ç\224\¨æ\235\¥é\207\\217\åº¦æ\237\\220\äº\233\ #$Process å\217\\221\ç\224\\237\ç\232\\204\é¢\221\ç\216\\207\ã\200\\202\ '),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':319917).
lisp_trans(genls(vtUnitOfFrequency,ttCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320080).
lisp_trans(documentation(vtUnitOfFrequency,vEnglishLanguage,s("Every","instance","of","this","#$Class","is","a","#$UnitOfMeasure","that","can","be","used","with","#$MeasureFn","to","form","instances","of","#$FrequencyMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320130).
lisp_trans(documentation(vtUnitOfFrequency,xtChineseLanguage,s("è","¿","\231\","ä","¸","ª","#$Class","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","é","\203\","½","æ","\230\","¯","å","\217\","¯","ä","»","¥","å","\222\","\214\","#$MeasureFn","ä","¸","\200\","èµ","·","åº","\224\","ç","\224\","¨","æ","\235\","¥","ç","»","\204\","æ","\210\","\220\","#$FrequencyMeasure","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$UnitOfMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320307).
lisp_trans(=>(and(equal(uMeasureFn(NUMBER,UNIT),QUANT),vtUnitOfFrequency(UNIT)),vtFrequencyMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320486).
lisp_trans(vtUnitOfFrequency(vHertzFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320625).
lisp_trans(tSumoSystemeInternationalUnit(vHertzFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320658).
lisp_trans(documentation(vHertzFn,vEnglishLanguage,s("SI","frequency","measure",".","Symbol",":","Hz",".","It","is","the","number","of","cycles","per","second",".","#$Hertz","=","s","^","(","-1",")",".","Note","that","#$Hertz","does","not","have","a","conversion","function",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320700).
lisp_trans(documentation(vHertzFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","é","\207\","\217\","åº","¦","é","¢","\221\","ç","\216\","\207\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","Hzã","\200\","\202\","å","®","\203\","æ","\230\","¯","æ","¯","\217\","ç","§","\222\","é","\200\","±","æ","\234\","\237\","é","\201\","\213\","å","\213\","\225\","ç","\232\","\204\","æ","¬","¡","æ","\225\","¸","ã","\200\","\202\","#$Hertz","=","s","^","(","-1",")","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$Hertz","å","¹","¶","æ","²","¡","æ","\234\","\211\","è","½","¬","æ","\215\","¢","å","\207\","½","æ","\225\","°","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':320889).
lisp_trans(ttCompositeUnitOfMeasure(vNewtonFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321100).
lisp_trans(tSumoSystemeInternationalUnit(vNewtonFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321141).
lisp_trans(documentation(vNewtonFn,vEnglishLanguage,"SI force measure.  Symbol: N. It is that force which gives to a mass of 1 kilogram an acceleration of 1 #$Meter per #$SecondDuration.  #$Newton = m*kg*s^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321184).
lisp_trans(documentation(vNewtonFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦å\212\\233\ç\232\\204\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Nã\200\\202\å®\203\æ\230\¯ä½¿è³ªé\207\\217\1å\205\¬æ\226\¤ç\211\©é«\224\ç\232\\204\ å\212\\240\é\200\\237\åº¦ç\202\º1 #$Meter/#$SecondDuration æ\211\\200\é\234\\200\è¦\201\ç\232\\204\å\212\\233\. #$Newton = m*kg*s^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321384).
lisp_trans(ttCompositeUnitOfMeasure(tSumoPascal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321612).
lisp_trans(tSumoSystemeInternationalUnit(tSumoPascal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321653).
lisp_trans(documentation(tSumoPascal,vEnglishLanguage,"SI pressure measure.  Symbol:Pa. It is the pressure of one #$Newton per square #$Meter.  #$Pascal = N/m^2 = m^(-1)*kg*s^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321696).
lisp_trans(documentation(tSumoPascal,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ç\232\\204\å\216\\213\å¼ºå\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Paã\200\\202\å®\203\ç­\211\äº\216\ä¸\200\#$Newtonp å¹³æ\226\¹  #$Meter ç\232\\204\å\216\\213\å¼ºã\200\\202\ #$Pascal = N/m^2= m^(-1)*kg*s^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':321863).
lisp_trans(ttCompositeUnitOfMeasure(vJouleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322062).
lisp_trans(tSumoSystemeInternationalUnit(vJouleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322102).
lisp_trans(documentation(vJouleFn,vEnglishLanguage,"SI energy measure.  Symbol: J.  It is the work done when the point of application of 1 #$Newton is displaced a distance of 1 #$Meter in the direction of the force.  #$Joule = N*m = m^2*kg*s^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322144).
lisp_trans(documentation(vJouleFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦è\203\½é\207\\217\ç\232\\204\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Jã\200\\202\å®\203\ç­\211\æ\226\¼æ\226\½å\212\\240\1 #$Newton ç\211\\233\é\240\\223\ä½\234\ç\224\¨å\212\\233\ï¼\214\å\220\\221\å\212\\233\ç\232\\204\æ\226\¹å\220\\221\ï¼\214\ç¶\223\é\201\\216\1 #$Meter å\205\¬å°ºè·\235\é\233\¢æ\211\\200\é\234\\200\ç\232\\204\è\203\½é\207\\217\ã\200\\202\#$Joule = N*m = m^2*kg*s^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322380).
lisp_trans(ttCompositeUnitOfMeasure(vWattFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322635).
lisp_trans(tSumoSystemeInternationalUnit(vWattFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322674).
lisp_trans(documentation(vWattFn,vEnglishLanguage,"SI power measure.  Symbol: W.  A #$UnitOfMeasure that measures power, i.e. energy produced or expended divided by #$TimeDuration. It is the power which gives rise to the production of energy (or work) at the rate of one #$Joule per #$SecondDuration. #$Watt = J/s = m^2*kg*s^(-3)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':322715).
lisp_trans(documentation(vWattFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ç\232\\204\å\212\\237\ç\216\\207\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Wã\200\\202\å®\203\æ\230\¯ä¸\200\ä¸ªé\207\\217\åº¦é\207\\217\åº¦å\212\\237\ç\216\\207\ç\232\\204\  #$UnitOfMeasureï¼\214\ä¹\237\å°±æ\230\¯è¯´è\203\½é\207\\217\è½¬æ\215\¢æ\210\\226\è\200\\227\æ\225\£é\231\¤ä»¥ #$TimeDurationã\200\\202\è¿\231\æ\230\¯ä»¥1 #$Jouleï¼\217\#$SecondDuration ç\232\\204\ é\200\\237\ç\216\\207\æ\211\\200\äº§ç\224\\237\ç\232\\204\è\203\½é\207\\217\(æ\210\\226\å\212\\237\)ã\200\\202\#$Watt = J/s = m^2*kg*s^(-3)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323034).
lisp_trans(ttCompositeUnitOfMeasure(vHorsepowerFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323345).
lisp_trans(documentation(vHorsepowerFn,vEnglishLanguage,s("A","power","measure","that","is","equal","to","746","#$Watts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323390).
lisp_trans(documentation(vHorsepowerFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","­","\211\","äº","\216\","746","#$Wattsï","¼","\214\","ç","\224\","¨","æ","\235\","¥","é","\207\","\217\","åº","¦","å","\212\","\237\","ç","\216\","\207\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323481).
lisp_trans(=>(ftRealNumber(N),equal(uMeasureFn(N,vHorsepowerFn),uMeasureFn(uMultiplicationFn(N,746),vWattFn))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323585).
lisp_trans(ttCompositeUnitOfMeasure(vCoulombFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323807).
lisp_trans(tSumoSystemeInternationalUnit(vCoulombFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323849).
lisp_trans(documentation(vCoulombFn,vEnglishLanguage,"SI electric charge measure.  Symbol: C. It is the quantity of electric charge transported through a cross section of a conductor in an electric circuit during each #$SecondDuration by a current of 1 #$Ampere. #$Coulomb = s*A."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':323893).
lisp_trans(documentation(vCoulombFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µé\207\\217\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Cã\200\\202\åº\223\ä»\221\æ\230\¯å½\223\ç\224\µè·¯è½½æ\234\\211\1  #$Ampere ç©©å®\232\é\233\»æµ\201\æ\227\¶ï¼\214\å\234\¨1 #$SecondDuration ç§\222\å\206\\205\é\200\\232\è¿\207\å¯¼çº¿æ¨ªæ\210\ªé\235\¢ç§¯ç\232\\204\ç\224\µé\207\\217\ã\200\\202\#$Coulomb = s*A."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324161).
lisp_trans(=>(equal(QUANTITY,uMeasureFn(NUMBER,vCoulombFn)),timeTimeDependentQuantity(QUANTITY)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324394).
lisp_trans(ttCompositeUnitOfMeasure(vVoltFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324521).
lisp_trans(tSumoSystemeInternationalUnit(vVoltFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324560).
lisp_trans(documentation(vVoltFn,vEnglishLanguage,"SI electric potential measure.  Symbol: V.  It is the difference of electric potential between two points of a conducting wire carrying a constant current of 1 #$Ampere, when the power dissipated between these points is equal to 1 #$Watt.  #$Volt = W/A = m^2*kg*s^(-3)*A^(-1)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324601).
lisp_trans(documentation(vVoltFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µå\216\\213\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Vã\200\\202\å®\203\æ\230\¯å\234\¨è¼\211\æ\234\\211\1 #$Ampere æ\201\\206\å®\232\é\233\»æµ\201\ç\232\\204\å°\216\ç·\232\ä¸\212\ï¼\214\ç\225\¶å\205\©é»\236\ä¹\213\é\226\\223\å°\216\ç·\232\ä¸\212\ç\232\\204\å\212\\237\ç\216\\207\è\200\\227\æ\225\£ç\202\º1 #$Watt æ\231\\202\ï¼\214\é\200\\231\å\205\©é»\236\ä¹\213\é\226\\223\ç\232\\204\é\233\»ä½\215\å·®ã\200\\202\ #$Volt = W/A = m^2*kg*s^(-3)*A^(-1)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':324917).
lisp_trans(ttCompositeUnitOfMeasure(vFaradFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325213).
lisp_trans(tSumoSystemeInternationalUnit(vFaradFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325253).
lisp_trans(documentation(vFaradFn,vEnglishLanguage,"SI capacitance measure.  Symbol: F.  It is the capacitance of a capacitator between the plates of which there appears a difference of potential of 1 #$Volt when it is charged by a quantity of electricity equal to 1 Coulomb.  #$Farad = C/V = m^(-2)*kg(-1)*s^4*A^2."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325295).
lisp_trans(documentation(vFaradFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ç\232\\204\ç\224\µå®¹å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\Fã\200\\202\å®\203\æ\230\¯å½\223\ä¸¤ä¸ªå\207\ºç\216\° 1 #$Volt  ç\232\\204\ç\224\µä½\215\å·®ç\232\\204\å¹³é\235\¢è¢«ç­\211\äº\216\1 åº\223\ä»\223\å\205\\205\ç\224\µæ\227\¶ï¼\214\å®\203\ä»¬ä¹\213\é\227\´ç\224\µå®¹å\231\¨ç\232\\204\ç\224\µå®¹ã\200\\202\ #$Farad = C/V = m^(-2)*kg(-1)*s^4*A^2ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325599).
lisp_trans(ttCompositeUnitOfMeasure(vOhmFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325877).
lisp_trans(tSumoSystemeInternationalUnit(vOhmFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325915).
lisp_trans(documentation(vOhmFn,vEnglishLanguage,"SI electric resistance measure. It is the electric resistance between two points of a conductor when a constant difference of potential of 1 #$Volt, applied between these two points, produces in this conductor a current of 1 #$Ampere, this conductor not being the force of any electromotive force.  #$Ohm = V/A = m^2*kg*s^(-3)*A^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':325955).
lisp_trans(documentation(vOhmFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µé\230\»å\200\¼ç\232\\204\å\215\\225\ä½\215\ã\200\\202\å®\203\æ\230\¯å\234\¨ä¸\200\å\200\\213\ç\204\¡é\233\»å\213\\225\å\213\¢ç\232\\204\å°\216\é«\224\ä¸\212\ï¼\214\å\234\¨å\205\© é»\236\é\226\\223\æ\226\½å\216\\213\ 1 #$Volt é\233\»å£\223\ï¼\214\ä»¤å\234\¨å°\216\é«\224\ä¸\212\ç\224\¢ç\224\\237\ 1 #$Ampere é\233\»æµ\201\æ\231\\202\ï¼\214\æ­¤æ\231\\202\å\205\©é»\236\é\226\\223\ç\232\\204\é\233\»é\230\»æ\230\¯1æ­\220\å§\206\ã\200\\202\ #$Ohm = V/A = m^2*kg*s^(-3)*A^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':326328).
lisp_trans(ttCompositeUnitOfMeasure(vSiemensFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':326646).
lisp_trans(tSumoSystemeInternationalUnit(vSiemensFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':326688).
lisp_trans(documentation(vSiemensFn,vEnglishLanguage,"SI electric conductance measure.  Symbol:  S. In the case of direct current, the conductance in #$Siemens is the reciprocal of the resistance in #$Ohms, in the case of alternating current, it is the reciprocal of the impedance in ohms.  siemens = A/V = m^(-2)*kg(-1)*s^(3)*A^2."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':326732).
lisp_trans(documentation(vSiemensFn,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µå¯¼ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Sã\200\\202\å\234\¨ç\233\´æµ\201\ç\224\µç\232\\204\æ\203\\205\å\206\µä¸\213\ï¼\214\ ä»¥ #$Siemens ä¸ºå\215\\225\ä½\215\ç\232\\204\ç\224\µå¯¼æ\230\¯ä»¥ #$Ohm ä¸ºå\215\\225\ä½\215\ç\224\µé\230\»ç\232\\204\å\200\\222\æ\225\°ï¼\214\å\234\¨äº¤æµ\201\ç\224\µç\232\\204\æ\203\\205\å\206\µä¸\213\ï¼\214\å®\203\æ\230\¯ä»¥æ¬§å§\206\ä¸ºå\215\\225\ä½\215\é\230\»æ\212\\227\ç\232\\204\å\200\\222\æ\225\°ã\200\\202\ siemens = A/V = m^(-2)*kg(-1)*s^(3)*A^2ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':327052).
lisp_trans(ttCompositeUnitOfMeasure(tSumoWeber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':327389).
lisp_trans(tSumoSystemeInternationalUnit(tSumoWeber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':327429).
lisp_trans(documentation(tSumoWeber,vEnglishLanguage,"SI magnetic flux measure.  Symbol: Wb. It is the magnetic flux which, linking a circuit of one turn, produces in it an electromotive force of 1 #$Volt as it is reduced to zero at a uniform rate in 1 #$SecondDuration.  #$Weber = V*s = m^2*kg*s^(-2)*A^(-1)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':327472).
lisp_trans(documentation(tSumoWeber,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç£\201\é\200\\232\é\207\\217\ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Wbã\200\\202\é\237\¦ä¼¯æ\230\¯è¿\236\æ\216\¥ç\224\µè·¯ä¸\200\å\234\\210\ï¼\214\ ä»¥å¹³å\235\\207\ 1 #$SecondDuration ç\232\\204\é\200\\237\åº¦é\200\\222\å\207\\217\å\210\°é\233\¶æ\211\\200\ç\224\¢ç\224\\237\1 #$Volt ç\232\\204\é\233\»å\213\\225\å\213\¢ã\200\\202\ #$Weber = V*s = m^2*kg*s^(-2)*A^(-1)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':327769).
lisp_trans(ttCompositeUnitOfMeasure(tSumoTesla),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328059).
lisp_trans(tSumoSystemeInternationalUnit(tSumoTesla),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328099).
lisp_trans(documentation(tSumoTesla,vEnglishLanguage,"SI magnetic flux density measure.  Symbol:  T. One #$Tesla equals one #$Weber per square #$Meter.  #$Tesla = Wb/m^2 = kg*s^(-2)*A^(-1)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328141).
lisp_trans(documentation(tSumoTesla,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç£\201\é\200\\232\é\207\\217\å¯\206\åº¦ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Tã\200\\202\1 #$Tesla ç­\211\äº\216\ æ¯\217\å¹³æ\226\¹ #$Meter 1 #$Weberã\200\\202\ #$Tesla = Wb/m^2 = kg*s^(-2)*A^(-1)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328317).
lisp_trans(ttCompositeUnitOfMeasure(tSumoHenry),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328533).
lisp_trans(tSumoSystemeInternationalUnit(tSumoHenry),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328573).
lisp_trans(documentation(tSumoHenry,vEnglishLanguage,"SI inductance measure.  Symbol: H.  One #$Henry is equivalent to one #$Volt divided by one #$Ampere per #$SecondDuration. If a current changing at the rate of one #$Ampere per #$SecondDuration induces an electromotive force of one #$Volt, the circuit has an inductance of one #$Henry.  #$Henry = Wb/A = m^2*kg*s^(-2)*A^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328615).
lisp_trans(documentation(tSumoHenry,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µæ\204\\237\ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Hã\200\\202\1 #$Henry ç­\211\äº\216\1  #$Volt é\231\¤ä»¥1 #$Ampere/ #$SecondDuration.å¦\202\æ\236\\234\ç\224\µè·¯ä¸­ç\224\µæµ\201\æ¯\217\ #$SecondDuration å\217\\230\å\214\\226\1 #$Ampere,å\210\\231\ä¼\232\ äº§ç\224\\237\1 #$Volt ç\232\\204\æ\204\\237\åº\224\ç\224\µå\212\¨å\212\¿ï¼\214\æ­¤æ\227\¶ç\224\µè·¯ç\232\\204\ç\224\µæ\204\\237\å®\232\ä¹\211\ä¸º1#$Henryã\200\\202\#$Henry = Wb/A = m^2*kg*s^(-2)*A^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':328980).
lisp_trans(vtUnitOfTemperature(vtCelsiusDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329352).
lisp_trans(tSumoSystemeInternationalUnit(vtCelsiusDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329395).
lisp_trans(documentation(vtCelsiusDegree,vEnglishLanguage,s("A","#$TemperatureMeasure",".","The","freezing","point","and","the","boiling","point","of","water","are",",","respectively",",","0","#$CelsiusDegrees","and","100","#$CelsiusDegrees",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329445).
lisp_trans(documentation(vtCelsiusDegree,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TemperatureMeasureï","¼","\214\","æ","°","´","ç","\232\","\204\","å","\206\","°","ç","\202\","¹","å","\222\","\214\","æ","²","¸","ç","\202\","¹","å","\210\","\206\","å","\210\","«","æ","\230\","¯","0","#$CelsiusDegree","å","\222\","\214\","100","#$CelsiusDegreeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329632).
lisp_trans(equal(uMeasureFn(NUMBER,vtCelsiusDegree),uMeasureFn(uSubtractionFn(NUMBER,273.15),vtKelvinDegree)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329794).
lisp_trans(equal(uMeasureFn(NUMBER,vtCelsiusDegree),uMeasureFn(uDivisionFn(uSubtractionFn(NUMBER,32),1.8),vtFahrenheitDegree)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':329897).
lisp_trans(ttCompositeUnitOfMeasure(tSumoLumen),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330040).
lisp_trans(tSumoSystemeInternationalUnit(tSumoLumen),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330080).
lisp_trans(documentation(tSumoLumen,vEnglishLanguage,"SI luminous flux measure.  Symbol: lm.  It is the amount streaming outward through one solid angle of 1 #$Steradian from a uniform point source having an intensity of one #$Candela.  #$Lumen = cd*sr = cd * 1."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330122).
lisp_trans(documentation(tSumoLumen,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ç\232\\204\å\205\\211\é\200\\232\é\207\\217\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\lmã\200\\202\è¿\231\æ\230\¯ä»\216\ä¸\200\ä¸ªå\205\\211\æº\220\å\217\\221\å°\204\1 #$Candela å¼ºåº¦ç\232\\204\å\205\\211\é\200\\232\è¿\207\1 #$Steradian ç\232\\204\ç«\213\ä½\223\è§\222\å\220\\221\å¤\226\æ\225\£å\217\\221\ç\232\\204\å\205\\211\é\200\\232\é\207\\217\ã\200\\202\#$Lumen = cd*sr = cd * 1ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330371).
lisp_trans(ttCompositeUnitOfMeasure(tSumoLux),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330627).
lisp_trans(tSumoSystemeInternationalUnit(tSumoLux),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330665).
lisp_trans(documentation(tSumoLux,vEnglishLanguage,"SI illuminance measure.  Symbol: lx.  It is the amount of illumination provided when one #$Lumen is evenly distributed over an area of 1 square #$Meter. This is also equivalent to the illumination that would exist on a surface all points of which are one #$Meter from a point source of one #$Candela.  #$Lux = lm/m^2 = m^(-2)*cd."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':330705).
lisp_trans(documentation(tSumoLux,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶ç\232\\204\ç\205\§åº¦å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\lxã\200\\202\è¿\231\æ\230\¯å½\223\1 #$Lumen ç\232\\204\å\205\\211\é\200\\232\é\207\\217\ å¹³å\235\\207\æ\225\£å\217\\221\å\210\° 1 å¹³æ\226\¹ #$Meter ç\232\\204\é\235\¢ç§¯æ\227\¶æ\211\\200\æ\234\\211\äº§ç\224\\237\ç\232\\204\ç\205\§æ\230\\216\åº¦ã\200\\202\å®\203\ä¹\237\ç­\211\äº\216\ç¦»å\205\\211\æº\220\1 #$Candela 1 #$Meter æ\211\\200\æ\234\\211\ç\202\¹è¡¨é\235\¢æ\211\\200\ æ\224\¶å\210\°ç\232\\204\ç\205\§æ\230\\216\ã\200\\202\#$Lux = lm/m^2 = m^(-2)*cdã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':331073).
lisp_trans(ttCompositeUnitOfMeasure(tSumoBecquerel),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':331397).
lisp_trans(tSumoSystemeInternationalUnit(tSumoBecquerel),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':331441).
lisp_trans(documentation(tSumoBecquerel,vEnglishLanguage,s("SI","radioactivity","measure",".","Symbol",":","Bq",".","It","measures","the","amount","of","radioactivity","contained","in","a","given","sample","of","matter",".","It","is","that","quantity","of","a","radioactive","element","in","which","there","is","one","atomic","disintegration","per","#$SecondDuration",".","#$Becquerel","=","s","^","(","-1",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':331487).
lisp_trans(documentation(tSumoBecquerel,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","é","\207\","\217\","åº","¦","æ","\224\","¾","å","°","\204\","æ","\200\","§","æ","´","»","åº","¦","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\","ç","¬","¦","å","\217\","·","ï","¼","\232\","Bqã","\200\","\202\","å","®","\203\","é","\207\","\217\","åº","¦","æ","\214\","\207\","å","®","\232\","æ","\240\","·","æ","\234\","¬","ç","\211\","©","è","´","¨","æ","\211\","\200\","å","\220\","«","ç","\232\","\204\","æ","\224\","¾","å","°","\204\","æ","\200\","§","æ","´","»","åº","¦","ã","\200\","\202\","è","¿","\231\","æ","\230\","¯","ä","»","¥","æ","¯","\217\","#$SecondDuration","å","\210\","\206\","è","§","£","ä","¸","\200\","ä","¸","ªå","\216\","\237\","å","­","\220\","è","¡","°","å","\217\","\230\","æ","\211\","\200\","å","¾","\227\","ç","\232\","\204\","æ","\224\","¾","å","°","\204\","å","\205\","\203\","ç","´","\240\","é","\207\","\217\","ã","\200\","\202\","#$Becquerel","=","s","^","(","-1",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':331785).
lisp_trans(=>(equal(QUANTITY,uMeasureFn(NUMBER,tSumoBecquerel)),timeTimeDependentQuantity(QUANTITY)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332060).
lisp_trans(ttCompositeUnitOfMeasure(tSumoGray),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332184).
lisp_trans(tSumoSystemeInternationalUnit(tSumoGray),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332223).
lisp_trans(documentation(tSumoGray,vEnglishLanguage,"SI absorbed dose measure.  Symbol: Gy.  It measures the dose of radiation absorbed in living tissue. It is equal approximately to the absorbed dose delivered when the energy per unit mass imparted to matter by ionizing radiation is 1 #$Joule per kilogram.  #$Gray = J/kg = m^2*s^(-2)."),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332264).
lisp_trans(documentation(tSumoGray,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦ç\224\µç¦»è¾\220\å°\204\å\220\¸æ\224\¶å\211\\202\é\207\\217\ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Gyã\200\\202\å®\203\é\207\\217\åº¦æ´» ç»\204\ç»\207\æ\211\\200\å\220\¸æ\224\¶ç\232\\204\è¾\220\å°\204\å\211\\202\é\207\\217\ã\200\\202\å®\203\å¤§çº¦ç­\211\äº\216\å½\223\ç\224\µç¦»è¾\220\å°\204\ç»\231\ç\211\©è´¨æ\224\¾å°\204\å\215\\225\ä½\215\è´¨é\207\\217\æ¯\217\å\205\¬æ\226\¤ 1 #$Joule ç\232\\204\è\203\½é\207\\217\æ\227\¶ï¼\214\ç\211\©ä½\223\ æ\211\\200\å\220\¸æ\224\¶ç\232\\204\å\211\\202\é\207\\217\ #$Gray = J/kg = m^2*s^(-2)ã\200\\202\"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332588).
lisp_trans(ttCompositeUnitOfMeasure(tSumoSievert),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332925).
lisp_trans(tSumoSystemeInternationalUnit(tSumoSievert),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':332967).
lisp_trans(documentation(tSumoSievert,vEnglishLanguage,"SI dose equivalent measure.  Symbol: Sv.  It is a unit of biologic dose of ionizing radiation.  The #$Sievert makes it possible to normalize doses of different types of radiation. It takes into account the relative biologic effectiveness of ionizing radiation, since each form of such radiation--e.g., X rays, gamma rays, neutrons-- has a slightly different effect on living tissue for a given absorbed dose. The dose equivalent of a given type of radiation (in #$Sievert) is the dose of the radiation in #$Gray multiplied by a quality factor that is based on the relative biologic effectiveness of the radiation. Accordingly, one #$Sievert is generally defined as the amount of radiation roughly equivalent in biologic effectiveness to one #$Gray of gamma radiation.  #$Sievert = J/kg = m^2*s^(-2)"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':333011).
lisp_trans(documentation(tSumoSievert,xtChineseLanguage,"è¿\231\æ\230\¯å\233\½é\231\\205\å\215\\225\ä½\215\å\210\¶é\207\\217\åº¦å\217\\227\è¾\220\å°\204\ç­\211\æ\225\\210\ç\224\\237\ç\211\©å½\223\é\207\\217\ç\232\\204\å\215\\225\ä½\215\ã\200\\202\ç¬¦å\217\·ï¼\232\Svã\200\\202\å®\203\æ\230\¯ ç\224\µç¦»è¾\220\å°\204\ç\232\\204\ä¸\200\ä¸ªç\224\\237\ç\211\©å\211\\202\é\207\\217\ç\232\\204\å\215\\225\ä½\215\ã\200\\202\#$Sievertä»¤å½\222\å\214\\226\ä¸\215\å\220\\214\ç±»å\236\\213\ç\232\\204\è¾\220\å°\204\å\211\\202\é\207\\217\å\217\\230\å¾\227\å\217\¯è¡\214\ã\200\\202\å®\203\è\200\\203\è\231\\221\å\210\°ç\224\µç¦»è¾\220\å°\204\ç\232\\204\ç\233\¸å¯¹ç\224\\237\ç\211\©å­¦æ\225\\210\å\212\\233\ï¼\214\ å\233\\240\ä¸ºè¿\231\ç§\215\è¾\220\å°\204\ç\232\\204\æ¯\217\ç§\215\å½¢å¼\217\ï¼\214\å¯¹äº\216\æ\214\\207\å®\232\ç\232\\204\å\220\¸æ\224\¶å\211\\202\é\207\\217\ï¼\214\ä¾\213\å¦\202\Xå°\204\çº¿ã\200\\201\ä¼½é©¬å°\204\çº¿ã\200\\201\ä¸­å­\220\ï¼\214\å¯¹æ´»ç»\204\ç»\207\å\205\·æ\234\\211\è½»å¾®ä¸\215\å\220\\214\ç\232\\204\å½±å\223\\215\ã\200\\202\æ\203\³ç­\211\äº\216\ ä¸\200\ç§\215\æ\214\\207\å®\232\è¾\220\å°\204\ç\232\\204\å\211\\202\é\207\\217\(#$Sievert)æ\230\¯ä»¥ #$Gray ä¸ºå\211\\202\é\207\\217\ç\232\\204\è¾\220\å°\204\ä¹\230\ä»¥å\237\ºäº\216\è¾\220\å°\204\ç\232\\204\ç\233\¸å¯¹ç\224\\237\ç\211\©æ\225\\210\åº\224\ç\232\\204\ä¸\200\ä¸ªå\223\\201\è´¨å\233\\240\æ\225\°ã\200\\202\å\233\\240\æ­¤ï¼\214\ 1 #$Sievert é\200\\232\å¸¸å®\232\ä¹\211\ä¸ºå¤§è\207\´ç­\211\äº\216\ä¼½é©¬è¾\220\å°\204\1 #$Gray ç\224\\237\ç\211\©æ\225\\210\å\212\\233\ç\232\\204\è¾\220\å°\204\é\207\\217\ã\200\\202\#$Sievert = J/kg = m^2*s^(-2)"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':333852).
lisp_trans(vtUnitOfDuration(actDayDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334602).
lisp_trans(documentation(actDayDuration,vEnglishLanguage,s("Time","unit",".","1","day","=","24","hours",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334640).
lisp_trans(documentation(actDayDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","1","æ","\227\","¥","=","24","å","°","\217\","æ","\227\","¶","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334715).
lisp_trans(equal(uMeasureFn(NUMBER,actDayDuration),uMeasureFn(uMultiplicationFn(NUMBER,24),actHourDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334802).
lisp_trans(vtUnitOfDuration(actHourDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334902).
lisp_trans(documentation(actHourDuration,vEnglishLanguage,s("Time","unit",".","1","hour","=","60","minutes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':334941).
lisp_trans(documentation(actHourDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","1","å","°","\217\","æ","\227\","¶","=","60","å","\210\","\206\","é","\222\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335020).
lisp_trans(equal(uMeasureFn(NUMBER,actHourDuration),uMeasureFn(uMultiplicationFn(NUMBER,60),actMinuteDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335111).
lisp_trans(vtUnitOfDuration(actMinuteDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335214).
lisp_trans(documentation(actMinuteDuration,vEnglishLanguage,s("Time","unit",".","1","minute","=","60","seconds",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335255).
lisp_trans(documentation(actMinuteDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","1","å","\210\","\206\","é","\222\","\237\","=","60","ç","§","\222\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335339).
lisp_trans(equal(uMeasureFn(NUMBER,actMinuteDuration),uMeasureFn(uMultiplicationFn(NUMBER,60),actSecondDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335430).
lisp_trans(vtUnitOfDuration(actWeekDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335535).
lisp_trans(documentation(actWeekDuration,vEnglishLanguage,s("Time","unit",".","A","week","'s","duration","is","seven","days",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335574).
lisp_trans(documentation(actWeekDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ä","¸","\200\","å","\221\","¨","ä","¸","ºæ","\234\","\237\","ä","¸","\203\","å","¤","©","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335667).
lisp_trans(equal(uMeasureFn(NUMBER,actWeekDuration),uMeasureFn(uMultiplicationFn(NUMBER,7),actDayDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335760).
lisp_trans(vtUnitOfDuration(actMonthDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335861).
lisp_trans(documentation(actMonthDuration,vEnglishLanguage,s("Time","unit",".","A","month","'s","duration","is","at","least","28","days",",","and","no","more","than","31","days",".","Note","that","this","unit","is","a","range",",","rather","than","an","exact","amount",",","unlike","most","other","units",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':335901).
lisp_trans(documentation(actMonthDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ä","¸","\200\","ä","¸","ªæ","\234\","\210\","ä","¸","ºæ","\234\","\237\","èµ","·","ç","\240\","\201\","28","å","¤","©","ï","¼","\214\","è","\200\","\214\","ä","¼","\232\","è","¶","\205\","è","¿","\207\","31","å","¤","©","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\222\","\214\","å","\205\","¶","å","®","\203\","å","¤","§","å","¤","\232\","æ","\225\","°","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ä","¸","\215\","å","\220\","\214\","ï","¼","\214\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\214\","\203\","å","\233\","´","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\207\","\206\","ç","¡","®","æ","\225\","°","å","­","\227\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336114).
lisp_trans(greaterThanOrEqualTo(uMeasureFn(NUMBER,actMonthDuration),uMeasureFn(uMultiplicationFn(NUMBER,28),actDayDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336337).
lisp_trans(lessThanOrEqualTo(uMeasureFn(NUMBER,actMonthDuration),uMeasureFn(uMultiplicationFn(NUMBER,31),actDayDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336453).
lisp_trans(vtUnitOfDuration(actYearDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336566).
lisp_trans(documentation(actYearDuration,vEnglishLanguage,s("Time","unit",".","one","calendar","year",".","1","year","=","365","days","=","31536000","seconds",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336605).
lisp_trans(documentation(actYearDuration,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\227\","¶","é","\227\","´","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ä","¸","\200\","ä","¸","ªæ","\227\","¥","å","\216\","\206\","å","¹","´","ï","¼","\214\","1","å","¹","´","=","365","æ","\227\","¥","=","31536000","ç","§","\222\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336720).
lisp_trans(equal(uMeasureFn(NUMBER,actYearDuration),uMeasureFn(uMultiplicationFn(NUMBER,365),actDayDuration)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':336834).
lisp_trans(vtUnitOfMass(tSumoAmu),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337070).
lisp_trans(documentation(tSumoAmu,vEnglishLanguage,s("Atomic","mass","unit",".","Symbol",":","u",".","It","is","the","mass","of","the","twelfth","part","of","an","atom","of","the","Carbon","12","isotope",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337096).
lisp_trans(documentation(tSumoAmu,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\216\","\237\","å","­","\220\","è","´","¨","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","uã","\200\","\202\","å","®","\203\","æ","\230\","¯","ç","¢","³","-12","å","\220\","\214\","ä","½","\215\","ç","´","\240\","å","\216\","\237\","å","­","\220\","è","´","¨","é","\207\","\217\","ç","\232\","\204\","1","/","12","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337236).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoAmu),uMeasureFn(uMultiplicationFn(NUMBER,1.6605402e-24),vGramFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337359).
lisp_trans(ttCompositeUnitOfMeasure(vElectronVoltFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337454).
lisp_trans(documentation(vElectronVoltFn,vEnglishLanguage,s("The","#$ElectronVolt","is","an","energy","measure",".","Symbol",":","eV",".","It","is","the","kinetic","energy","acquired","by","an","electron","in","passing","through","a","potential","difference","of","1","#$Volt","in","a","vacuum",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337501).
lisp_trans(documentation(vElectronVoltFn,xtChineseLanguage,'ElectronVolt æ\230\¯ä¸\200\ä¸ªè\203\½é\207\\217\å\215\\225\ä½\215\ï¼\214\ç¬¦å\217\·ï¼\232\eVã\200\\202\å®\203\æ\230\¯ä¸\200\ä¸ª ç\224\µå­\220\å\234\¨ç\234\\237\ç©ºç\232\\204\æ\203\\205\å\206\µä¸\213\ï¼\214\ç»\217\è¿\207\ 1 #$Voltç\224\µä½\215\å·®æ\211\\200\è\216\·å¾\227\ç\232\\204\å\212\¨è\203\½ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337718).
lisp_trans(equal(uMeasureFn(NUMBER,vElectronVoltFn),uMeasureFn(uMultiplicationFn(NUMBER,1.60217733e-19),vJouleFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':337908).
lisp_trans(vtUnitOfLength(vAngstromFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338095).
lisp_trans(documentation(vAngstromFn,vEnglishLanguage,s("The","#$Angstrom","is","a","#$LengthMeasure",".","1","#$Angstrom","=","10","^","(","-10",")","m")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338128).
lisp_trans(documentation(vAngstromFn,xtChineseLanguage,'Angstrom æ\230\¯ä¸\200\ä¸ª #$LengthMeasureã\200\\202\ 1 #$Angstrom = 10^(-10) m'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338234).
lisp_trans(equal(uMeasureFn(NUMBER,vAngstromFn),uMeasureFn(uMultiplicationFn(NUMBER,1.0e-10),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338344).
lisp_trans(vtUnitOfLength(tSumoFootLength),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338578).
lisp_trans(documentation(tSumoFootLength,vEnglishLanguage,s("English","length","unit","of","feet",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338613).
lisp_trans(documentation(tSumoFootLength,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\225\","¿","åº","¦","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","è","\213\","±","å","°","ºã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338687).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoFootLength),uMeasureFn(uMultiplicationFn(NUMBER,0.3048),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338770).
lisp_trans(vtUnitOfLength(vInchFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338866).
lisp_trans(documentation(vInchFn,vEnglishLanguage,s("English","length","unit","of","inches",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338895).
lisp_trans(documentation(vInchFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\225\","¿","åº","¦","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","è","\213\","±","å","¯","¸","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':338965).
lisp_trans(equal(uMeasureFn(NUMBER,vInchFn),uMeasureFn(uMultiplicationFn(NUMBER,0.0254),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339042).
lisp_trans(vtUnitOfLength(vMileFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339132).
lisp_trans(documentation(vMileFn,vEnglishLanguage,s("English","length","unit","of","miles",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339161).
lisp_trans(documentation(vMileFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\225\","¿","åº","¦","å","\215\","\225\","ä","½","\215\","ç","\232\","\204\","è","\213\","±","é","\207\","\214\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339230).
lisp_trans(equal(uMeasureFn(NUMBER,vMileFn),uMeasureFn(uMultiplicationFn(NUMBER,1609.344),vMeterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339307).
lisp_trans(vtUnitOfVolume(tSumoUnitedStatesGallon),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339421).
lisp_trans(relatedInternalConcept(tSumoUnitedStatesGallon,tSumoUnitedKingdomGallon),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339464).
lisp_trans(documentation(tSumoUnitedStatesGallon,vEnglishLanguage,s("Unit","of","volume","commonly","used","in","the","United","States",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339528).
lisp_trans(documentation(tSumoUnitedStatesGallon,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","¾","\216\","å","\233\","½","æ","\231\","®","é","\201\","\215\","ä","½","¿","ç","\224\","¨","ç","\232\","\204\","å","®","¹","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339632).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoUnitedStatesGallon),uMeasureFn(uMultiplicationFn(NUMBER,3.785411784),vLiterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339729).
lisp_trans(vtUnitOfVolume(tSumoQuart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339838).
lisp_trans(documentation(tSumoQuart,vEnglishLanguage,s("English","unit","of","volume","equal","to","1","/","4","of","a","#$UnitedStatesGallon",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339868).
lisp_trans(documentation(tSumoQuart,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\207\","\217\","åº","¦","å","®","¹","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","ç","­","\211\","äº","\216\","1","/","4","#$UnitedStatesGallonã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':339972).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoQuart),uMeasureFn(uDivisionFn(NUMBER,4),tSumoUnitedStatesGallon)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340086).
lisp_trans(vtUnitOfVolume(tSumoPint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340179).
lisp_trans(documentation(tSumoPint,vEnglishLanguage,s("English","unit","of","volume","equal","to","1","/","2","of","a","#$Quart",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340208).
lisp_trans(documentation(tSumoPint,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\207\","\217\","åº","¦","å","®","¹","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","ç","­","\211\","äº","\216\","1","/","2","#$Quartã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340297).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoPint),uMeasureFn(uDivisionFn(NUMBER,2),tSumoQuart)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340397).
lisp_trans(vtUnitOfVolume(tObjectCup),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340476).
lisp_trans(documentation(tObjectCup,vEnglishLanguage,s("English","unit","of","volume","equal","to","1","/","2","of","a","#$Pint",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340504).
lisp_trans(documentation(tObjectCup,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\207\","\217\","åº","¦","å","®","¹","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","ç","­","\211\","äº","\216\","1","/","2","#$Pintã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340591).
lisp_trans(equal(uMeasureFn(NUMBER,tObjectCup),uMeasureFn(uDivisionFn(NUMBER,2),tSumoPint)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340689).
lisp_trans(vtUnitOfVolume(vOunceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340766).
lisp_trans(documentation(vOunceFn,vEnglishLanguage,s("English","unit","of","volume","equal","to","1","/","8","of","a","#$Cup",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340796).
lisp_trans(documentation(vOunceFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\210\","¶","é","\207\","\217\","åº","¦","å","®","¹","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","ç","­","\211\","äº","\216\","1","/","8","#$Cup",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340884).
lisp_trans(equal(uMeasureFn(NUMBER,vOunceFn),uMeasureFn(uDivisionFn(NUMBER,8),tObjectCup)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':340981).
lisp_trans(vtUnitOfVolume(tSumoUnitedKingdomGallon),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341059).
lisp_trans(documentation(tSumoUnitedKingdomGallon,vEnglishLanguage,s("Unit","of","volume","commonly","used","in","the","United","Kingdom",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341103).
lisp_trans(documentation(tSumoUnitedKingdomGallon,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","\213\","±","å","\233\","½","æ","\231\","®","é","\201\","\215\","ä","½","¿","ç","\224\","¨","ç","\232\","\204\","å","®","¹","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341209).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoUnitedKingdomGallon),uMeasureFn(uMultiplicationFn(NUMBER,4.54609),vLiterFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341307).
lisp_trans(vtUnitOfMass(tSumoAtomGram),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341433).
lisp_trans(documentation(tSumoAtomGram,vEnglishLanguage,'MassMeasure that is also known as the  gram-atom. Defined as the mass in grams of 1 #$Mole of pure substance.  For example, 1 #$AtomGram of Carbon 12 will be 12 #$Gram of pure Carbon 12.  2 #$AtomGram of the same substance will be 24 #$Gram of it.  This is an unusual unit in that it is essentially 1 #$Mole of \'stuff\' measured in grams, so that the actual value (i.e. mass) depends on the type of substance.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341464).
lisp_trans(documentation(tSumoAtomGram,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$MassMeasureï","¼","\214\","ä","¹","\237\","ç","§","°","ä","¸","ºå","\205\","\213\","å","\216\","\237\","å","­","\220\","ï","¼","\214\","å","®","\203\","ç","\232\","\204\","å","®","\232\","ä","¹","\211\","ä","¸","ºä","»","¥","å","\205\","\213\","è","®","¡","1","#$Mole","çº","¯","ç","\211\","©","è","´","¨","ç","\232\","\204\","è","´","¨","é","\207\","\217\","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","1","#$AtomGram","ç","\232\","\204\","ç","¢","³","-12","ä","¼","\232\","æ","\230\","¯","12","#$Gram","ç","\232\","\204\","çº","¯","ç","¢","³","-12","ã","\200\","\202\","2","#$AtomGram","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ç","\211\","©","è","´","¨","ä","¼","\232\","æ","\230\","¯","å","®","\203\","ç","\232\","\204\","24","#$Gramã","\200\","\202\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¸","\215\","å","¯","»","å","¸","¸","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","\233\","\240\","ä","¸","ºå","®","\203\","å","\237\","ºæ","\234\","¬","ä","¸","\212\","1","#$Mole","ç","\232\","\204\","'","ä","¸","\234\","è","¥","¿","'","æ","\230\","¯","ä","»","¥","å","\205\","\213\","æ","\235\","¥","é","\207\","\217\","åº","¦","ï","¼","\214\","æ","\211\","\200\","ä","»","¥","å","®","\236\","é","\231\","\205\","å","\200\","¼","ï","¼","\214\","ä","¹","\237\","å","°","±","æ","\230\","¯","å","®","\203\","ç","\232\","\204\","è","´","¨","é","\207\","\217\","è","¦","\201\","ç","\234\","\213\","ç","\211\","©","è","´","¨","ç","\232\","\204\","ç","§","\215\","ç","±","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':341918).
lisp_trans(documentation(vKilogramFn,vEnglishLanguage,s("Supermultiple","of","#$Gram",".","Symbol",":","kg",".","1","#$Kilogram","=","1000","Grams",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342334).
lisp_trans(documentation(vKilogramFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Gramm","ç","\232\","\204\","å","\200\","\215\","æ","\225\","°","ï","¼","\214\","ç","¬","¦","å","\217\","·","ï","¼","\232\","kg",".","1","#$Kilogram","=","1000","å","\205\","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342442).
lisp_trans(tSumoSystemeInternationalUnit(vKilogramFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342552).
lisp_trans(vtUnitOfMass(vKilogramFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342597).
lisp_trans(equal(uMeasureFn(NUMBER,vKilogramFn),uMeasureFn(uMultiplicationFn(NUMBER,1000),vGramFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342629).
lisp_trans(argIsa(weight,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342724).
lisp_trans(argIsa(weight,2,vtMassMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342762).
lisp_trans(rtBinaryPredicate(weight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342792).
lisp_trans(genlPreds(weight,measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342826).
lisp_trans(documentation(weight,vEnglishLanguage,s("(","#$weight","?","O","?","MM",")","means","that","on","planet","earth","the","#$SelfConnectedObject","?","O","has","the","weight","?","MM",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342855).
lisp_trans(documentation(weight,xtChineseLanguage,s("(","#$weight","?","O","?","MM",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","å","\234\","°","ç","\220\","\203\","ä","¸","\212\","ï","¼","\214\","è","¿","\231\","ä","¸","ª","#$SelfConnectedObject","?","O","ç","\232\","\204\","é","\207\","\215\","é","\207\","\217\","æ","\230\","¯","?","MMã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':342990).
lisp_trans(vtUnitOfMass(tSumoPoundMass),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343129).
lisp_trans(documentation(tSumoPoundMass,vEnglishLanguage,s("English","mass","unit","of","pounds",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343161).
lisp_trans(documentation(tSumoPoundMass,xtChineseLanguage,s("è","\213\","±","å","\210\","¶","è","´","¨","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","ç","£","\205\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343234).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoPoundMass),uMeasureFn(uMultiplicationFn(NUMBER,453.59237),vGramFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343304).
lisp_trans(vtUnitOfMass(tClazzSlug),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343401).
lisp_trans(documentation(tClazzSlug,vEnglishLanguage,s("English","mass","unit","of","slugs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343428).
lisp_trans(documentation(tClazzSlug,xtChineseLanguage,s("è","\213\","±","å","\210\","¶","è","´","¨","é","\207\","\217\","å","\215\","\225\","ä","½","\215\","æ","\226\","¯","å","\213\","\222\","æ","\240\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343495).
lisp_trans(equal(uMeasureFn(NUMBER,tClazzSlug),uMeasureFn(uMultiplicationFn(NUMBER,14593.9),vGramFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343566).
lisp_trans(vtUnitOfTemperature(vtRankineDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343684).
lisp_trans(documentation(vtRankineDegree,vEnglishLanguage,s("A","#$TemperatureMeasure",".","Note","that","0","#$RankineDegrees","is","the","same","as","the","absolute","zero","(","i",".","e",".","0","#$KelvinDegrees",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343727).
lisp_trans(documentation(vtRankineDegree,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TemperatureMeasureã","\200\","\202\","æ","³","¨","ï","¼","\232\","0","#$RankineDegree","å","\222\","\214\","ç","»","\235\","å","¯","¹","é","\233\","¶","åº","¦","æ","\230\","¯","ä","¸","\200\","æ","\240\","·","ç","\232\","\204\","(","å","\215\","³","æ","\230\","¯","0","#$KelvinDegrees",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':343888).
lisp_trans(equal(uMeasureFn(NUMBER,vtRankineDegree),uMeasureFn(uMultiplicationFn(NUMBER,1.8),vtKelvinDegree)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344055).
lisp_trans(vtUnitOfTemperature(vtFahrenheitDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344158).
lisp_trans(documentation(vtFahrenheitDegree,vEnglishLanguage,s("A","#$UnitOfTemperature","that","is","commonly","used","in","the","United","States",".","On","the","Fahrenheit","scale",",","the","freezing","point","of","water","is","32","#$FahrenheitDegrees",",","and","the","boiling","point","of","water","is","212","#$FahrenheitDegrees",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344204).
lisp_trans(documentation(vtFahrenheitDegree,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªå","\234\","¨","ç","¾","\216\","å","\233\","½","æ","\231\","®","é","\201\","\215\","ä","½","¿","ç","\224\","¨","ç","\232\","\204\","#$UnitOfTemperatureï","¼","\214\","å","\234\","¨","å","\215\","\216\","æ","°","\217\","è","¡","¨","ä","¸","\212\","ï","¼","\214\","æ","°","´","ç","\232\","\204\","å","\206\","°","ç","\202\","¹","æ","\230\","¯","32","#$FahrenheitDegree","ï","¼","\214\","è","\200\","\214\","æ","°","´","ç","\232\","\204\","æ","²","¸","ç","\202\","¹","æ","\230\","¯","212","#$FahrenheitDegreeã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344461).
lisp_trans(ttCompositeUnitOfMeasure(tSumoPoundForce),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344696).
lisp_trans(documentation(tSumoPoundForce,vEnglishLanguage,s("English","pound","of","force",".","The","conversion","factor","depends","on","the","local","value","of","the","acceleration","of","free","fall",".","A","mean","value","is","used","in","the","conversion","axiom","associated","with","this","constant",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344741).
lisp_trans(documentation(tSumoPoundForce,xtChineseLanguage,s("è","\213\","±","å","\210\","¶","å","\212\","\233\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ç","£","\205\","å","\212\","\233\","ã","\200\","\202\","å","®","\203\","ç","\232\","\204\","æ","\215\","¢","ç","®","\227\","å","\233\","\240\","å","­","\220\","å","\206\","³","å","®","\232\","äº","\216\","è","\207\","ªç","\224\","±","è","\220\","½","ä","½","\223\","ç","\232\","\204\","å","±","\200\","é","\203\","¨","å","\212\","\240\","é","\200\","\237\","åº","¦","ã","\200\","\202\","å","\222\","\214\","è","¿","\231\","ä","¸","ªå","¸","¸","æ","\225\","°","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","æ","\215\","¢","ç","®","\227\","å","\205\","¬","ç","\220\","\206\","ä","¼","\232\","ç","\224\","¨","å","¹","³","å","\235\","\207\","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':344969).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoPoundForce),uMeasureFn(uMultiplicationFn(NUMBER,4.448222),vNewtonFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345158).
lisp_trans(ttCompositeUnitOfMeasure(tSumoCalorie),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345279).
lisp_trans(documentation(tSumoCalorie,vEnglishLanguage,s("A","#$Calorie","is","an","energy","measure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345321).
lisp_trans(documentation(tSumoCalorie,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$Calorie","æ","\230\","¯","é","\207\","\217\","åº","¦","è","\203\","½","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345397).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoCalorie),uMeasureFn(uMultiplicationFn(NUMBER,4.1868),vJouleFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345485).
lisp_trans(ttCompositeUnitOfMeasure(vBritishThermalUnitFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345578).
lisp_trans(documentation(vBritishThermalUnitFn,vEnglishLanguage,s("An","energy","measure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345631).
lisp_trans(documentation(vBritishThermalUnitFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","é","\207\","\217\","åº","¦","è","\203\","½","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345703).
lisp_trans(equal(uMeasureFn(NUMBER,vBritishThermalUnitFn),uMeasureFn(uMultiplicationFn(NUMBER,1055.05585262),vJouleFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345794).
lisp_trans(vtUnitOfAngularMeasure(vtAngularDegree),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345932).
lisp_trans(documentation(vtAngularDegree,vEnglishLanguage,s("A","plane","angle","measure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':345978).
lisp_trans(documentation(vtAngularDegree,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","é","\207\","\217\","åº","¦","å","¹","³","é","\235\","¢","è","§","\222\","åº","¦","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346049).
lisp_trans(=>(equal(QUANT,uMeasureFn(N,vtAngularDegree)),vtPlaneAngleMeasure(QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346141).
lisp_trans(equal(uMeasureFn(NUMBER,vtAngularDegree),uMeasureFn(uMultiplicationFn(NUMBER,uDivisionFn(tSumoPi,180)),vRadianFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346231).
lisp_trans(=>(measure(ANGLE,uMeasureFn(NUMBER,vtAngularDegree)),and(greaterThanOrEqualTo(NUMBER,0),lessThanOrEqualTo(NUMBER,360))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346344).
lisp_trans(equal(uMeasureFn(0,vtAngularDegree),uMeasureFn(360,vtAngularDegree)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346490).
lisp_trans(vtUnitOfCurrency(tSumoUnitedStatesDollar),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346613).
lisp_trans(documentation(tSumoUnitedStatesDollar,vEnglishLanguage,s("A","currency","measure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346658).
lisp_trans(documentation(tSumoUnitedStatesDollar,'Chinese',tLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","è","´","§","å","¸","\201\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346731).
lisp_trans(vtUnitOfCurrency(tSumoUnitedStatesCent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346815).
lisp_trans(documentation(tSumoUnitedStatesCent,vEnglishLanguage,s("A","currency","measure",".","1","#$UnitedStatesCent","is","equal","to",".","1","#$UnitedStatesDollars",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346858).
lisp_trans(documentation(tSumoUnitedStatesCent,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","è","´","§","å","¸","\201\","å","\215\","\225\","ä","½","\215\",",","1","#$UnitedStatesCent","ç","­","\211\","äº","\216\",".","1","#$UnitedStatesDollarã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':346990).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoUnitedStatesCent),uMeasureFn(uMultiplicationFn(NUMBER,0.01),tSumoUnitedStatesDollar)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347125).
lisp_trans(vtUnitOfCurrency(tSumoEuroDollar),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347238).
lisp_trans(documentation(tSumoEuroDollar,vEnglishLanguage,s("A","currency","measure","of","most","European","Union","countries",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347275).
lisp_trans(documentation(tSumoEuroDollar,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","¤","§","é","\203\","¨","å","\210\","\206\","æ","¬","§","ç","\233\","\237\","å","\233\","½","å","®","¶","ä","½","¿","ç","\224\","¨","ç","\232\","\204\","è","´","§","å","¸","\201\","å","\215\","\225\","ä","½","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347374).
lisp_trans(vtUnitOfCurrency(tSumoEuroCent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347472).
lisp_trans(documentation(tSumoEuroCent,vEnglishLanguage,s("A","currency","measure",".","1","#$EuroCent","is","equal","to",".","1","#$EuroDollars",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347507).
lisp_trans(documentation(tSumoEuroCent,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ç","§","\215\","è","´","§","å","¸","\201\","å","\215\","\225\","ä","½","\215\",",","1","#$EuroCent","ç","­","\211\","äº","\216\",".","1","#$EuroDollarã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347615).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoEuroCent),uMeasureFn(uMultiplicationFn(NUMBER,0.01),tSumoEuroDollar)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347724).
lisp_trans(genls(vtInformationMeasure,vtConstantQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347842).
lisp_trans(documentation(vtInformationMeasure,vEnglishLanguage,s("Measures","of","the","amount","of","information",".","Includes","#$Bit",",","#$Byte",",","and","multiples","of","these",",","e",".","g",".","#$KiloByte","and","#$MegaByte",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':347889).
lisp_trans(documentation(vtInformationMeasure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","é","\207\","\217\","åº","¦","ä","¿","¡","æ","\201\","¯","é","\207\","\217\","ç","\232\","\204\","å","\215\","\225\","ä","½","\215\","ï","¼","\214\","å","®","\203\","å","\214\","\205\","æ","\213\","¬","#$Bitã","\200\","\201\","#$Byteã","\200\","\201\","å","\222\","\214\","å","\205\","¶","ä","»","\226\","å","¤","\232\","ä","¸","ªå","¦","\202\","ï","¼","\232\","#$KiloByte","å","\222\","\214\","#$MegaByte","ç","­","\211\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348061).
lisp_trans(vtUnitOfInformation(vBitFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348231).
lisp_trans(documentation(vBitFn,vEnglishLanguage,s("One","#$Bit","of","information",".","A","one","or","a","zero",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348264).
lisp_trans(documentation(vBitFn,xtChineseLanguage,s("1","#$Bit","ç","\232\","\204\","ä","¿","¡","æ","\201\","¯","ï","¼","\214\","å","\217\","¯","ä","»","¥","æ","\230\","¯","1","æ","\210\","\226\","0","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348346).
lisp_trans(vtUnitOfInformation(vByteFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348423).
lisp_trans(documentation(vByteFn,vEnglishLanguage,s("One","#$Byte","of","information",".","A","#$Byte","is","eight","#$Bits",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348457).
lisp_trans(documentation(vByteFn,xtChineseLanguage,s("1","#$Byte","ç","\232\","\204\","ä","¿","¡","æ","\201\","¯","ï","¼","\214\","1","#$Byte","æ","\230\","¯","8","#$Bitsã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348550).
lisp_trans(equal(uMeasureFn(NUMBER,vByteFn),uMeasureFn(uMultiplicationFn(NUMBER,8),vBitFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348636).
lisp_trans(vtUnitOfInformation(tSumoKiloByte),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348719).
lisp_trans(documentation(tSumoKiloByte,vEnglishLanguage,s("One","#$KiloByte","(","KB",")","of","information",".","One","#$KiloByte","is","1024","#$Bytes",".","Note","that","this","sense","of","'","kilo","'","is","different","from","the","one","accepted","in","the","SI","system",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348757).
lisp_trans(documentation(tSumoKiloByte,'Chinese',tLanguage,s("1","#$KiloByte","(","KB",")","ç","\232\","\204\","ä","¿","¡","æ","\201\","¯","ï","¼","\214\","1","#$KiloByte","æ","\230\","¯","1024","#$Byteã","\200\","\202\","æ","³","¨","ï","¼","\232\","'","å","\215\","\203\","'","å","\234\","¨","è","¿","\231\","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","ä","¸","\215\","å","\220\","\214\","äº","\216\","å","¹","¿","æ","³","\233\","è","¢","«","æ","\216\","¥","å","\217\","\227\","ç","\232\","\204\","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ç","\232\","\204\","å","\215\","\203\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':348954).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoKiloByte),uMeasureFn(uMultiplicationFn(NUMBER,1024),vByteFn)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349138).
lisp_trans(vtUnitOfInformation(tSumoMegaByte),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349229).
lisp_trans(documentation(tSumoMegaByte,vEnglishLanguage,s("One","#$MegaByte","(","MB",")","of","information",".","One","#$MegaByte","is","1024","#$KiloBytes",".","Note","that","this","sense","of","'","mega","'","is","different","from","the","one","accepted","in","the","SI","system",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349267).
lisp_trans(documentation(tSumoMegaByte,xtChineseLanguage,s("1","#$MegaByte","(","MB",")","ç","\232\","\204\","ä","¿","¡","æ","\201\","¯","ï","¼","\214\","1","#$MegaByte","æ","\230\","¯","1024","#$KiloByteã","\200\","\202\","æ","³","¨","ï","¼","\232\","'","å","\205\","\206\","'","å","\234\","¨","è","¿","\231\","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","ä","¸","\215\","å","\220\","\214\","äº","\216\","å","¹","¿","æ","³","\233\","è","¢","«","æ","\216\","¥","å","\217\","\227\","ç","\232\","\204\","å","\233\","½","é","\231\","\205\","å","\215\","\225\","ä","½","\215\","å","\210\","¶","ç","\232\","\204\","å","\205\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349468).
lisp_trans(equal(uMeasureFn(NUMBER,tSumoMegaByte),uMeasureFn(uMultiplicationFn(NUMBER,1024),tSumoKiloByte)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349655).
lisp_trans(rtBinaryPredicate(measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349842).
lisp_trans(rtAsymmetricRelation(measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349877).
lisp_trans(argIsa(measure,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349915).
lisp_trans(argIsa(measure,2,vtPhysicalQuantity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349941).
lisp_trans(documentation(measure,vEnglishLanguage,s("A","very","general","#$Predicate","for","asserting","that","a","particular","#$Object","is","measured","by","a","particular","#$PhysicalQuantity",".","In","general",",","the","second","argument","of","this","#$Predicate","will","be","a","term","produced","with","the","#$Function","#$MeasureFn",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':349977).
lisp_trans(documentation(measure,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªé","\235\","\236\","å","¸","¸","æ","¦","\202\","æ","\213\","¬","ç","\232\","\204\","#$Predicateï","¼","\214\","å","®","\203\","ç","\224\","¨","äº","\216\","æ","\226\","­","è","¨","\200\","ä","¸","\200\","ä","¸","ªç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$Object","æ","\230\","¯","ç","\224\","±","ä","¸","\200\","ç","§","\215\","ç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$PhysicalQuantity","æ","\235\","¥","é","\207\","\217\","åº","¦","ã","\200\","\202\","ä","¸","\200\","è","\210\","¬","æ","\235\","¥","è","¯","´","ï","¼","\214\","è","¿","\231\","ä","¸","ª","#$Predicate","ç","\232\","\204\","ç","¬","¬","äº","\214\","ä","¸","ªå","\217\","\202\","æ","\225\","°","ä","¼","\232\","æ","\230\","¯","ç","\224\","±","#$Function","#$MeasureFn","æ","\211\","\200\","äº","§","ç","\224\","\237\","ç","\232\","\204\","æ","\234\","¯","è","¯","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350245).
lisp_trans(rtSingleValuedRelation(age),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350531).
lisp_trans(genlPreds(age,measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350567).
lisp_trans(argIsa(age,2,timeTimeDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350593).
lisp_trans(documentation(age,vEnglishLanguage,s("Simply","relates","an","#$Object","to","a","#$ConstantQuantity","specifying","the","age","of","the","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350621).
lisp_trans(documentation(age,xtChineseLanguage,s("è","¿","\231\","å","\217\","ªæ","\230\","¯","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Object","å","\222\","\214\","ä","¸","\200\","ä","¸","ªç","\224\","¨","æ","\235\","¥","æ","\214\","\207\","å","®","\232\","è","¿","\231\","ä","¸","ª","#$Object","ç","\232\","\204\","å","²","\201\","æ","\225\","°","ç","\232\","\204\","#$ConstantQuantity","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350746).
lisp_trans(=>(and(timeOfTimePoint(TIME),holdsDuring(TIME,age(OBJ,DURATION))),duration(timeTimeIntervalFn(uBeginFn(uWhenFn(OBJ)),TIME),DURATION)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':350899).
lisp_trans(genlPreds(linearExtent,measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351065).
lisp_trans(argIsa(linearExtent,2,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351100).
lisp_trans(documentation(linearExtent,vEnglishLanguage,'BinaryPredicate that is used to state the  measure of an #$Object from one point to another point along its surface.  Note that the difference between the predicates #$length and #$distance is that the #$length is used to state the #$LengthMeasure of one of the dimensions of a single object, while #$distance is used to state the #$LengthMeasure that separates two distinct objects.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351138).
lisp_trans(documentation(linearExtent,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","¨","äº","\216\","è","¡","¨","ç","¤","ºé","\207\","\217\","åº","¦","ä","¸","\200\","ä","¸","ª","#$Object","è","¡","¨","é","\235\","¢","ä","¸","\212\","ä","»","\216\","ä","¸","\200\","ç","\202\","¹","å","\210\","°","å","\217\","¦","ä","¸","\200\","ç","\202\","¹","é","\227\","´","ç","\232\","\204\","è","·","\235\","ç","¦","»","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","°","\223\","è","¯","\215\","#$length","å","\222\","\214\","#$distance","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\210\","\206\","å","\210\","«","å","\234\","¨","äº","\216\","ï","¼","\214\","#$length","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ªå","\215\","\225\","ä","¸","\200\","ç","\211\","©","ä","½","\223\","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªç","»","´","åº","¦","ç","\232\","\204\","#$LengthMeasureï","¼","\214\","è","\200\","\214\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","¤","ä","¸","ªä","¸","\215\","å","\220\","\214\","ç","\211\","©","ä","½","\223\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$LengthMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351571).
lisp_trans(rtSingleValuedRelation(width),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351945).
lisp_trans(genlPreds(width,linearExtent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':351983).
lisp_trans(documentation(width,vEnglishLanguage,'BinaryPredicate that is used to state the measure of an #$Object from side to side at its widest span.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352016).
lisp_trans(documentation(width,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ª","#$Object","ä","»","\216\","ä","¸","\200\","è","¾","¹","å","\210\","°","å","\217\","¦","ä","¸","\200\","è","¾","¹","æ","\234\","\200\","å","¤","§","ç","\232\","\204\","è","·","\235\","ç","¦","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352161).
lisp_trans(genlPreds(height,linearExtent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352311).
lisp_trans(argIsa(height,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352345).
lisp_trans(argIsa(height,2,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352383).
lisp_trans(documentation(height,vEnglishLanguage,s("The","height","of","an","#$Object","is","the","distance","between","its","#$top","and","its","#$bottom",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352415).
lisp_trans(documentation(height,xtChineseLanguage,s("ä","¸","\200\","ä","¸","ª","#$Object","ç","\232\","\204\","é","«","\230\","åº","¦","æ","\230\","¯","å","®","\203\","ç","\232\","\204\","é","¡","¶","é","\203\","¨","å","\222\","\214\","åº","\225\","é","\203\","¨","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","è","·","\235\","ç","¦","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352534).
lisp_trans(rtSingleValuedRelation(length),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352644).
lisp_trans(genlPreds(length,linearExtent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352683).
lisp_trans(documentation(length,vEnglishLanguage,'BinaryPredicate that is used to state the measure of an #$Object along its longest span.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352717).
lisp_trans(documentation(length,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ª","#$Objectæ","\234\","\200\","é","\225\","¿","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","å","¹","\205\","åº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352849).
lisp_trans(=>(length(O,M),not(exists([M2],and(linearExtent(O,M2),greaterThan(M2,M))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':352982).
lisp_trans(genls(tSumoOval,tSumoClosedTwoDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353096).
lisp_trans(documentation(tSumoOval,vEnglishLanguage,s("The","class","of","#$ClosedTwoDimensionalFigures","that","are","produced","by","the","intersection","of","a","#$Cone","with","a","#$ClosedTwoDimensionalFigure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353139).
lisp_trans(documentation(tSumoOval,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$ClosedTwoDimensionalFigure","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","±","ä","¸","\200\","ä","¸","ª","#$Cone","å","\222\","\214\","#$ClosedTwoDimensionalFigure","ç","\233\","¸","äº","¤","æ","\211\","\200\","äº","§","ç","\224\","\237\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353308).
lisp_trans(genls(tCircle,tSumoOval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353474).
lisp_trans(documentation(tCircle,vEnglishLanguage,s("The","class","of","#$Ovals","such","that","all","#$GeometricPoints","that","make","up","the","#$Circle","are","equidistant","from","a","single","#$GeometricPoint",",","known","as","the","center","of","the","#$Circle",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353497).
lisp_trans(documentation(tCircle,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Oval","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\214\","ä","»","¥","è","\207\","³","æ","\236\","\204\","æ","\210\","\220\","#$Circle","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","#$GeometricPoint","å","\222\","\214\","å","\215\","\225\","ä","¸","\200\","ç","\232\","\204\","#$GeometricPointï","¼","\214\","ç","§","°","ä","¸","º","#$Circle","ç","\232\","\204\","ä","¸","­","å","¿","\203\","æ","\230\","¯","ç","­","\211\","è","·","\235\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353704).
lisp_trans(=>(tCircle(C),exists([R],radius(C,R))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353895).
lisp_trans(=>(tCircle(C),exists([P],equal(uCenterOfCircleFn(C),P))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':353959).
lisp_trans(documentation(uCenterOfCircleFn,vEnglishLanguage,s("(","CenterOfCircleFn","?","CIRCLE",")","denotes","the","#$GeometricPoint","that","is","the","center","of","the","#$Circle","?","CIRCLE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354041).
lisp_trans(documentation(uCenterOfCircleFn,'Chinese',tLanguage,s("(","CenterOfCircleFn","?","CIRCLE",")","è","¡","¨","ç","¤","º","#$Circle","?","CIRCLE","ç","\232\","\204\","ä","¸","­","å","¿","\203\","ç","\232\","\204\","#$GeometricPointã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354192).
lisp_trans(rtUnaryFunction(uCenterOfCircleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354329).
lisp_trans(rtTotalValuedRelation(uCenterOfCircleFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354371).
lisp_trans(argIsa(uCenterOfCircleFn,1,tCircle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354419).
lisp_trans(resultIsa(uCenterOfCircleFn,tSumoGeometricPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354454).
lisp_trans(rtBinaryPredicate(radius),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354495).
lisp_trans(rtSingleValuedRelation(radius),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354529).
lisp_trans(rtTotalValuedRelation(radius),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354568).
lisp_trans(argIsa(radius,1,tCircle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354606).
lisp_trans(argIsa(radius,2,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354631).
lisp_trans(documentation(radius,vEnglishLanguage,s("(","#$radius","?","CIRCLE","?","LENGTH",")","means","that","the","radius","of","the","#$Circle","?","CIRCLE","has","a","length","of","?","LENGTH",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354663).
lisp_trans(documentation(radius,'Chinese',tLanguage,s("(","#$radius","?","CIRCLE","?","LENGTH",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Circle","?","CIRCLE","ç","\232\","\204\","å","\215\","\212\","å","¾","\204\","ç","\232\","\204\","é","\225\","¿","åº","¦","æ","\230\","¯","?","LENGTHã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354802).
lisp_trans(=>(radius(CIRCLE,RADIUS),exists([POINT],all([PART],=>(pointOfFigure(PART,CIRCLE),geometricDistance(PART,POINT,RADIUS))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':354935).
lisp_trans(rtBinaryPredicate(diameter),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355197).
lisp_trans(rtSingleValuedRelation(diameter),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355233).
lisp_trans(rtTotalValuedRelation(diameter),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355274).
lisp_trans(argIsa(diameter,1,tCircle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355314).
lisp_trans(argIsa(diameter,2,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355341).
lisp_trans(documentation(diameter,vEnglishLanguage,s("(","#$diameter","?","CIRCLE","?","LENGTH",")","means","that","the","diameter","of","the","#$Circle","?","CIRCLE","has","a","length","of","?","LENGTH",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355375).
lisp_trans(documentation(diameter,'Chinese',tLanguage,s("(","#$diameter","?","CIRCLE","?","LENGTH",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Circle","?","CIRCLE","ç","\232\","\204\","ç","\233\","´","å","¾","\204\","ç","\232\","\204\","é","\225\","¿","åº","¦","æ","\230\","¯","?","LENGTHã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355521).
lisp_trans(=>(diameter(CIRCLE,LENGTH),exists([HALF],and(radius(CIRCLE,HALF),equal(uMultiplicationFn(HALF,2),LENGTH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355659).
lisp_trans(rtSingleValuedRelation(distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355811).
lisp_trans(rtSpatialRelation(distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355852).
lisp_trans(rtTernaryPredicate(distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355888).
lisp_trans(rtTotalValuedRelation(distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355925).
lisp_trans(argIsa(distance,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355965).
lisp_trans(argIsa(distance,2,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':355994).
lisp_trans(argIsa(distance,3,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356023).
lisp_trans(documentation(distance,vEnglishLanguage,s("(","#$distance","?","OBJ1","?","OBJ2","?","QUANT",")","means","that","the","shortest","distance","between","the","two","objects","?","OBJ1","and","?","OBJ2","is","?","QUANT",".","Note","that","the","difference","between","the","predicates","#$length","and","#$distance","is","that","the","#$length","is","used","to","state","the","#$LengthMeasure","of","one","of","the","dimensions","of","a","single","object",",","while","#$distance","is","used","to","state","the","#$LengthMeasure","that","separates","two","distinct","objects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356057).
lisp_trans(documentation(distance,'Chinese',tLanguage,s("(","#$distance","?","OBJ1","?","OBJ2","?","QUANT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","ä","¸","¤","ä","¸","ªç","\211\","©","ä","½","\223\","?","OBJ1","å","\222\","\214\","?","OBJ2","æ","\234\","\200\","ç","\237\","­","ç","\232\","\204\","è","·","\235\","ç","¦","»","æ","\230\","¯","?","QUANTã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","°","\223\","è","¯","\215\","#$length","å","\222\","\214\","#$distance","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","å","\210\","\206\","å","\210\","«","å","\234\","¨","äº","\216\","ï","¼","\214\","#$length","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ªå","\215\","\225\","ä","¸","\200\","ç","\211\","©","ä","½","\223\","å","\205\","¶","ä","¸","­","ä","¸","\200\","ä","¸","ªç","»","´","åº","¦","ç","\232\","\204\","#$LengthMeasureï","¼","\214\","è","\200\","\214\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","¤","ä","¸","ªä","¸","\215\","å","\220\","\214\","ç","\211\","©","ä","½","\223\","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$LengthMeasureã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356483).
lisp_trans(=>(distance(OBJ1,OBJ2,QUANT),distance(OBJ2,OBJ1,QUANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356836).
lisp_trans(genlPreds(altitude,distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356908).
lisp_trans(rtSingleValuedRelation(altitude),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356940).
lisp_trans(rtPartialValuedRelation(altitude),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':356981).
lisp_trans(documentation(altitude,vEnglishLanguage,s("A","#$TernaryPredicate","that","is","used","to","state","the","#$distance","between","the","#$top","of","an","#$Object","and","another","point","that","is","below","the","#$top","of","the","#$Object","(","often","this","other","point","will","be","sea","level",")",".","Note","that","this","#$Predicate","can","be","used","to","specify",",","for","example",",","the","height","of","geographic","features",",","e",".","g",".","mountains",",","the","altitude","of","aircraft",",","and","the","orbit","of","satellites","around","the","Earth",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':357023).
lisp_trans(documentation(altitude,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TernaryPredicateï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ª","#$Object","ç","\232\","\204\","#$top","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$Object","#$top","ä","»","¥","ä","¸","\213\","ç","\232\","\204\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ç","\202\","¹","(","é","\200\","\232\","å","¸","¸","è","¿","\231\","ä","¸","\200\","ç","\202\","¹","ä","¼","\232\","æ","\230\","¯","æµ","·","å","¹","³","é","\235\","¢",")","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$distanceã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ª","#$Predicate","å","\217\","¯","ä","»","¥","ç","\224\","¨","æ","\235\","¥","æ","\214\","\207\","å","®","\232\","ä","¾","\213\","å","¦","\202\","å","\234\","°","ç","\220\","\206\","ç","\211\","¹","å","¾","\201\","ç","\232\","\204\","é","«","\230\","åº","¦","å","¦","\202\","å","±","±","ã","\200\","\201\","é","£","\236\","æ","\234\","ºç","\232\","\204\","é","«","\230\","åº","¦","å","\222\","\214\","ç","\216\","¯","ç","»","\225\","å","\234\","°","ç","\220\","\203\","ç","\232\","\204\","å","\215\","«","æ","\230\","\237\","è","½","¨","é","\201\","\223\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':357447).
lisp_trans(=>(altitude(OBJ1,OBJ2,HEIGHT),orientation(OBJ1,OBJ2,tSumoAbove)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':357800).
lisp_trans(=>(altitude(OBJ1,OBJ2,HEIGHT),exists([TOP],and(top(TOP,OBJ1),distance(TOP,OBJ2,HEIGHT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':357875).
lisp_trans(genlPreds(depth,distance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358011).
lisp_trans(rtSingleValuedRelation(depth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358040).
lisp_trans(documentation(depth,vEnglishLanguage,s("A","#$TernaryPredicate","that","is","used","to","state","the","#$distance","between","the","#$top","of","an","#$Object","and","another","point","that","is","above","the","#$top","of","the","#$Object","(","often","this","other","point","will","be","sea","level",")",".","Note","that","this","#$Predicate","can","be","used","to","specify",",","for","example",",","the","depth","of","marine","life","or","submarines",",","for","example",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358078).
lisp_trans(documentation(depth,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$TernaryPredicateï","¼","\214\","å","®","\203\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","è","¡","¨","ç","¤","ºä","¸","\200\","ä","¸","ª","#$Object","ç","\232\","\204\","#$top","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$Object","#$top","ä","»","¥","ä","¸","\212\","ç","\232\","\204\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ç","\202\","¹","(","é","\200\","\232\","å","¸","¸","è","¿","\231\","ä","¸","\200\","ç","\202\","¹","ä","¼","\232\","æ","\230\","¯","æµ","·","å","¹","³","é","\235\","¢",")","ä","¹","\213\","é","\227\","´","ç","\232\","\204\","#$distanceã","\200\","\202\","æ","³","¨","è","¿","\231\","ä","¸","ª","#$Predicate","å","\217\","¯","ä","»","¥","ç","\224\","¨","æ","\235\","¥","æ","\214\","\207\","å","®","\232\","ä","¾","\213\","å","¦","\202\","æµ","·","æ","´","\213\","ç","\224\","\237\","ç","\211\","©","æ","\210\","\226\","æ","½","\234\","è","\211\","\207\","ç","\232\","\204\","æ","·","±","åº","¦","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358429).
lisp_trans(=>(depth(OBJ1,OBJ2,DEPTH),orientation(OBJ1,OBJ2,tSumoBelow)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358731).
lisp_trans(=>(depth(OBJ1,OBJ2,DEPTH),exists([BOTTOM],and(bottom(BOTTOM,OBJ1),distance(BOTTOM,OBJ2,DEPTH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358802).
lisp_trans(rtBinaryPredicate(larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358945).
lisp_trans(rtSpatialRelation(larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':358979).
lisp_trans(rtTransitiveRelation(larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359013).
lisp_trans(rtIrreflexiveRelation(larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359050).
lisp_trans(rtTotalValuedRelation(larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359088).
lisp_trans(argIsa(larger,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359126).
lisp_trans(argIsa(larger,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359151).
lisp_trans(documentation(larger,vEnglishLanguage,s("(","#$larger","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","larger",",","with","respect","to","all","#$LengthMeasures",",","than","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359176).
lisp_trans(documentation(larger,'Chinese',tLanguage,s("(","#$larger","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\234\","¨","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$LengthMeasure","æ","\226\","¹","é","\235\","¢","æ","¯","\224\","?","OBJ2","å","¤","§","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359318).
lisp_trans(<=>(larger(OBJ1,OBJ2),all([QUANT1,QUANT2,UNIT],=>(and(measure(OBJ1,uMeasureFn(QUANT1,UNIT)),measure(OBJ2,uMeasureFn(QUANT2,UNIT)),vtUnitOfLength(UNIT)),greaterThan(QUANT1,QUANT2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359454).
lisp_trans(rtBinaryPredicate(smaller),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359714).
lisp_trans(rtSpatialRelation(smaller),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359749).
lisp_trans(rtTotalValuedRelation(smaller),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359784).
lisp_trans(rtTransitiveRelation(smaller),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359823).
lisp_trans(rtIrreflexiveRelation(smaller),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359861).
lisp_trans(argIsa(smaller,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359900).
lisp_trans(argIsa(smaller,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359926).
lisp_trans(genlInverse(smaller,larger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359952).
lisp_trans(documentation(smaller,vEnglishLanguage,s("(","#$smaller","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","smaller",",","with","respect","to","all","#$LengthMeasures",",","than","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':359977).
lisp_trans(documentation(smaller,'Chinese',tLanguage,s("(","#$smaller","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\234\","¨","æ","\211\","\200\","æ","\234\","\211\","ç","\232\","\204\","#$LengthMeasure","æ","\226\","¹","é","\235\","¢","æ","¯","\224\","?","OBJ2","å","°","\217\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360122).
lisp_trans(rtSingleValuedRelation(monetaryValue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360260).
lisp_trans(rtAsymmetricRelation(monetaryValue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360306).
lisp_trans(rtBinaryPredicate(monetaryValue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360350).
lisp_trans(argIsa(monetaryValue,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360391).
lisp_trans(argIsa(monetaryValue,2,vtCurrencyMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360425).
lisp_trans(documentation(monetaryValue,vEnglishLanguage,s("A","#$BinaryPredicate","that","associates","an","#$Object","or","#$Process","with","its","value","expressed","as","an","instance","of","#$CurrencyMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360466).
lisp_trans(documentation(monetaryValue,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Object","æ","\210\","\226\","#$Process","å","\222\","\214\","ä","»","¥","ä","¸","\200\","ä","¸","ª","#$CurrencyMeasureæ","\235\","¥","è","¡","¨","ç","¤","ºå","®","\203\","ç","\232\","\204\","ä","»","·","å","\200\","¼","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360637).
lisp_trans(rtUnaryFunction(uWealthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360821).
lisp_trans(rtTotalValuedRelation(uWealthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360855).
lisp_trans(argIsa(uWealthFn,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360895).
lisp_trans(resultIsa(uWealthFn,vtCurrencyMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360921).
lisp_trans(documentation(uWealthFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Agent","to","a","#$CurrencyMeasure","specifying","the","value","of","the","property","owned","by","the","#$Agent",".","Note","that","this","#$Function","is","generally","used","in","conjunction","with","the","#$Function","#$PropertyFn",",","e",".","g",".","(","#$WealthFn","(","#$PropertyFn","BillGates",")",")","would","return","the","monetary","value","of","the","sum","of","Bill","Gates","'","holdings",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':360954).
lisp_trans(documentation(uWealthFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Agent","å","\222\","\214\","æ","\214\","\207\","æ","\230\","\216\","è","¿","\231\","ä","¸","ª","#$Agent","æ","\211\","\200\","æ","\213\","¥","æ","\234\","\211\","ç","\232\","\204\","è","´","¢","äº","§","ç","\232\","\204\","ä","»","·","å","\200\","¼","ä","»","¥","ä","¸","\200\","ä","¸","ª","#$CurrencyMeasure","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ª","#$Function","ä","¸","\200\","è","\210\","¬","å","\222\","\214\","#$Function","#$PropertyFn","ç","»","\223\","å","\220\","\210\","èµ","·","æ","\235\","¥","åº","\224\","ç","\224\","¨","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$WealthFn","(","#$PropertyFn","BillGates",")",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºæ","¯","\224\","å","°","\224\","ç","\233\","\226\","è","\214\","¨","æ","\216\","§","è","\202\","¡","ç","\232\","\204\","æ","\200\","»","è","´","§","å","¸","\201\","ä","»","·","å","\200\","¼","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361322).
lisp_trans(<=>(equal(uWealthFn(PERSON),AMOUNT),monetaryValue(uPropertyFn(PERSON),AMOUNT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361689).
lisp_trans(rtBinaryPredicate(barometricPressure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361782).
lisp_trans(rtAsymmetricRelation(barometricPressure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361828).
lisp_trans(genlPreds(barometricPressure,measure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361877).
lisp_trans(argIsa(barometricPressure,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361918).
lisp_trans(argIsa(barometricPressure,2,vtUnitOfAtmosphericPressure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':361955).
lisp_trans(documentation(barometricPressure,vEnglishLanguage,s("(","#$barometricPressure","?","AREA","?","PRESSURE",")","means","that","the","atmospheric","pressure","measured","at","?","AREA","is","?","PRESSURE",".","Barometric","pressure","is","typically","expressed","in","units","of","#$InchMercury","or","#$MmMercury",".","For","example",",","standard","sea","level","pressure","is","29.92","inches","(","760","mm",")","of","mercury",":","(","#$barometricPressure","#$SeaLevel","(","#$MeasureFn","29.92","#$InchMercury",")",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':362011).
lisp_trans(documentation(barometricPressure,xtChineseLanguage,s("(","#$barometricPressure","?","AREA","?","PRESSURE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","å","\234\","¨","?","AREA","æ","\211\","\200\","é","\207\","\217\","åº","¦","å","\210\","°","ç","\232\","\204\","æ","°","\224\","å","\216\","\213\","æ","\230\","¯","?","PRESSUREã","\200\","\202\","æ","°","\224\","å","\216\","\213\","ä","¸","\200\","è","\210\","¬","ä","»","¥","#$InchMercury","æ","\210\","\226\","#$MmMercury","å","\215\","\225\","ä","½","\215\","æ","\235\","¥","è","¡","¨","ç","¤","ºã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","æ","\240\","\207\","å","\207\","\206\","æµ","·","å","¹","³","é","\235\","¢","å","\216\","\213\","å","\212\","\233\","æ","\230\","¯","æ","°","´","é","\223\","¶","29.92","è","\213\","±","å","¯","¸","(","760","æ","¯","«","ç","±","³",")","æ","±","\236\","æ","\237\","±",":","(","#$barometricPressure","#$SeaLevel","(","#$MeasureFn","29.92","#$InchMercury",")",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':362405).
lisp_trans(genls(vtUnitOfAtmosphericPressure,ttCompositeUnitOfMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':362762).
lisp_trans(documentation(vtUnitOfAtmosphericPressure,vEnglishLanguage,'UnitOfAtmosphericPressure  includes those instances of #$UnitOfMeasure used to measure atmospheric pressure  (#$barometricPressure), e.g., #$InchMercury.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':362822).
lisp_trans(documentation(vtUnitOfAtmosphericPressure,xtChineseLanguage,'UnitOfAtmosphericPressure  å\214\\205\æ\213\¬ç\224\¨æ\235\¥é\207\\217\åº¦æ°\224\å\216\\213\ (#$barometricPressure)å¦\202\ï¼\232\ #$InchMercuryç\232\\204\ #$UnitOfMeasure ç\232\\204\å®\236\ä¾\213\ã\200\\202\ '),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363038).
lisp_trans(vtUnitOfAtmosphericPressure(tSumoInchMercury),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363229).
lisp_trans(documentation(tSumoInchMercury,vEnglishLanguage,'InchMercury is a #$UnitOfMeasure for #$barometricPressure.  It is used to express the number of inches of mercury supported in a mercurial barometer by the surrounding air pressure.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363278).
lisp_trans(documentation(tSumoInchMercury,xtChineseLanguage,'InchMercury æ\230\¯ #$barometricPressure ç\232\\204\ä¸\200\ç§\215\ #$UnitOfMeasureï¼\214\å®\203\ç\224\¨æ\235\¥è¡¨ç¤ºè¢«æ°\224\å\216\\213\ç\216\¯ç»\225\ç\232\\204\æ±\236\æ°\224\å\216\\213\è®¡ä¸\212\æ±\236\æ\237\±ç\232\\204\è\213\±å¯¸æ\225\°ç\233\®ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363508).
lisp_trans(vtUnitOfAtmosphericPressure(tSumoMmMercury),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363695).
lisp_trans(documentation(tSumoMmMercury,vEnglishLanguage,'MmMercury is a #$UnitOfMeasure for #$barometricPressure.  It is used to express the number of millimeters of mercury supported in a mercurial barometer  by the surrounding air pressure.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363742).
lisp_trans(documentation(tSumoMmMercury,xtChineseLanguage,'MmMercury æ\230\¯ #$barometricPressure ç\232\\204\ä¸\200\ç§\215\  #$UnitOfMeasureï¼\214\å®\203\ç\224\¨æ\235\¥è¡¨ç¤ºè¢«æ°\224\å\216\\213\ç\216\¯ç»\225\ç\232\\204\æ±\236\æ°\224\å\216\\213\è®¡ä¸\212\æ±\236\æ\237\±ç\232\\204\æ¯«ç±³æ\225\°ç\233\®ã\200\\202\'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':363975).
lisp_trans(timeOfTimePoint(tSumoPositiveInfinity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':364733).
lisp_trans(documentation(tSumoPositiveInfinity,vEnglishLanguage,s("The","#$TimePoint","that","is","after","all","other","#$TimePoints",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':364771).
lisp_trans(documentation(tSumoPositiveInfinity,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\205\","¶","ä","»","\226\","#$TimePoint","ä","¹","\213\","å","\220\","\216\","ç","\232\","\204\","#$TimePointã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':364876).
lisp_trans(=>(and(timeOfTimePoint(POINT),not(equal(POINT,tSumoPositiveInfinity))),before(POINT,tSumoPositiveInfinity)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':364985).
lisp_trans(=>(and(timeOfTimePoint(POINT),not(equal(POINT,tSumoPositiveInfinity))),exists([OTHERPOINT],temporallyBetween(POINT,OTHERPOINT,tSumoPositiveInfinity))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365114).
lisp_trans(timeOfTimePoint(tSumoNegativeInfinity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365295).
lisp_trans(documentation(tSumoNegativeInfinity,vEnglishLanguage,s("The","#$TimePoint","that","is","before","all","other","#$TimePoints",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365333).
lisp_trans(documentation(tSumoNegativeInfinity,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\205\","¶","ä","»","\226\","#$TimePoint","ä","¹","\213\","å","\211\","\215\","ç","\232\","\204\","#$TimePointã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365439).
lisp_trans(=>(and(timeOfTimePoint(POINT),not(equal(POINT,tSumoNegativeInfinity))),before(tSumoNegativeInfinity,POINT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365548).
lisp_trans(=>(and(timeOfTimePoint(POINT),not(equal(POINT,tSumoNegativeInfinity))),exists([OTHERPOINT],temporallyBetween(tSumoNegativeInfinity,OTHERPOINT,POINT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365677).
lisp_trans(rtBinaryPredicate(duration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365858).
lisp_trans(rtAsymmetricRelation(duration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365894).
lisp_trans(rtTotalValuedRelation(duration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365933).
lisp_trans(argIsa(duration,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':365973).
lisp_trans(argIsa(duration,2,timeTimeDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366006).
lisp_trans(documentation(duration,vEnglishLanguage,s("(","#$duration","?","POS","?","TIME",")","means","that","the","duration","of","the","#$TimePosition","?","POS","is","?","TIME",".","Note","that","this","#$Predicate","can","be","used","in","conjunction","with","the","#$Function","#$WhenFn","to","specify","the","duration","of","any","instance","of","#$Physical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366039).
lisp_trans(documentation(duration,xtChineseLanguage,s("(","#$duration","?","POS","?","TIME",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimePosition","?","POS","ç","\232\","\204\","é","\225\","¿","ç","\237\","­","æ","\230\","¯","?","TIMEã","\200\","\202\","æ","³","¨","ï","¼","\233\","è","¿","\231\","ä","¸","ª","#$Predicate","å","\217\","¯","ä","»","¥","å","\222\","\214\","#$Function","#$WhenFn","ä","¸","\200\","èµ","·","ä","½","¿","ç","\224\","¨","æ","\235\","¥","æ","\214\","\207\","å","®","\232\","ä","»","»","ä","½","\225\","#$Physical","ç","\232\","\204\","æ","\214\","\201\","ç","»","­","æ","\227\","¶","é","\227\","´","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366306).
lisp_trans(rtBinaryPredicate(frequency),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366541).
lisp_trans(rtAsymmetricRelation(frequency),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366578).
lisp_trans(argGenl(frequency,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366618).
lisp_trans(argIsa(frequency,2,timeTimeDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366655).
lisp_trans(documentation(frequency,vEnglishLanguage,s("(","#$frequency","?","PROC","?","TIME",")","means","that","the","#$Process","type","of","?","PROC","recurs","after","every","interval","of","?","TIME",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366689).
lisp_trans(documentation(frequency,xtChineseLanguage,s("(","#$frequency","?","PROC","?","TIME",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Process","ç","±","»","å","\210\","«","?","PROC","å","\234\","¨","æ","¯","\217\","é","\232\","\224\","?","TIME","é","\207\","\215\","å","¤","\215\","å","\217\","\221\","ç","\224\","\237\","ä","¸","\200\","æ","¬","¡","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366836).
lisp_trans(=>(frequency(PROC,TIME1),all([TIME2],=>(duration(TIME2,TIME1),exists([POSITION],and(temporalPart(POSITION,TIME2),holdsDuring(POSITION,exists([INST],isa(INST,PROC)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':366981).
lisp_trans(rtBinaryPredicate(temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367255).
lisp_trans(rtTemporalRelation(temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367295).
lisp_trans(rtPartialOrderingRelation(temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367336).
lisp_trans(argIsa(temporalPart,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367384).
lisp_trans(argIsa(temporalPart,2,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367421).
lisp_trans(documentation(temporalPart,vEnglishLanguage,s("The","temporal","analogue","of","the","spatial","#$part","predicate",".","(","#$temporalPart","?","POS1","?","POS2",")","means","that","#$TimePosition","?","POS1","is","part","of","#$TimePosition","?","POS2",".","Note","that","since","#$temporalPart","is","a","#$ReflexiveRelation","every","#$TimePostion","is","a","#$temporalPart","of","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367459).
lisp_trans(documentation(temporalPart,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ç","±","»","ä","¼","¼","ç","©","ºé","\227\","´","è","°","\223\","è","¯","\215\","#$part","ç","\232\","\204\","æ","\227\","¶","é","\227\","´","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","(","#$temporalPart","?","POS1","?","POS2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimePosition","?","POS1","æ","\230\","¯","#$TimePosition","?","POS2","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\233\","\240\","ä","¸","º","#$temporalPart","æ","\230\","¯","#$ReflexiveRelationï","¼","\214\","æ","\211\","\200\","ä","»","¥","æ","¯","\217\","ä","¸","ª","#$TimePostion","é","\203\","½","æ","\230\","¯","å","®","\203\","æ","\234\","¬","èº","«","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$temporalPartã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':367764).
lisp_trans(=>(timeOfTimePoint(POINT),exists([INTERVAL],and(timeOfTimeInterval(INTERVAL),temporalPart(POINT,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368092).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),exists([POINT],and(timeOfTimePoint(POINT),temporalPart(POINT,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368249).
lisp_trans(=>(and(holdsDuring(TIME1,SITUATION),temporalPart(TIME2,TIME1)),holdsDuring(TIME2,SITUATION)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368403).
lisp_trans(=>(and(holdsDuring(INTERVAL,[REL,INST1,INST2]),tSumoPhysical(INST1),tSumoPhysical(INST2)),and(time(INST1,INTERVAL),time(INST2,INTERVAL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368526).
lisp_trans(<=>(temporalPart(POS,uWhenFn(THING)),time(THING,POS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368727).
lisp_trans(rtTemporalRelation(uBeginFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368795).
lisp_trans(rtUnaryFunction(uBeginFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368831).
lisp_trans(rtTotalValuedRelation(uBeginFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368864).
lisp_trans(argIsa(uBeginFn,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368903).
lisp_trans(resultIsa(uBeginFn,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368935).
lisp_trans(documentation(uBeginFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimeInterval","to","the","#$TimePoint","at","which","the","interval","begins",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':368961).
lisp_trans(documentation(uBeginFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimeInterval","å","\222\","\214\","è","¿","\231\","ä","¸","ªæ","\227\","¶","æ","®","µå","¼","\200\","å","§","\213\","ç","\232\","\204\","#$TimePoint","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369097).
lisp_trans(=>(origin(PROCESS,OBJ),eventLocated(uWhereFn(PROCESS,uBeginFn(uWhenFn(PROCESS))),uWhereFn(OBJ,uBeginFn(uWhenFn(OBJ))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369254).
lisp_trans(=>(equal(uBeginFn(INTERVAL),POINT),all([OTHERPOINT],=>(and(temporalPart(OTHERPOINT,INTERVAL),not(equal(OTHERPOINT,POINT))),before(POINT,OTHERPOINT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369394).
lisp_trans(rtTemporalRelation(iTimeOf_EndFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369621).
lisp_trans(rtUnaryFunction(iTimeOf_EndFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369655).
lisp_trans(rtTotalValuedRelation(iTimeOf_EndFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369686).
lisp_trans(argIsa(iTimeOf_EndFn,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369723).
lisp_trans(resultIsa(iTimeOf_EndFn,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369753).
lisp_trans(documentation(iTimeOf_EndFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimeInterval","to","the","#$TimePoint","at","which","the","interval","ends",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369777).
lisp_trans(documentation(iTimeOf_EndFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimeInterval","å","\222\","\214\","è","¿","\231\","ä","¸","ªæ","\227\","¶","æ","®","µç","»","\223\","æ","\235\","\237\","ç","\232\","\204\","#$TimePointè","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':369909).
lisp_trans(=>(equal(iTimeOf_EndFn(INTERVAL),POINT),all([OTHERPOINT],=>(and(temporalPart(OTHERPOINT,INTERVAL),not(equal(OTHERPOINT,POINT))),before(OTHERPOINT,POINT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370062).
lisp_trans(=>(and(resource(PROC,OBJ),holdsDuring(uBeginFn(uWhenFn(PROC)),measure(OBJ,QUANT1)),holdsDuring(iTimeOf_EndFn(uWhenFn(PROC)),measure(OBJ,QUANT2))),greaterThan(QUANT1,QUANT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370287).
lisp_trans(genlPreds(starts,temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370513).
lisp_trans(rtTemporalRelation(starts),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370547).
lisp_trans(rtTransitiveRelation(starts),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370582).
lisp_trans(rtIrreflexiveRelation(starts),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370619).
lisp_trans(rtTotalValuedRelation(starts),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370657).
lisp_trans(argIsa(starts,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370695).
lisp_trans(argIsa(starts,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370726).
lisp_trans(documentation(starts,vEnglishLanguage,s("(","#$starts","?","INTERVAL1","?","INTERVAL2",")","means","that","?","INTERVAL1","and","?","INTERVAL2","are","both","#$TimeIntervals","that","have","the","same","initial","#$TimePoint","and","that","?","INTERVAL1","ends","before","?","INTERVAL2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370757).
lisp_trans(documentation(starts,xtChineseLanguage,s("(","#$starts","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","INTERVAL1","å","\222\","\214\","?","INTERVAL2","ä","¸","¤","ä","¸","ªæ","\230\","¯","#$TimeInterval","æ","\234\","\211\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","å","¼","\200\","å","§","\213\","#$TimePointï","¼","\214\","è","\200\","\214\","?","INTERVAL1","æ","¯","\224\","?","INTERVAL2","å","\205\","\210\","ç","»","\223\","æ","\235\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':370976).
lisp_trans(<=>(starts(INTERVAL1,INTERVAL2),and(equal(uBeginFn(INTERVAL1),uBeginFn(INTERVAL2)),before(iTimeOf_EndFn(INTERVAL1),iTimeOf_EndFn(INTERVAL2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371192).
lisp_trans(genlPreds(finishes,temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371387).
lisp_trans(rtTemporalRelation(finishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371423).
lisp_trans(rtTransitiveRelation(finishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371460).
lisp_trans(rtIrreflexiveRelation(finishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371499).
lisp_trans(rtTotalValuedRelation(finishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371539).
lisp_trans(argIsa(finishes,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371579).
lisp_trans(argIsa(finishes,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371612).
lisp_trans(documentation(finishes,vEnglishLanguage,s("(","#$finishes","?","INTERVAL1","?","INTERVAL2",")","means","that","?","INTERVAL1","and","?","INTERVAL2","are","both","#$TimeIntervals","that","have","the","same","ending","#$TimePoint","and","that","?","INTERVAL2","begins","before","?","INTERVAL1",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371645).
lisp_trans(documentation(finishes,xtChineseLanguage,s("(","#$finishes","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","INTERVAL1","å","\222\","\214\","?","INTERVAL","2","ä","¸","¤","ä","¸","ªæ","\230\","¯","#$TimeInterval","æ","\234\","\211\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","ç","»","\223\","æ","\235\","\237\","#$TimePointï","¼","\214\","è","\200\","\214\","?","INTERVAL2","æ","¯","\224\","?","INTERVAL1","å","\205\","\210\","å","¼","\200\","å","§","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':371869).
lisp_trans(<=>(finishes(INTERVAL1,INTERVAL2),and(before(uBeginFn(INTERVAL2),uBeginFn(INTERVAL1)),equal(iTimeOf_EndFn(INTERVAL2),iTimeOf_EndFn(INTERVAL1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372089).
lisp_trans(rtTemporalRelation(before),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372286).
lisp_trans(rtIrreflexiveRelation(before),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372321).
lisp_trans(rtTransitiveRelation(before),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372359).
lisp_trans(genlPreds(before,beforeOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372396).
lisp_trans(relatedInternalConcept(before,earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372431).
lisp_trans(argIsa(before,1,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372471).
lisp_trans(argIsa(before,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372499).
lisp_trans(documentation(before,vEnglishLanguage,s("(","#$before","?","POINT1","?","POINT2",")","means","that","?","POINT1","precedes","?","POINT2","on","the","universal","timeline",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372527).
lisp_trans(documentation(before,xtChineseLanguage,s("(","#$before","?","POINT1","?","POINT2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","POINT1","å","\234\","¨","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ä","¸","\212\","æ","¯","\224\","?","POINT2","å","\205\","\210\","å","¼","\200\","å","§","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372658).
lisp_trans(=>(tSumoObject(OBJ),exists([TIME1,TIME2],and(timeOfTimePoint(TIME1),timeOfTimePoint(TIME2),before(TIME1,TIME2),all([TIME],=>(and(beforeOrEqual(TIME1,TIME),beforeOrEqual(TIME,TIME2)),time(OBJ,TIME)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':372930).
lisp_trans(=>(result(PROC,OBJ),all([TIME],=>(before(TIME,uBeginFn(uWhenFn(PROC))),not(time(OBJ,TIME))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373305).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),before(uBeginFn(INTERVAL),iTimeOf_EndFn(INTERVAL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373459).
lisp_trans(rtBinaryPredicate(beforeOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373552).
lisp_trans(rtTemporalRelation(beforeOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373593).
lisp_trans(rtPartialOrderingRelation(beforeOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373635).
lisp_trans(argIsa(beforeOrEqual,1,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373684).
lisp_trans(argIsa(beforeOrEqual,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373719).
lisp_trans(documentation(beforeOrEqual,vEnglishLanguage,s("(","#$beforeOrEqual","?","POINT1","?","POINT2",")","means","that","?","POINT1","is","identical","with","?","POINT2","or","occurs","before","it","on","the","universal","timeline",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373754).
lisp_trans(documentation(beforeOrEqual,xtChineseLanguage,s("(","#$beforeOrEqual","?","POINT1","?","POINT2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","POINT1","å","\234\","¨","é","\200\","\232\","ç","\224\","¨","æ","\227\","¶","é","\227\","´","è","½","´","ä","¸","\212\","å","\222\","\214\","?","POINT2","æ","\230\","¯","ä","¸","\200\","è","\207\","´","æ","\210\","\226\","æ","¯","\224\","å","®","\203\","å","\205\","\210\","å","¼","\200\","å","§","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':373929).
lisp_trans(=>(beforeOrEqual(POINT1,POINT2),or(before(POINT1,POINT2),equal(POINT1,POINT2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374098).
lisp_trans(rtTemporalRelation(temporallyBetween),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374210).
lisp_trans(rtTernaryPredicate(temporallyBetween),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374256).
lisp_trans(rtPartialValuedRelation(temporallyBetween),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374302).
lisp_trans(genlPreds(temporallyBetween,temporallyBetweenOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374353).
lisp_trans(argIsa(temporallyBetween,1,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374410).
lisp_trans(argIsa(temporallyBetween,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374449).
lisp_trans(argIsa(temporallyBetween,3,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374488).
lisp_trans(documentation(temporallyBetween,vEnglishLanguage,s("(","#$temporallyBetween","?","POINT1","?","POINT2","?","POINT3",")","means","that","the","#$TimePoint","?","POINT2","is","between","the","#$TimePoints","?","POINT1","and","?","POINT3",",","i",".","e",".","?","POINT1","is","before","?","POINT2","and","?","POINT2","is","before","?","POINT3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374527).
lisp_trans(documentation(temporallyBetween,xtChineseLanguage,s("(","#$temporallyBetween","?","POINT1","?","POINT2","?","POINT3",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimePoint","?","POINT2","ä","½","\215\","äº","\216\","#$TimePoint","?","POINT1","å","\222\","\214\","?","POINT3","ä","¹","\213\","é","\227\","´","ï","¼","\214\","å","\215\","³","æ","\230\","¯","?","POINT1","å","\234\","¨","?","POINT2","ä","¹","\213\","å","\211\","\215\","ï","¼","\214\","è","\200\","\214\","?","POINT2","å","\234\","¨","?","POINT3","ä","¹","\213\","å","\211\","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':374771).
lisp_trans(<=>(temporallyBetween(POINT1,POINT2,POINT3),and(before(POINT1,POINT2),before(POINT2,POINT3))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375020).
lisp_trans(rtTemporalRelation(temporallyBetweenOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375145).
lisp_trans(rtTernaryPredicate(temporallyBetweenOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375198).
lisp_trans(rtPartialValuedRelation(temporallyBetweenOrEqual),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375251).
lisp_trans(argIsa(temporallyBetweenOrEqual,1,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375309).
lisp_trans(argIsa(temporallyBetweenOrEqual,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375355).
lisp_trans(argIsa(temporallyBetweenOrEqual,3,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375401).
lisp_trans(documentation(temporallyBetweenOrEqual,vEnglishLanguage,s("(","#$temporallyBetweenOrEqual","?","POINT1","?","POINT2","?","POINT3",")","means","that","the","#$TimePoint","?","POINT1","is","before","or","equal","to","the","#$TimePoint","?","POINT2","and","?","POINT2","is","before","or","equal","to","the","#$TimePoint","?","POINT3",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375447).
lisp_trans(documentation(temporallyBetweenOrEqual,xtChineseLanguage,s("(","#$temporallyBetweenOrEqual","?","POINT1","?","POINT2","?","POINT3",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimePoint","?","POINT1","ç","­","\211\","äº","\216\","æ","\210\","\226\","æ","\230\","¯","å","\234\","¨","#$TimePoint","?","POINT2","ä","¹","\213\","å","\211\","\215\","ï","¼","\214\","è","\200\","\214\","?","POINT2","ç","­","\211\","äº","\216\","æ","\210\","\226\","æ","\230\","¯","å","\234\","¨","#$TimePoint","?","POINT3","ä","¹","\213\","å","\211\","\215\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375700).
lisp_trans(<=>(temporallyBetweenOrEqual(POINT1,POINT2,POINT3),and(beforeOrEqual(POINT1,POINT2),beforeOrEqual(POINT2,POINT3))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':375949).
lisp_trans(<=>(and(time(PHYS,TIME),timeOfTimePoint(TIME)),temporallyBetweenOrEqual(uBeginFn(uWhenFn(PHYS)),TIME,iTimeOf_EndFn(uWhenFn(PHYS)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376095).
lisp_trans(rtBinaryPredicate(overlapsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376253).
lisp_trans(rtTemporalRelation(overlapsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376299).
lisp_trans(rtReflexiveRelation(overlapsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376346).
lisp_trans(rtSymmetricRelation(overlapsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376394).
lisp_trans(argIsa(overlapsTemporally,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376442).
lisp_trans(argIsa(overlapsTemporally,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376485).
lisp_trans(documentation(overlapsTemporally,vEnglishLanguage,s("(","#$overlapsTemporally","?","INTERVAL1","?","INTERVAL2",")","means","that","the","#$TimeIntervals","?","INTERVAL1","and","?","INTERVAL2","have","a","#$TimeInterval","as","a","common","part",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376528).
lisp_trans(documentation(overlapsTemporally,xtChineseLanguage,s("(","#$overlapsTemporally","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimeInterval","?","INTERVAL1","å","\222\","\214\","?","INTERVAL2","æ","\234\","\211\","#$TimeInterval","ä","½","\234\","ä","¸","ºå","®","\203\","ä","»","¬","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªå","\205\","±","å","\220\","\214\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376723).
lisp_trans(<=>(overlapsTemporally(INTERVAL1,INTERVAL2),exists([INTERVAL3],and(timeOfTimeInterval(INTERVAL3),temporalPart(INTERVAL3,INTERVAL1),temporalPart(INTERVAL3,INTERVAL2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':376932).
lisp_trans(=>(and(rtBinaryPredicate(REL),rtSpatialRelation(REL),[REL,OBJ1,OBJ2]),overlapsTemporally(uWhenFn(OBJ1),uWhenFn(OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377158).
lisp_trans(genlPreds(during,temporalPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377328).
lisp_trans(rtTransitiveRelation(during),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377362).
lisp_trans(rtIrreflexiveRelation(during),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377399).
lisp_trans(genlPreds(during,overlapsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377437).
lisp_trans(argIsa(during,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377477).
lisp_trans(argIsa(during,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377508).
lisp_trans(documentation(during,vEnglishLanguage,s("(","#$during","?","INTERVAL1","?","INTERVAL2",")","means","that","?","INTERVAL1","starts","after","and","ends","before","?","INTERVAL2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377539).
lisp_trans(documentation(during,xtChineseLanguage,s("(","#$during","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","INTERVAL1","æ","¯","\224\","?","INTERVAL2","è","¦","\201\","æ","\231\","\232\","å","¼","\200\","å","§","\213\","å","\222\","\214\","å","\205\","\210\","ç","»","\223\","æ","\235\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377676).
lisp_trans(=>(during(INTERVAL1,INTERVAL2),and(before(iTimeOf_EndFn(INTERVAL1),iTimeOf_EndFn(INTERVAL2)),before(uBeginFn(INTERVAL2),uBeginFn(INTERVAL1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377819).
lisp_trans(rtBinaryPredicate(meetsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':377978).
lisp_trans(rtTemporalRelation(meetsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378021).
lisp_trans(rtAsymmetricRelation(meetsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378065).
lisp_trans(rtIntransitiveRelation(meetsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378111).
lisp_trans(rtTotalValuedRelation(meetsTemporally),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378159).
lisp_trans(argIsa(meetsTemporally,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378206).
lisp_trans(argIsa(meetsTemporally,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378246).
lisp_trans(documentation(meetsTemporally,vEnglishLanguage,s("(","#$meetsTemporally","?","INTERVAL1","?","INTERVAL2",")","means","that","the","terminal","point","of","the","#$TimeInterval","?","INTERVAL1","is","the","initial","point","of","the","#$TimeInterval","?","INTERVAL2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378286).
lisp_trans(documentation(meetsTemporally,xtChineseLanguage,s("(","#$meetsTemporally","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimeInterval","?","INTERVAL1","ç","\232\","\204\","ç","»","\210\","ç","\202\","¹","æ","\230\","¯","#$TimeInterval","?","INTERVAL2","èµ","·","ç","\202\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378496).
lisp_trans(<=>(meetsTemporally(INTERVAL1,INTERVAL2),equal(iTimeOf_EndFn(INTERVAL1),uBeginFn(INTERVAL2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378677).
lisp_trans(=>(and(equal(uBeginFn(INTERVAL1),uBeginFn(INTERVAL2)),equal(iTimeOf_EndFn(INTERVAL1),iTimeOf_EndFn(INTERVAL2))),equal(INTERVAL1,INTERVAL2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378790).
lisp_trans(rtBinaryPredicate(earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':378966).
lisp_trans(rtTemporalRelation(earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379001).
lisp_trans(rtTransitiveRelation(earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379037).
lisp_trans(rtIrreflexiveRelation(earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379075).
lisp_trans(rtTotalValuedRelation(earlier),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379114).
lisp_trans(argIsa(earlier,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379153).
lisp_trans(argIsa(earlier,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379185).
lisp_trans(documentation(earlier,vEnglishLanguage,s("(","#$earlier","?","INTERVAL1","?","INTERVAL2",")","means","that","the","#$TimeInterval","?","INTERVAL1","ends","before","the","#$TimeInterval","?","INTERVAL2","begins",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379217).
lisp_trans(documentation(earlier,xtChineseLanguage,s("(","#$earlier","?","INTERVAL1","?","INTERVAL2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$TimeInterval","?","INTERVAL1","å","\234\","¨","#$TimeInterval","?","INTERVAL2","å","¼","\200\","å","§","\213\","å","\211\","\215\","ç","»","\223\","æ","\235\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379384).
lisp_trans(<=>(earlier(INTERVAL1,INTERVAL2),before(iTimeOf_EndFn(INTERVAL1),uBeginFn(INTERVAL2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379549).
lisp_trans(rtBinaryPredicate(cooccur),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379645).
lisp_trans(rtTemporalRelation(cooccur),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379680).
lisp_trans(rtEquivalenceRelation(cooccur),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379716).
lisp_trans(argIsa(cooccur,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379755).
lisp_trans(argIsa(cooccur,2,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379783).
lisp_trans(documentation(cooccur,vEnglishLanguage,s("(","#$cooccur","?","THING1","?","THING2",")","means","that","the","#$Object","or","#$Process","?","THING1","occurs","at","the","same","time","as",",","together","with",",","or","jointly","with","the","#$Object","or","#$Process","?","THING2",".","This","covers","the","following","temporal","relations",":","is","co","-","incident","with",",","is","concurrent","with",",","is","contemporaneous","with",",","and","is","concomitant","with",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':379811).
lisp_trans(documentation(cooccur,xtChineseLanguage,s("(","#$cooccur","?","THING1","?","THING2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Object","æ","\210\","\226\","#$Process","?","THING1","å","\222\","\214\","#$Object","æ","\210\","\226\","#$Process","?","THING2","å","\220\","\214\","æ","\227\","¶","ä","¸","\200\","èµ","·","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\","è","¿","\231\","å","\214\","\205\","æ","\213\","¬","ä","»","¥","ä","¸","\213\","ç","\232\","\204\","æ","\227\","¶","é","\227\","´","å","\205\","³","ç","³","»","ï","¼","\232\","å","·","§","å","\220\","\210\","ã","\200\","\201\","å","\220\","\214\","æ","\227\","¶","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\201\","å","\220\","\214\","ä","¸","\200\","æ","\227\","¶","æ","®","µå","\217\","\221\","ç","\224\","\237\","å","\222\","\214\","ä","¼","´","é","\232\","\217\","å","\217\","\221\","ç","\224\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380159).
lisp_trans(<=>(cooccur(PHYS1,PHYS2),equal(uWhenFn(PHYS1),uWhenFn(PHYS2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380424).
lisp_trans(rtBinaryFunction(timeTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380555).
lisp_trans(rtTemporalRelation(timeTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380596).
lisp_trans(rtPartialValuedRelation(timeTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380639).
lisp_trans(argIsa(timeTimeIntervalFn,1,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380687).
lisp_trans(argIsa(timeTimeIntervalFn,2,timeOfTimePoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380723).
lisp_trans(resultIsa(timeTimeIntervalFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380759).
lisp_trans(documentation(timeTimeIntervalFn,vEnglishLanguage,s("A","#$BinaryFunction","that","takes","two","#$TimePoints","as","arguments","and","returns","the","#$TimeInterval","defined","by","these","two","#$TimePoints",".","Note","that","the","first","#$TimePoint","must","occur","earlier","than","the","second","#$TimePoint",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':380795).
lisp_trans(documentation(timeTimeIntervalFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\216\","¥","å","\217\","\227\","ä","¸","¤","ä","¸","ª","#$TimePoint","å","\217\","\202\","æ","\225\","°","ï","¼","\214\","ç","\204\","¶","å","\220\","\216\","å","¾","\227\","å","\207\","ºç","\224\","±","è","¿","\231\","ä","¸","¤","ä","¸","ª","#$TimePoint","æ","\211\","\200\","ç","\225\","\214\","å","®","\232\","ç","\232\","\204\","#$TimeIntervalã","\200\","\202\","æ","³","¨","ï","¼","\232\","ç","¬","¬","ä","¸","\200\","ä","¸","ª","#$TimePoint","å","¿","\205\","é","¡","»","è","¦","\201\","æ","¯","\224\","ç","¬","¬","äº","\214\","ä","¸","ª","#$TimePoint","å","\205\","\210\","å","¼","\200\","å","§","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':381052).
lisp_trans(=>(and(timeOfTimePoint(POINT1),timeOfTimePoint(POINT2),timeOfTimeInterval(INTERVAL),equal(timeTimeIntervalFn(POINT1,POINT2),INTERVAL)),and(equal(uBeginFn(INTERVAL),POINT1),equal(iTimeOf_EndFn(INTERVAL),POINT2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':381313).
lisp_trans(=>(and(timeOfTimePoint(POINT1),timeOfTimePoint(POINT2),timeOfTimeInterval(INTERVAL),equal(timeTimeIntervalFn(POINT1,POINT2),INTERVAL)),all([POINT],<=>(temporallyBetweenOrEqual(POINT1,POINT,POINT2),temporalPart(POINT,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':381586).
lisp_trans(rtTemporalRelation(timeRecurrentTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':381901).
lisp_trans(rtBinaryFunction(timeRecurrentTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':381953).
lisp_trans(rtPartialValuedRelation(timeRecurrentTimeIntervalFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382003).
lisp_trans(argGenl(timeRecurrentTimeIntervalFn,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382060).
lisp_trans(argGenl(timeRecurrentTimeIntervalFn,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382116).
lisp_trans(resultGenl(timeRecurrentTimeIntervalFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382172).
lisp_trans(documentation(timeRecurrentTimeIntervalFn,vEnglishLanguage,s("A","function","that","is","useful","for","generating","recurring","time","intervals",".","For","example",",","(","#$RecurrentTimeIntervalFn","(","#$HourFn","6","#$Day",")","(","#$HourFn","12","#$Day",")",")","returns","the","#$Class","of","#$TimeIntervals","beginning","at","6","in","the","morning","and","ending","at","12","noon",".","For","another","example",",","(","#$RecurrentTimeInterval","#$Saturday","#$Sunday",")","returns","the","#$Class","of","all","weekends",".","For","still","another","example",",","(","#$RecurrentTimeInterval","#$June","#$August",")","returns","the","#$Class","containing","the","academic","summer","period",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382225).
lisp_trans(documentation(timeRecurrentTimeIntervalFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","\226\","¹","ä","¾","¿","å","¾","\227\","å","\207\","ºé","\207\","\215\","å","¤","\215\","å","\217\","\221\","ç","\224\","\237\","æ","\227\","¶","æ","®","µç","\232\","\204\","å","\207\","½","æ","\225\","°","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$RecurrentTimeIntervalFn","(","#$HourFn","6","#$Day",")","(","#$HourFn","12","#$Day",")",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºä","»","\216\","æ","\227\","©","ä","¸","\212\","6","æ","\227\","¶","å","¼","\200\","å","§","\213\","è","\207\","³","ä","¸","­","å","\215\","\210\","12","ç","»","\223\","æ","\235\","\237\","ç","\232\","\204\","#$TimeInterval","#$Classã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$RecurrentTimeInterval","#$Saturday","#$Sunday",")","å","¾","\227\","å","\207\","ºæ","\211\","\200\","æ","\234\","\211\","å","\221\","¨","æ","\234\","«","ç","\232\","\204\","#$Classã","\200\","\202\","å","\217\","\210\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$RecurrentTimeInterval","#$June","#$August",")","å","¾","\227\","å","\207\","ºå","­","¦","å","¹","´","ç","\232\","\204\","å","¤","\217\","å","­","£","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':382758).
lisp_trans(=>(isa(INTERVAL,timeRecurrentTimeIntervalFn(TIMECLASS1,TIMECLASS2)),exists([TIME1,TIME2],and(isa(TIME1,TIMECLASS1),isa(TIME2,TIMECLASS2),starts(TIME1,INTERVAL),finishes(TIME2,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383193).
lisp_trans(rtTemporalRelation(uWhenFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383463).
lisp_trans(rtUnaryFunction(uWhenFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383498).
lisp_trans(rtTotalValuedRelation(uWhenFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383530).
lisp_trans(argIsa(uWhenFn,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383568).
lisp_trans(resultIsa(uWhenFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383595).
lisp_trans(documentation(uWhenFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","an","#$Object","or","#$Process","to","the","exact","#$TimeInterval","during","which","it","exists",".","Note","that",",","for","every","#$TimePoint","?","TIME","outside","of","the","#$TimeInterval","(","WhenFn","?","THING",")",",","(","time","?","THING","?","TIME",")","does","not","hold",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383623).
lisp_trans(documentation(uWhenFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Object","æ","\210\","\226\","#$Process","è","\201\","\224\","ç","³","»","å","\210\","°","å","®","\203\","å","­","\230\","å","\234\","¨","ç","\232\","\204\","å","\207\","\206\","ç","¡","®","#$TimeIntervalã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","\234\","¨","#$TimeInterval","(","WhenFn","?","THING",")","ä","»","¥","å","¤","\226\","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ª","#$TimePoint","?","TIMEï","¼","\214\","(","time","?","THING","?","TIME",")","å","¹","¶","ä","¸","\215\","å","­","\230\","å","\234\","¨")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':383891).
lisp_trans(rtTemporalRelation(tColOfPastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384160).
lisp_trans(rtUnaryFunction(tColOfPastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384195).
lisp_trans(rtTotalValuedRelation(tColOfPastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384227).
lisp_trans(argIsa(tColOfPastFn,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384265).
lisp_trans(resultIsa(tColOfPastFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384296).
lisp_trans(documentation(tColOfPastFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimePosition","to","the","#$TimeInterval","that","meets","it","and","that","begins","at","#$NegativeInfinity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384324).
lisp_trans(documentation(tColOfPastFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimePosition","è","\201\","\224\","ç","³","»","å","\210\","°","å","\222\","\214\","å","®","\203\","ç","\233\","¸","é","\201\","\207\","å","¹","¶","å","\234\","¨","#$NegativeInfinity","å","¼","\200\","å","§","\213\","ç","\232\","\204\","#$TimeIntervalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384485).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),meetsTemporally(tColOfPastFn(INTERVAL),INTERVAL)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384663).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),equal(tColOfPastFn(INTERVAL),timeTimeIntervalFn(tSumoNegativeInfinity,uBeginFn(INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384756).
lisp_trans(rtTemporalRelation(uImmediatePastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384883).
lisp_trans(rtUnaryFunction(uImmediatePastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384927).
lisp_trans(rtTotalValuedRelation(uImmediatePastFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':384968).
lisp_trans(argIsa(uImmediatePastFn,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385015).
lisp_trans(resultIsa(uImmediatePastFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385055).
lisp_trans(documentation(uImmediatePastFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimePosition","to","a","short",",","indeterminate","#$TimeInterval","that","immediately","precedes","the","#$TimePosition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385092).
lisp_trans(documentation(uImmediatePastFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimePosition","å","\222\","\214\","ç","´","§","æ","\216\","¥","è","¿","\231\","ä","¸","ª","#$TimePosition","ä","¹","\213\","å","\211\","\215\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\227\","¢","ç","\237\","­","è","\200\","\214\","å","\217\","\210\","ä","¸","\215\","ç","¡","®","å","®","\232\","ç","\232\","\204\","#$TimeIntervalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385274).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),finishes(uImmediatePastFn(INTERVAL),tColOfPastFn(INTERVAL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385474).
lisp_trans(rtTemporalRelation(eventFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385578).
lisp_trans(rtUnaryFunction(eventFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385615).
lisp_trans(rtTotalValuedRelation(eventFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385649).
lisp_trans(argIsa(eventFutureFn,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385689).
lisp_trans(resultIsa(eventFutureFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385722).
lisp_trans(documentation(eventFutureFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimePosition","to","the","#$TimeInterval","which","it","meets","and","which","ends","at","#$PositiveInfinity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385752).
lisp_trans(documentation(eventFutureFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimePosition","è","\201\","\224\","ç","³","»","å","\210\","°","å","\222\","\214\","å","®","\203\","ç","\233\","¸","é","\201\","\207\","å","¹","¶","å","\234\","¨","#$PositiveInfinity","ç","»","\223\","æ","\235\","\237\","ç","\232\","\204\","#$TimeIntervalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':385915).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),meetsTemporally(INTERVAL,eventFutureFn(INTERVAL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386093).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),equal(eventFutureFn(INTERVAL),timeTimeIntervalFn(iTimeOf_EndFn(INTERVAL),tSumoPositiveInfinity))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386188).
lisp_trans(rtTemporalRelation(uImmediateFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386315).
lisp_trans(rtUnaryFunction(uImmediateFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386361).
lisp_trans(rtTotalValuedRelation(uImmediateFutureFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386404).
lisp_trans(argIsa(uImmediateFutureFn,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386453).
lisp_trans(resultIsa(uImmediateFutureFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386495).
lisp_trans(documentation(uImmediateFutureFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$TimePosition","to","a","short",",","indeterminate","#$TimeInterval","that","immediately","follows","the","#$TimePosition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386534).
lisp_trans(documentation(uImmediateFutureFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$TimePosition","å","\222\","\214\","ç","´","§","é","\232\","\217\","è","¿","\231\","ä","¸","ª","#$TimePosition","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\227\","¢","ç","\237\","­","è","\200\","\214\","å","\217\","\210\","ä","¸","\215\","ç","¡","®","å","®","\232\","ç","\232\","\204\","#$TimeIntervalã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386717).
lisp_trans(=>(timeOfTimeInterval(INTERVAL),starts(uImmediateFutureFn(INTERVAL),eventFutureFn(INTERVAL))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':386913).
lisp_trans(rtBinaryPredicate(date),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387168).
lisp_trans(rtSingleValuedRelation(date),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387200).
lisp_trans(rtAsymmetricRelation(date),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387237).
lisp_trans(argIsa(date,1,tSumoPhysical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387272).
lisp_trans(argIsa(date,2,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387297).
lisp_trans(genlPreds(date,time),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387317).
lisp_trans(documentation(date,vEnglishLanguage,s("A","#$BinaryPredicate","that","specifies","a","#$TimePosition","in","absolute","calendar","time",",","at","the","resolution","of","one","day",",","for","a","particular","#$Object","or","#$Process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387341).
lisp_trans(documentation(date,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryPredicateï","¼","\214\","å","®","\203\","ä","»","¥","ç","»","\235\","å","¯","¹","æ","\227\","¥","å","\216\","\206\","æ","\227\","¶","é","\227\","´","ï","¼","\214\","ä","»","¥","ä","¸","\200\","å","¤","©","ä","¸","ºé","\231\","\220\","ï","¼","\214\","ä","¸","ºç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$Object","æ","\210\","\226\","#$Process","æ","\214\","\207\","å","®","\232\","ä","¸","\200\","ä","¸","ª","#$TimePositionã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387529).
lisp_trans(rtTemporalRelation(iTimeOf_YearFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387716).
lisp_trans(rtUnaryFunction(iTimeOf_YearFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387751).
lisp_trans(rtTotalValuedRelation(iTimeOf_YearFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387783).
lisp_trans(argIsa(iTimeOf_YearFn,1,ftInt),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387821).
lisp_trans(resultGenl(iTimeOf_YearFn,tSumoYear),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387847).
lisp_trans(documentation(iTimeOf_YearFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","number","to","the","corresponding","calendar","#$Year",".","For","example",",","(","#$YearFn","1912",")","returns","the","#$Class","containing","just","one","instance",",","the","year","of","1912",".","As","might","be","expected",",","positive","integers","return","years","in","the","Common","Era",",","while","negative","integers","return","years","in","B",".","C",".","E",".","Note","that","this","function","returns","a","#$Class","as","a","value",".","The","reason","for","this","is","that","the","related","functions",",","viz",".","#$MonthFn",",","#$DayFn",",","#$HourFn",",","#$MinuteFn",",","and","#$SecondFn",",","are","used","to","generate","both","specific","#$TimeIntervals","and","recurrent","intervals",",","and","the","only","way","to","do","this","is","to","make","the","domains","and","ranges","of","these","functions","classes","rather","than","individuals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':387875).
lisp_trans(documentation(iTimeOf_YearFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ªæ","\225\","°","å","­","\227\","å","\222\","\214\","å","¯","¹","åº","\224\","ç","\232\","\204\","æ","\227\","¥","å","\216\","\206\","#$Year","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$YearFn","1912",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºï","¼","\214\","1912","å","¹","´","è","¿","\231\","ä","¸","ªå","\217\","ªæ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","®","\236\","ä","¾","\213\","ç","\232\","\204\","#$Classã","\200\","\202\","æ","­","£","å","¦","\202\","æ","\211\","\200\","æ","\226\","\231\","ç","\232\","\204\","ï","¼","\214\","æ","­","£","æ","\225\","´","æ","\225\","°","ä","¼","\232\","å","¾","\227\","å","\207\","ºå","\205\","¬","å","\205\","\203\","ç","\232\","\204\","å","¹","´","ä","»","½","ï","¼","\214\","è","\200\","\214\","è","´","\237\","æ","\225\","´","æ","\225\","°","ä","¼","\232\","å","¾","\227\","å","\207\","º","å","\205\","¬","å","\205\","\203\","å","\211\","\215\","ç","\232\","\204\","å","¹","´","ä","»","½","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","å","¾","\227\","å","\207\","ºä","¸","\200\","ä","¸","ª","#$Class","ä","½","\234\","ä","¸","ºå","®","\203\","ç","\232\","\204\","å","\200\","¼","ï","¼","\214\","å","\216\","\237\","å","\233\","\240\","æ","\230\","¯","å","\222\","\214\","å","®","\203\","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","å","\207\","½","æ","\225\","°","ï","¼","\214\","å","\215\","³","#$MonthFnã","\200\","\201\","#$DayFnã","\200\","\201\","#$HourFnã","\200\","\201\","#$MinuteFn","å","\222\","\214\","#$SecondFn","ç","­","\211\","ï","¼","\214\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","å","¾","\227\","å","\207\","ºç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$TimeInterval","å","\222\","\214\","é","\207\","\215\","å","¤","\215\","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","æ","\227\","¶","æ","®","µï","¼","\214\","è","\200\","\214\","å","\224\","¯","ä","¸","\200\","ç","\232\","\204\","å","\201\","\232\","æ","³","\225\","æ","\230\","¯","æ","\212\","\212\","è","¿","\231\","äº","\233\","å","\207\","½","æ","\225\","°","ç","\232\","\204\","é","¢","\206\","å","\237\","\237\","å","\222\","\214\","è","\214\","\203\","å","\233\","´","å","½","\223\","æ","\210\","\220\","ç","±","»","å","\210\","«","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","ä","¸","ªå","\210\","«","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':388577).
lisp_trans(rtTemporalRelation(iTimeOf_MonthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389212).
lisp_trans(rtBinaryFunction(iTimeOf_MonthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389248).
lisp_trans(rtPartialValuedRelation(iTimeOf_MonthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389282).
lisp_trans(argGenl(iTimeOf_MonthFn,1,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389323).
lisp_trans(argGenl(iTimeOf_MonthFn,2,tSumoYear),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389356).
lisp_trans(resultGenl(iTimeOf_MonthFn,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389388).
lisp_trans(documentation(iTimeOf_MonthFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","a","subclass","of","#$Month","and","a","subclass","of","#$Year","to","the","class","containing","the","#$Month","corresponding","to","that","#$Year",".","For","example","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")","is","the","class","containing","the","eighth","#$Month",",","i",".","e",".","August",",","of","the","#$Year","1912",".","For","another","example",",","(","#$MonthFn","#$August","#$Year",")","is","equal","to","#$August",",","the","class","of","all","months","of","August",".","Note","that","this","function","returns","a","#$Class","as","a","value",".","The","reason","for","this","is","that","the","related","functions",",","viz",".","DayFn",",","HourFn",",","MinuteFn",",","and","SecondFn",",","are","used","to","generate","both","specific","#$TimeIntervals","and","recurrent","intervals",",","and","the","only","way","to","do","this","is","to","make","the","domains","and","ranges","of","these","functions","classes","rather","than","individuals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':389418).
lisp_trans(documentation(iTimeOf_MonthFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","#$Month","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ä","¸","\216\","#$Year","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","å","\222\","\214\","è","¯","¥","#$Year","å","¯","¹","åº","\224\","#$Month","ç","\232\","\204\","ç","±","»","å","\210\","«","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")","æ","\230\","¯","å","\214\","\205\","å","\220\","«","ç","¬","¬","å","\205\","«","ä","¸","ª","#$Month","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\215\","³","æ","\230\","¯","1912","#$Year","ç","\232\","\204\","å","\205\","«","æ","\234\","\210\","ã","\200\","\202\","å","\217\","¦","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","æ","\230\","¯","(","#$MonthFn","#$August","#$Year",")","ç","­","\211\","äº","\216\","#$Augustï","¼","\214\","è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\205\","«","æ","\234\","\210\","ç","\232\","\204\","ç","±","»","å","\210\","«","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","è","¿","\231\","ä","¸","ªå","\207\","½","æ","\225\","°","å","¾","\227\","å","\207\","ºä","¸","\200\","ä","¸","ª","#$Class","ä","½","\234\","ä","¸","ºå","®","\203\","ç","\232\","\204\","å","\200\","¼","ï","¼","\214\","å","\216\","\237\","å","\233\","\240\","æ","\230\","¯","å","\222\","\214\","å","®","\203\","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","å","\207\","½","æ","\225\","°","ï","¼","\214\","å","\215\","³","#$MonthFnã","\200\","\201\","#$DayFnã","\200\","\201\","#$HourFnã","\200\","\201\","#$MinuteFn","å","\222\","\214\","#$SecondFn","ç","­","\211\","ï","¼","\214\","æ","\230\","¯","ç","\224\","¨","æ","\235\","¥","å","¾","\227\","å","\207\","ºç","\211\","¹","å","®","\232\","ç","\232\","\204\","#$TimeInterval","å","\222\","\214\","é","\207\","\215\","å","¤","\215\","å","\217\","\221\","ç","\224\","\237\","ç","\232\","\204\","æ","\227\","¶","æ","®","µï","¼","\214\","è","\200\","\214\","å","\224\","¯","ä","¸","\200\","ç","\232\","\204\","å","\201\","\232\","æ","³","\225\","æ","\230\","¯","æ","\212\","\212\","è","¿","\231\","äº","\233\","å","\207\","½","æ","\225\","°","ç","\232\","\204\","é","¢","\206\","å","\237\","\237\","å","\222\","\214\","è","\214\","\203\","å","\233\","´","å","½","\223\","æ","\210\","\220\","ç","±","»","å","\210\","«","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","ä","¸","ªå","\210\","«","ç","\232\","\204\","å","®","\236\","ä","¾","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':390179).
lisp_trans(rtTemporalRelation(iTimeOf_DayFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':390891).
lisp_trans(rtBinaryFunction(iTimeOf_DayFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':390925).
lisp_trans(rtPartialValuedRelation(iTimeOf_DayFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':390957).
lisp_trans(argIsa(iTimeOf_DayFn,1,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':390996).
lisp_trans(argGenl(iTimeOf_DayFn,2,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':391029).
lisp_trans(resultGenl(iTimeOf_DayFn,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':391060).
lisp_trans(documentation(iTimeOf_DayFn,vEnglishLanguage,s("A","#$BinaryFunction","that","assigns","a","#$PositiveRealNumber","and","a","subclass","of","#$Months","to","the","#$Days","within","each","#$Month","corresponding","to","that","#$PositiveRealNumber",".","For","example",",","(","#$DayFn","16","#$August",")","is","the","#$Class","of","all","sixteenth","days","of","August",".","For","another","example",",","(","#$DayFn","9","#$Month",")","would","return","the","class","of","all","ninth","days","of","any","month",".","For","still","another","example",",","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")","denotes","the","18","th","day","of","August","1912",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':391086).
lisp_trans(documentation(iTimeOf_DayFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$PositiveRealNumber","ä","¸","\216\","ä","¸","\200\","ä","¸","ª","#$Month","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\210\","\206\","é","\205\","\215\","å","\210\","°","æ","¯","\217\","ä","¸","ª","#$Month","å","\206\","\205\","å","¯","¹","åº","\224\","è","¯","¥","#$PositiveRealNumber","ç","\232\","\204\","#$Dayã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$DayFn","16","#$August",")","æ","\230\","¯","å","\205\","«","æ","\234\","\210\","ä","»","½","æ","\211\","\200\","æ","\234\","\211\","ç","¬","¬","16","æ","\227\","¥","ç","\232\","\204\","#$Classï","¼","\214\","å","\217\","\210\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$DayFn","9","#$Month",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºä","»","»","ä","½","\225\","ä","¸","\200\","ä","¸","ªæ","\234\","\210\","ç","\232\","\204\","ç","¬","¬","ä","¹","\235\","æ","\227\","¥","ã","\200\","\202\","å","\206\","\215\","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ï","¼","\232\","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")","è","¡","¨","ç","¤","º1912å","¹","´","å","\205\","«","æ","\234\","\210\","å","\215\","\201\","å","\205\","«","æ","\227\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':391586).
lisp_trans(=>(isa(DAY,iTimeOf_DayFn(NUMBER,MONTH)),lessThanOrEqualTo(NUMBER,31)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392041).
lisp_trans(=>(and(isa(DAY1,iTimeOf_DayFn(NUMBER1,MONTH)),isa(DAY2,iTimeOf_DayFn(NUMBER2,MONTH)),equal(uSubtractionFn(NUMBER2,NUMBER1),1)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392123).
lisp_trans(rtTemporalRelation(iTimeOf_HourFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392315).
lisp_trans(rtBinaryFunction(iTimeOf_HourFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392350).
lisp_trans(rtPartialValuedRelation(iTimeOf_HourFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392383).
lisp_trans(argIsa(iTimeOf_HourFn,1,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392423).
lisp_trans(argGenl(iTimeOf_HourFn,2,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392460).
lisp_trans(resultGenl(iTimeOf_HourFn,tSumoHour),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392490).
lisp_trans(documentation(iTimeOf_HourFn,vEnglishLanguage,s("A","#$BinaryFunction","that","assigns","a","#$PositiveRealNumber","and","a","subclass","of","#$Days","to","the","#$Hours","within","each","#$Day","corresponding","to","that","#$NonnegativeInteger",".","For","example",",","(","#$HourFn","12","#$Thursday",")","is","the","#$Class","of","all","instances","of","noon","Thursday",".","For","another","example",",","(","#$HourFn","0","#$Day",")","would","return","the","class","of","all","instances","of","midnight",".","For","still","another","example",",","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")","denotes","2","PM","on","the","18","th","day","of","August","1912",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':392518).
lisp_trans(documentation(iTimeOf_HourFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$PositiveRealNumber","ä","¸","\216\","ä","¸","\200\","ä","¸","ªä","¸","\216\","ä","¸","\200\","ä","¸","ª","#$Day","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\210\","\206\","é","\205\","\215\","å","\210\","°","æ","¯","\217\","ä","¸","ª","#$Day","å","\206\","\205\","å","¯","¹","åº","\224\","é","\202\","£","ä","¸","ª","#$NonnegativeInteger","ç","\232\","\204\","#$Hourã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$HourFn","12","#$Thursday",")","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\230\","\237\","æ","\234\","\237\","å","\233\","\233\","ä","¸","­","å","\215\","\210\","ç","\232\","\204\","#$Classã","\200\","\202\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ï","¼","\232\","(","#$HourFn","0","#$Day",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºå","­","\220\","å","¤","\234\","æ","\211\","\200\","æ","\234\","\211\","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","ç","±","»","å","\210\","«","ã","\200\","\202\","å","\206\","\215\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")","è","¡","¨","ç","¤","º1912å","¹","´","å","\205\","«","æ","\234\","\210\","å","\215\","\201\","å","\205\","«","æ","\227\","¥","ä","¸","\213\","å","\215\","\210\","ä","¸","¤","ç","\202\","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393040).
lisp_trans(=>(isa(HOUR,iTimeOf_HourFn(NUMBER,DAY)),lessThan(NUMBER,24)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393534).
lisp_trans(=>(and(isa(HOUR1,iTimeOf_HourFn(NUMBER1,DAY)),isa(HOUR2,iTimeOf_HourFn(NUMBER2,DAY)),equal(uSubtractionFn(NUMBER2,NUMBER1),1)),meetsTemporally(HOUR1,HOUR2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393607).
lisp_trans(rtTemporalRelation(iTimeOf_MinuteFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393801).
lisp_trans(rtBinaryFunction(iTimeOf_MinuteFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393838).
lisp_trans(rtPartialValuedRelation(iTimeOf_MinuteFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393873).
lisp_trans(argIsa(iTimeOf_MinuteFn,1,ftNonnegativeInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393915).
lisp_trans(argGenl(iTimeOf_MinuteFn,2,tSumoHour),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393954).
lisp_trans(resultGenl(iTimeOf_MinuteFn,tSumoMinute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':393987).
lisp_trans(documentation(iTimeOf_MinuteFn,vEnglishLanguage,s("A","#$BinaryFunction","that","assigns","a","#$PositiveRealNumber","and","a","subclass","of","#$Hours","to","the","#$Minutes","within","each","#$Hour","corresponding","to","that","#$NonnegativeInteger",".","For","example",",","(","#$MinuteFn","30","(","#$HourFn","17","#$Day",")",")","is","the","#$Class","of","all","5",":","30","'s","in","the","afternoon",".","For","another","example",",","(","#$MinuteFn","15","#$Hour",")","would","return","the","class","of","all","instances","of","quarter","past","the","hour",".","For","still","another","example",",","(","#$MinuteFn","15","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")",")","denotes","15","minutes","after","2","PM","on","the","18","th","day","of","August","1912",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':394019).
lisp_trans(documentation(iTimeOf_MinuteFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$PositiveRealNumber","ä","¸","\216\","ä","¸","\200\","ä","¸","ªä","¸","\216\","ä","¸","\200\","ä","¸","ª","#$Hour","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\210\","\206\","é","\205\","\215\","å","\210\","°","æ","¯","\217\","ä","¸","ª","#$Hour","å","\206\","\205\","å","¯","¹","åº","\224\","é","\202\","£","ä","¸","ª","#$NonnegativeInteger","ç","\232\","\204\","#$Minuteã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MinuteFn","30","(","#$HourFn","17","#$Day",")",")","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\213\","å","\215\","\210\","5",":","30","ç","\232\","\204\","#$Classã","\200\","\202\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ï","¼","\232\","(","#$MinuteFn","15","#$Hour",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºæ","\211\","\200\","æ","\234\","\211\","æ","¯","\217\","ä","¸","ªå","°","\217\","æ","\227\","¶","å","\215\","\201\","äº","\224\","å","\210\","\206\","é","\222\","\237\","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","ç","±","»","å","\210\","«","ã","\200\","\202\","å","\206\","\215\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$MinuteFn","15","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")",")","è","¡","¨","ç","¤","º1912å","¹","´","å","\205\","«","æ","\234\","\210\","å","\215\","\201\","å","\205\","«","æ","\227\","¥","ä","¸","\213\","å","\215\","\210\","ä","¸","¤","ç","\202\","¹","å","\215\","\201\","äº","\224\","å","\210\","\206\","é","\222\","\237\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':394604).
lisp_trans(=>(isa(MINUTE,iTimeOf_MinuteFn(NUMBER,HOUR)),lessThan(NUMBER,60)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395161).
lisp_trans(=>(and(isa(MINUTE1,iTimeOf_MinuteFn(NUMBER1,HOUR)),isa(MINUTE2,iTimeOf_MinuteFn(NUMBER2,HOUR)),equal(uSubtractionFn(NUMBER2,NUMBER1),1)),meetsTemporally(MINUTE1,MINUTE2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395239).
lisp_trans(rtTemporalRelation(iTimeOf_SecondFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395447).
lisp_trans(rtBinaryFunction(iTimeOf_SecondFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395484).
lisp_trans(rtPartialValuedRelation(iTimeOf_SecondFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395519).
lisp_trans(argIsa(iTimeOf_SecondFn,1,ftPositiveRealNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395561).
lisp_trans(argGenl(iTimeOf_SecondFn,2,tSumoMinute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395600).
lisp_trans(resultGenl(iTimeOf_SecondFn,tSumoSecond),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395635).
lisp_trans(documentation(iTimeOf_SecondFn,vEnglishLanguage,s("A","#$BinaryFunction","that","assigns","a","#$PositiveRealNumber","and","a","subclass","of","#$Minutes","to","the","#$Seconds","within","each","#$Minute","corresponding","to","that","#$PositiveRealNumber",".","For","example",",","(","#$SecondFn","4","(","#$MinuteFn","5","#$Hour",")",")","is","the","#$Class","of","all","fourth","#$Seconds","of","every","fifth","#$Minute","of","every","hour",".","For","another","example",",","(","#$SecondFn","8","#$Minute",")","would","return","the","eighth","second","of","every","minute",".","For","still","another","example",",","(","#$SecondFn","9","(","#$MinuteFn","15","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")",")",")","denotes","9","seconds","and","15","minutes","after","2","PM","on","the","18","th","day","of","August","1912",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':395667).
lisp_trans(documentation(iTimeOf_SecondFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$BinaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$PositiveRealNumber","ä","¸","\216\","ä","¸","\200\","ä","¸","ªä","¸","\216\","ä","¸","\200\","ä","¸","ª","#$minute","ç","\232\","\204\","å","­","\220\","ç","±","»","å","\210\","«","ï","¼","\214\","å","\210\","\206\","é","\205\","\215\","å","\210\","°","æ","¯","\217\","ä","¸","ª","#$minute","å","\206\","\205\","å","¯","¹","åº","\224\","é","\202\","£","ä","¸","ª","#$PositiveRealNumber","ç","\232\","\204\","#$secondã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$SecondFn","4","(","#$MinuteFn","5","#$Hour",")",")","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","¯","\217\","å","°","\217\","æ","\227\","¶","äº","\224\","å","\210\","\206\","å","\233\","\233\","ç","§","\222\","#$Classã","\200\","\202\","å","\217\","¦","å","¤","\226\","ä","¸","\200\","ä","¸","ªä","¾","\213\","å","­","\220\","ï","¼","\232\","(","#$SecondFn","8","#$Minute",")","ä","¼","\232\","å","¾","\227\","å","\207\","ºæ","\211\","\200\","æ","\234\","\211\","æ","¯","\217\","å","\210\","\206\","é","\222\","\237\","å","\205\","«","ç","§","\222\","ã","\200\","\202\","å","\206\","\215\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","(","#$SecondFn","9","(","#$MinuteFn","15","(","#$HourFn","14","(","#$DayFn","18","(","#$MonthFn","#$August","(","#$YearFn","1912",")",")",")",")",")",")","è","¡","¨","ç","¤","º1912å","¹","´","å","\205\","«","æ","\234\","\210\","å","\215\","\201\","å","\205\","«","æ","\227\","¥","ä","¸","\213\","å","\215\","\210\","ä","¸","¤","ç","\202\","¹","å","\215\","\201\","äº","\224\","å","\210\","\206\","ä","¹","\235\","ç","§","\222\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':396304).
lisp_trans(=>(isa(SECOND,iTimeOf_SecondFn(NUMBER,MINUTE)),lessThan(NUMBER,60)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':396868).
lisp_trans(=>(and(isa(SECOND1,iTimeOf_SecondFn(NUMBER1,MINUTE)),isa(SECOND2,iTimeOf_SecondFn(NUMBER2,MINUTE)),equal(uSubtractionFn(NUMBER2,NUMBER1),1)),meetsTemporally(SECOND1,SECOND2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':396948).
lisp_trans(genls(tSumoYear,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397160).
lisp_trans(relatedInternalConcept(tSumoYear,iTimeOf_YearFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397189).
lisp_trans(relatedInternalConcept(tSumoYear,actYearDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397226).
lisp_trans(documentation(tSumoYear,vEnglishLanguage,s("The","#$Class","of","all","calendar","#$Years",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397269).
lisp_trans(documentation(tSumoYear,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","#$Year","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397345).
lisp_trans(=>(tSumoYear(YEAR),duration(YEAR,uMeasureFn(1,actYearDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397426).
lisp_trans(=>(and(tSumoYear(YEAR1),tSumoYear(YEAR2),equal(uSubtractionFn(YEAR2,YEAR1),1)),meetsTemporally(YEAR1,YEAR2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397504).
lisp_trans(genls(timeOfLeapYear,tSumoYear),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397658).
lisp_trans(documentation(timeOfLeapYear,vEnglishLanguage,s("The","#$Class","of","all","leap","years",".","These","are","years","which","are","either","(","i",".",")","evenly","divisible","by","4","and","not","by","100","or","(","ii",".",")","evenly","divisible","by","400","(","this","latter","case","is","known","as","a","leap","century",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397683).
lisp_trans(documentation(timeOfLeapYear,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","é","\227\","°","å","¹","´","ç","\232\","\204\","#$Classã","\200\","\202\","è","¿","\231\","äº","\233\","å","¹","´","ä","»","½","å","½","\223\","ä","¸","­","ï","¼","\214\","è","¦","\201\","ä","¸","\215\","æ","\230\","¯","(","i",".",")","è","\203\","½","è","¢","«","4","å","\215\","´","ä","¸","\215\","è","\203\","½","è","¢","«","100","æ","\225\","´","é","\231\","¤","ç","\232\","\204\","ï","¼","\214\","æ","\210\","\226\","æ","\230\","¯","(","ii",".",")","è","\203\","½","è","¢","«","400","æ","\225\","´","é","\231\","¤","ç","\232\","\204\","(","å","\220\","\216\","è","\200\","\205\","æ","\230\","¯","ä","¸","ºä","¸","\226\","çºªé","\227\","°","å","¹","´",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':397913).
lisp_trans(=>(and(timeOfLeapYear(LEAP),isa(LEAP,iTimeOf_YearFn(NUMBER))),or(and(equal(uRemainderFn(NUMBER,4),0),not(equal(uRemainderFn(NUMBER,100),0))),equal(uRemainderFn(NUMBER,400),0))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398118).
lisp_trans(genls(tSumoMonth,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398361).
lisp_trans(relatedInternalConcept(tSumoMonth,iTimeOf_MonthFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398391).
lisp_trans(documentation(tSumoMonth,vEnglishLanguage,s("The","#$Class","of","all","calendar","#$Months",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398430).
lisp_trans(documentation(tSumoMonth,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398508).
lisp_trans(genls(vJanuary,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398591).
lisp_trans(documentation(vJanuary,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","January",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398616).
lisp_trans(documentation(vJanuary,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\200\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398705).
lisp_trans(=>(vJanuary(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398790).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vJanuary,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vFebruary,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':398873).
lisp_trans(genls(vFebruary,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399024).
lisp_trans(documentation(vFebruary,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","February",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399050).
lisp_trans(documentation(vFebruary,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","äº","\214\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399141).
lisp_trans(=>(and(isa(MONTH,iTimeOf_MonthFn(vFebruary,YEAR)),isa(Y,YEAR),not(timeOfLeapYear(Y))),duration(MONTH,uMeasureFn(28,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399227).
lisp_trans(=>(and(isa(MONTH,iTimeOf_MonthFn(vFebruary,YEAR)),isa(Y,YEAR),timeOfLeapYear(Y)),duration(MONTH,uMeasureFn(29,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399400).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vFebruary,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vMarch,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399567).
lisp_trans(genls(vMarch,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399716).
lisp_trans(documentation(vMarch,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","March",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399739).
lisp_trans(documentation(vMarch,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\211\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399824).
lisp_trans(=>(vMarch(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399907).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vMarch,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vApril,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':399988).
lisp_trans(genls(vApril,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400134).
lisp_trans(documentation(vApril,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","April",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400157).
lisp_trans(documentation(vApril,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\233\","\233\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400242).
lisp_trans(=>(vApril(MONTH),duration(MONTH,uMeasureFn(30,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400325).
lisp_trans(=>(and(equal(MONTH1,iTimeOf_MonthFn(vApril,YEAR)),equal(MONTH2,iTimeOf_MonthFn(vMay,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400406).
lisp_trans(genls(vMay,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400544).
lisp_trans(documentation(vMay,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","May",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400565).
lisp_trans(documentation(vMay,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","äº","\224\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400646).
lisp_trans(=>(vMay(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400727).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vMay,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vJune,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400806).
lisp_trans(genls(vJune,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400949).
lisp_trans(documentation(vJune,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","June",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':400971).
lisp_trans(documentation(vJune,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\205\","­","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401054).
lisp_trans(=>(vJune(MONTH),duration(MONTH,uMeasureFn(30,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401136).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vJune,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vJuly,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401216).
lisp_trans(genls(vJuly,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401360).
lisp_trans(documentation(vJuly,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","July",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401382).
lisp_trans(documentation(vJuly,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\203\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401465).
lisp_trans(=>(vJuly(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401547).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vJuly,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vAugust,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401627).
lisp_trans(genls(vAugust,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401773).
lisp_trans(documentation(vAugust,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","August",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401797).
lisp_trans(documentation(vAugust,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\205\","«","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401884).
lisp_trans(=>(vAugust(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':401968).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vAugust,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vSeptember,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402050).
lisp_trans(genls(vSeptember,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402202).
lisp_trans(documentation(vSeptember,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","September",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402229).
lisp_trans(documentation(vSeptember,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","ä","¹","\235\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402323).
lisp_trans(=>(vSeptember(MONTH),duration(MONTH,uMeasureFn(30,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402410).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vSeptember,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vOctober,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402495).
lisp_trans(genls(vOctober,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402647).
lisp_trans(documentation(vOctober,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","October",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402672).
lisp_trans(documentation(vOctober,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\215\","\201\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402761).
lisp_trans(=>(vOctober(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402846).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vOctober,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vNovember,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':402929).
lisp_trans(genls(vNovember,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403080).
lisp_trans(documentation(vNovember,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","November",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403106).
lisp_trans(documentation(vNovember,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\215\","\201\","ä","¸","\200\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403197).
lisp_trans(=>(vNovember(MONTH),duration(MONTH,uMeasureFn(30,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403286).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vNovember,YEAR)),isa(MONTH2,iTimeOf_MonthFn(vDecember,YEAR))),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403370).
lisp_trans(genls(vDecember,tSumoMonth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403522).
lisp_trans(documentation(vDecember,vEnglishLanguage,s("The","#$Class","of","all","#$Months","which","are","December",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403548).
lisp_trans(documentation(vDecember,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","å","\215\","\201\","äº","\214\","æ","\234\","\210\","#$Month","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403639).
lisp_trans(=>(vDecember(MONTH),duration(MONTH,uMeasureFn(31,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403728).
lisp_trans(=>(and(isa(MONTH1,iTimeOf_MonthFn(vDecember,YEAR1)),isa(MONTH2,iTimeOf_MonthFn(vJanuary,YEAR2)),isa(Y1,YEAR1),isa(Y2,YEAR2),meetsTemporally(Y1,Y2)),meetsTemporally(MONTH1,MONTH2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':403812).
lisp_trans(genls(tSumoDay,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404053).
lisp_trans(relatedInternalConcept(tSumoDay,iTimeOf_DayFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404081).
lisp_trans(relatedInternalConcept(tSumoDay,actDayDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404116).
lisp_trans(documentation(tSumoDay,vEnglishLanguage,s("The","#$Class","of","all","calendar","#$Days",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404157).
lisp_trans(documentation(tSumoDay,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\227\","¥","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404231).
lisp_trans(=>(tSumoDay(DAY),duration(DAY,uMeasureFn(1,actDayDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404306).
lisp_trans(genls(vMonday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404380).
lisp_trans(documentation(vMonday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Mondays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404402).
lisp_trans(documentation(vMonday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","ä","¸","\200\","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404480).
lisp_trans(genls(vTuesday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404564).
lisp_trans(documentation(vTuesday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Tuesdays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404587).
lisp_trans(documentation(vTuesday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","äº","\214\","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404667).
lisp_trans(=>(and(vMonday(DAY1),vTuesday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404752).
lisp_trans(genls(vWednesday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404955).
lisp_trans(documentation(vWednesday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Wednesdays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':404980).
lisp_trans(documentation(vWednesday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","ä","¸","\211\","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405064).
lisp_trans(=>(and(vTuesday(DAY1),vWednesday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405151).
lisp_trans(genls(vThursday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405357).
lisp_trans(documentation(vThursday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Thursdays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405381).
lisp_trans(documentation(vThursday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","å","\233\","\233\","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405463).
lisp_trans(=>(and(vWednesday(DAY1),vThursday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405549).
lisp_trans(genls(vFriday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405756).
lisp_trans(documentation(vFriday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Fridays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405778).
lisp_trans(documentation(vFriday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","äº","\224\","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405856).
lisp_trans(=>(and(vThursday(DAY1),vFriday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':405940).
lisp_trans(genls(vSaturday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406144).
lisp_trans(documentation(vSaturday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Saturdays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406168).
lisp_trans(documentation(vSaturday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","å","\205\","­","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406250).
lisp_trans(=>(and(vFriday(DAY1),vSaturday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406336).
lisp_trans(genls(vSunday,tSumoDay),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406540).
lisp_trans(documentation(vSunday,vEnglishLanguage,s("The","#$Class","of","all","calendar","Sundays",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406562).
lisp_trans(documentation(vSunday,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","æ","\230\","\237\","æ","\234\","\237\","æ","\227\","¥","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406640).
lisp_trans(=>(and(vSaturday(DAY1),vSunday(DAY2),tSumoWeek(WEEK),temporalPart(DAY1,WEEK),temporalPart(DAY2,WEEK)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406724).
lisp_trans(=>(and(vSunday(DAY1),vMonday(DAY2),tSumoWeek(WEEK1),tSumoWeek(WEEK2),temporalPart(DAY1,WEEK1),temporalPart(DAY2,WEEK2),meetsTemporally(WEEK1,WEEK2)),meetsTemporally(DAY1,DAY2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':406928).
lisp_trans(genls(tSumoWeek,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407200).
lisp_trans(documentation(tSumoWeek,vEnglishLanguage,s("The","#$Class","of","all","calendar","weeks",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407229).
lisp_trans(documentation(tSumoWeek,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¥","å","\216\","\206\","å","\221\","¨","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407303).
lisp_trans(=>(tSumoWeek(WEEK),duration(WEEK,uMeasureFn(1,actWeekDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407379).
lisp_trans(genls(tSumoHour,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407457).
lisp_trans(relatedInternalConcept(tSumoHour,iTimeOf_HourFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407486).
lisp_trans(relatedInternalConcept(tSumoHour,actHourDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407523).
lisp_trans(documentation(tSumoHour,vEnglishLanguage,s("The","#$Class","of","all","clock","#$Hours",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407566).
lisp_trans(documentation(tSumoHour,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¶","é","\222\","\237\","#$Hour","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407639).
lisp_trans(=>(tSumoHour(HOUR),duration(HOUR,uMeasureFn(1,actHourDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407720).
lisp_trans(genls(tSumoMinute,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407798).
lisp_trans(relatedInternalConcept(tSumoMinute,iTimeOf_MinuteFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407829).
lisp_trans(relatedInternalConcept(tSumoMinute,actMinuteDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407870).
lisp_trans(documentation(tSumoMinute,vEnglishLanguage,s("The","#$Class","of","all","clock","#$Minutes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407917).
lisp_trans(documentation(tSumoMinute,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¶","é","\222\","\237\","#$Minute","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':407994).
lisp_trans(=>(tSumoMinute(MINUTE),duration(MINUTE,uMeasureFn(1,actMinuteDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408079).
lisp_trans(genls(tSumoSecond,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408165).
lisp_trans(relatedInternalConcept(tSumoSecond,actSecondDuration),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408196).
lisp_trans(relatedInternalConcept(tSumoSecond,iTimeOf_SecondFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408243).
lisp_trans(documentation(tSumoSecond,vEnglishLanguage,s("The","#$Class","of","all","clock","#$Seconds",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408284).
lisp_trans(documentation(tSumoSecond,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","æ","\227\","¶","é","\222\","\237\","#$Second","ç","\232\","\204\","#$Classã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408361).
lisp_trans(=>(tSumoSecond(SECOND),duration(SECOND,uMeasureFn(1,actSecondDuration))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408446).
lisp_trans(rtTemporalRelation(uTemporalCompositionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408532).
lisp_trans(rtBinaryFunction(uTemporalCompositionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408582).
lisp_trans(rtTotalValuedRelation(uTemporalCompositionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408630).
lisp_trans(argIsa(uTemporalCompositionFn,1,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408683).
lisp_trans(argGenl(uTemporalCompositionFn,2,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408729).
lisp_trans(resultGenl(uTemporalCompositionFn,timeOfTimeInterval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408783).
lisp_trans(documentation(uTemporalCompositionFn,vEnglishLanguage,s("The","basic","#$Function","for","expressing","the","composition","of","larger","#$TimeIntervals","out","of","smaller","#$TimeIntervals",".","For","example",",","if","#$ThisSeptember","is","an","#$instance","of","#$September",",","(","#$TemporalCompositionFn","#$ThisSeptember","#$Day",")","denotes","the","#$Class","of","consecutive","days","that","make","up","#$ThisSeptember",".","Note","that","one","can","obtain","the","number","of","instances","of","this","#$Class","by","using","the","function","#$CardinalityFn",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':408834).
lisp_trans(documentation(uTemporalCompositionFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","è","¡","¨","ç","¤","ºä","»","¥","è","¾","\203\","å","°","\217\","ç","\232\","\204\","#$TimeInterval","ç","»","\204\","æ","\210\","\220\","è","¾","\203\","å","¤","§","ç","\232\","\204\","#$TimeInterval","ç","\232\","\204\","å","\237\","ºæ","\234\","¬","#$Functionã","\200\","\202\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","å","¦","\202\","æ","\236\","\234\","#$ThisSeptember","æ","\230\","¯","#$September","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$instanceï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$TemporalCompositionFn","#$ThisSeptember","#$Day",")","è","¡","¨","ç","¤","ºæ","\236\","\204\","æ","\210\","\220\","#$ThisSeptember","å","\206\","\205\","è","¿","\236\","ç","»","­","æ","\227\","¥","æ","\225\","°","ç","\232\","\204\","#$Classã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\210\","\221\","ä","»","¬","å","\217\","¯","ä","»","¥","ç","\224\","¨","å","\207\","½","æ","\225\","°","#$CardinalityFn","æ","\235\","¥","å","¾","\227\","å","\207\","ºè","¿","\231\","ä","¸","ª","#$Class","å","®","\236\","ä","¾","\213\","ç","\232\","\204\","æ","\225\","°","ç","\233\","®","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':409288).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),all([TIME1,TIME2],=>(and(isa(TIME1,INTERVAL_TYPE),isa(TIME2,CLASS)),exists([DURATION],and(duration(TIME1,DURATION),duration(TIME2,DURATION)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':409712).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),all([TIME1,TIME2],=>(and(isa(TIME1,CLASS),isa(TIME2,CLASS),not(equal(TIME1,TIME2))),or(meetsTemporally(TIME1,TIME2),meetsTemporally(TIME2,TIME1),earlier(TIME1,TIME2),earlier(TIME2,TIME1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':410055).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),exists([TIME],and(isa(TIME,CLASS),starts(TIME,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':410470).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),exists([TIME],and(isa(TIME,CLASS),finishes(TIME,INTERVAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':410642).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),all([TIME1],=>(and(isa(TIME1,CLASS),not(finishes(TIME1,INTERVAL))),exists([TIME2],and(isa(TIME2,CLASS),meetsTemporally(TIME1,TIME2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':410816).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),all([TIME1],=>(and(isa(TIME1,CLASS),not(starts(TIME1,INTERVAL))),exists([TIME2],and(isa(TIME2,CLASS),meetsTemporally(TIME2,TIME1)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':411151).
lisp_trans(=>(equal(uTemporalCompositionFn(INTERVAL,INTERVAL_TYPE),CLASS),all([TIME],=>(and(timeOfTimePoint(TIME),temporalPart(TIME,INTERVAL)),exists([INSTANCE],and(isa(INSTANCE,CLASS),temporalPart(TIME,INSTANCE)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':411484).
lisp_trans(=>(tSumoYear(YEAR),equal(vCardinalityFn(uTemporalCompositionFn(YEAR,tSumoMonth)),12)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':411822).
lisp_trans(=>(and(tSumoMonth(MONTH),duration(MONTH,uMeasureFn(NUMBER,actDayDuration))),equal(vCardinalityFn(uTemporalCompositionFn(MONTH,tSumoDay)),NUMBER)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':411919).
lisp_trans(=>(tSumoWeek(WEEK),equal(vCardinalityFn(uTemporalCompositionFn(WEEK,tSumoDay)),7)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412090).
lisp_trans(=>(tSumoDay(DAY),equal(vCardinalityFn(uTemporalCompositionFn(DAY,tSumoHour)),24)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412184).
lisp_trans(=>(tSumoHour(HOUR),equal(vCardinalityFn(uTemporalCompositionFn(HOUR,tSumoMinute)),60)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412277).
lisp_trans(=>(tSumoMinute(MINUTE),equal(vCardinalityFn(uTemporalCompositionFn(MINUTE,tSumoSecond)),60)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412375).
lisp_trans(rtBinaryPredicate(connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412731).
lisp_trans(rtSpatialRelation(connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412768).
lisp_trans(rtReflexiveRelation(connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412805).
lisp_trans(rtSymmetricRelation(connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412844).
lisp_trans(argIsa(connected,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412883).
lisp_trans(argIsa(connected,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412911).
lisp_trans(documentation(connected,vEnglishLanguage,s("(","connected","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","#$meetsSpatially","?","OBJ2","or","that","?","OBJ1","#$overlapsSpatially","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':412939).
lisp_trans(documentation(connected,xtChineseLanguage,s("(","connected","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","#$meetsSpatially","?","OBJ2","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","?","OBJ1","#$overlapsSpatially","?","OBJ2ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413088).
lisp_trans(=>(connected(OBJ1,OBJ2),or(meetsSpatially(OBJ1,OBJ2),overlapsSpatially(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413243).
lisp_trans(<=>(tSumoSelfConnectedObject(OBJ),all([PART1,PART2],=>(equal(OBJ,uMereologicalSumFn(PART1,PART2)),connected(PART1,PART2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413369).
lisp_trans(rtSpatialRelation(connects),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413535).
lisp_trans(rtTernaryPredicate(connects),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413571).
lisp_trans(argIsa(connects,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413608).
lisp_trans(argIsa(connects,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413635).
lisp_trans(argIsa(connects,3,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413662).
lisp_trans(documentation(connects,vEnglishLanguage,s("The","relationship","between","three","things",",","when","one","of","the","three","things","connects","the","other","two",".","More","formally",",","(","#$connects","?","OBJ1","?","OBJ2","?","OBJ3",")","means","that","(","#$connected","?","OBJ1","?","OBJ2",")","and","(","#$connected","?","OBJ1","?","OBJ3",")","and","not","(","#$connected","?","OBJ2","?","OBJ3",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413689).
lisp_trans(documentation(connects,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\201\","\224\","ç","³","»","ä","¸","\211\","æ","\240\","·","ä","¸","\234\","è","¥","¿","ç","\232\","\204\","å","\205\","³","ç","³","»","ï","¼","\214\","å","®","\203\","å","\207\","ºç","\216\","°","å","\234\","¨","å","½","\223\","ä","¸","\211\","æ","\240\","·","ä","¸","\234\","è","¥","¿","ä","¹","\213\","ä","¸","­","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","\212\","\212\","å","\217\","¦","å","¤","\226\","ç","\232\","\204\","ä","¸","¤","ä","¸","ªè","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ç","\232\","\204\","æ","\227\","¶","å","\200\","\231\","ï","¼","\214\","æ","\233\","´","æ","­","£","è","§","\204\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","(","#$connects","?","OBJ1","?","OBJ2","?","OBJ3",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","(","#$connected","?","OBJ1","?","OBJ2",")","å","\222\","\214\","(","#$connected","?","OBJ1","?","OBJ3",")","ï","¼","\214\","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","(","#$connected","?","OBJ2","?","OBJ3",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':413974).
lisp_trans(<=>(connects(OBJ1,OBJ2,OBJ3),cycBetween(OBJ2,OBJ1,OBJ3)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414300).
lisp_trans(<=>(connects(OBJ1,OBJ2,OBJ3),and(connected(OBJ1,OBJ2),connected(OBJ1,OBJ3),not(connected(OBJ2,OBJ3)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414368).
lisp_trans(=>(connects(ARC,NODE1,NODE2),connects(ARC,NODE2,NODE1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414510).
lisp_trans(argIsa(meetsSpatially,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414718).
lisp_trans(argIsa(meetsSpatially,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414751).
lisp_trans(relatedInternalConcept(meetsSpatially,connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414784).
lisp_trans(rtIrreflexiveRelation(meetsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414834).
lisp_trans(rtSymmetricRelation(meetsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414880).
lisp_trans(disjointRelation(meetsSpatially,overlapsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414924).
lisp_trans(documentation(meetsSpatially,vEnglishLanguage,s("(","#$meetsSpatially","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","and","?","OBJ2","are","#$connected","but","that","neither","?","OBJ1","nor","?","OBJ2","#$overlapsSpatially","the","other",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':414976).
lisp_trans(documentation(meetsSpatially,xtChineseLanguage,s("(","#$meetsSpatially","?","OBJ1","?","OBJ2",")","å","¾","\227\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\222\","\214\","?","OBJ2","æ","\230\","¯","#$connected","ç","\232\","\204\","ä","½","\206\","æ","\230\","¯","?","OBJ1","æ","\210\","\226\","?","OBJ2","é","\203\","½","æ","²","¡","æ","\234\","\211\","è","·","\237\","å","¯","¹","æ","\226\","¹","#$overlapsSpatiallyã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415163).
lisp_trans(genlPreds(overlapsSpatially,connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415357).
lisp_trans(rtReflexiveRelation(overlapsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415399).
lisp_trans(rtSymmetricRelation(overlapsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415446).
lisp_trans(documentation(overlapsSpatially,vEnglishLanguage,s("(","#$overlapsSpatially","?","OBJ1","?","OBJ2",")","means","that","the","#$Objects","?","OBJ1","and","?","OBJ2","have","some","parts","in","common",".","This","is","a","reflexive","and","symmetric","(","but","not","transitive",")","relation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415493).
lisp_trans(documentation(overlapsSpatially,xtChineseLanguage,s("(","#$overlapsSpatially","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Objects","?","OBJ1","å","\222\","\214\","?","OBJ2","æ","\234\","\211\","äº","\233\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªè","\207\","ªå","\217\","\215\","å","\222\","\214\","å","¯","¹","ç","§","°","(","è","\200\","\214\","ä","¸","\215\","æ","\230\","¯","ä","¼","\240\","é","\200\","\222\",")","ç","\232\","\204\","å","\205\","³","ç","³","»","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415713).
lisp_trans(<=>(overlapsSpatially(OBJ1,OBJ2),exists([OBJ3],and(part(OBJ3,OBJ1),part(OBJ3,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':415920).
lisp_trans(=>(and(member(OBJ1,COLL),member(OBJ2,COLL),not(equal(OBJ1,OBJ2))),not(overlapsSpatially(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416075).
lisp_trans(=>(and(rtCaseRole(REL),tSumoObject(OBJ),[REL,PROCESS,OBJ]),exists([TIME],overlapsSpatially(uWhereFn(PROCESS,TIME),OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416223).
lisp_trans(rtBinaryPredicate(overlapsPartially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416401).
lisp_trans(rtSymmetricRelation(overlapsPartially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416446).
lisp_trans(rtPartialValuedRelation(overlapsPartially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416493).
lisp_trans(rtIrreflexiveRelation(overlapsPartially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416544).
lisp_trans('ï¼\233\it.','/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416685).
lisp_trans(documentation(overlapsPartially,vEnglishLanguage,s("(","#$overlapsPartially","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","and","?","OBJ2","have","part","(","s",")","in","common",",","but","neither","?","OBJ1","nor","?","OBJ2","is","a","#$part","of","the","other",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416743).
lisp_trans(documentation(overlapsPartially,xtChineseLanguage,s("(","#$overlapsPartially","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\222\","\214\","?","OBJ2æ","\234\","\211\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","ä","½","\206\","æ","\230\","¯","?","OBJ1","æ","\210\","\226\","?","OBJ2","é","\203\","½","ä","¸","\215\","æ","\230\","¯","å","¯","¹","æ","\226\","¹","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$partã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':416934).
lisp_trans(argIsa(overlapsPartially,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417126).
lisp_trans(argIsa(overlapsPartially,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417162).
lisp_trans(<=>(overlapsPartially(OBJ1,OBJ2),and(not(part(OBJ1,OBJ2)),not(part(OBJ2,OBJ1)),exists([OBJ3],and(part(OBJ3,OBJ1),part(OBJ3,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417199).
lisp_trans(=>(overlapsPartially(OBJ1,OBJ2),overlapsSpatially(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417433).
lisp_trans(genlPreds(superficialPart,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417507).
lisp_trans(rtIrreflexiveRelation(superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417542).
lisp_trans(rtTransitiveRelation(superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417589).
lisp_trans(rtPartialValuedRelation(superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417635).
lisp_trans(documentation(superficialPart,vEnglishLanguage,s("(","#$superficialPart","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","a","part","of","?","OBJ2","that","has","no","interior","parts","of","its","own","(","or",",","intuitively",",","that","only","overlaps","those","parts","of","?","OBJ2","that","are","externally","connected","with","the","mereological","complement","of","?","OBJ2",")",".","This","too","is","a","transitive","relation","closed","under","#$MereologicalSumFn","and","#$MereologicalProductFn",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':417684).
lisp_trans(documentation(superficialPart,xtChineseLanguage,s("(","#$superficialPart","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","æ","\230\","¯","?","OBJ2","æ","²","¡","æ","\234\","\211\","è","\207\","ªèº","«","ç","\232\","\204\","å","\206\","\205\","å","\234\","¨","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","ï","¼","\214\","(","æ","\210\","\226\","è","\200\","\205\","ç","\233\","´","è","§","\202\","ç","\232\","\204\","è","¯","´","ï","¼","\214\","å","\217\","ªæ","\234\","\211\","å","\222\","\214\","?","OBJ2","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","é","\207\","\215\","å","\217\","\240\","ï","¼","\214\","å","\234\","¨","å","¤","\226\","é","\203\","¨","å","\222\","\214\","?","OBJ2","ç","\232\","\204\","å","\210\","\206\","ä","½","\223\","è","¡","¥","å","\205\","\205\","é","\203\","¨","å","\210\","\206\","lianxiç","\235\","\200\",")","ã","\200\","\202\","è","¿","\231\","ä","¸","ªä","¹","\237\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","¼","\240\","é","\200\","\222\","å","\205\","³","ç","³","»","ï","¼","\214\","å","\217\","\227\","#$MereologicalSumFn","å","\222\","\214\","#$MereologicalProductFn","ç","\232\","\204\","å","°","\201\","é","\227\","­","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418068).
lisp_trans(=>(superficialPart(OBJ1,OBJ2),and(not(interiorPart(OBJ1,OBJ2)),not(exists([OBJ3],interiorPart(OBJ3,OBJ1))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418434).
lisp_trans(rtAsymmetricRelation(surface),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418591).
lisp_trans(genlPreds(surface,superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418629).
lisp_trans(argIsa(surface,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418667).
lisp_trans(argIsa(surface,2,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418706).
lisp_trans(documentation(surface,vEnglishLanguage,s("(","#$surface","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","a","maximally","connected","#$superficialPart","of","?","OBJ2",".","Note","that","some","#$SelfConnectedObjects","have","more","than","one","surface",",","e",".","g",".","a","hollow","object","like","a","tennis","ball","has","both","an","inner","and","an","outer","surface",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':418745).
lisp_trans(documentation(surface,xtChineseLanguage,s("(","#$surface","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","å","\222\","\214\","?","OBJ2","ç","\232\","\204\","#$superficialPart","æ","\230\","¯","ä","»","¥","æ","\234\","\200\","å","¤","§","ç","\232\","\204\","ç","¨","\213\","åº","¦","è","\201\","\224\","ç","³","»","ç","\235\","\200\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","æ","\234\","\211\","äº","\233\","#$SelfConnectedObject","æ","\234\","\211\","è","¶","\205\","è","¿","\207\","ä","¸","\200\","å","\235\","\227\","è","¡","¨","é","\235\","¢","ï","¼","\214\","ä","¾","\213\","å","¦","\202\","ï","¼","\232\","ä","¸","\200\","ä","¸","ªå","\203\","\217\","ç","½","\221\","ç","\220\","\203\","ä","¸","­","ç","©","ºç","\211\","©","ä","½","\223\","ï","¼","\214\","å","°","±","æ","\234\","\211\","å","\206\","\205\","å","\234\","¨","å","\222\","\214\","å","¤","\226\","å","\234\","¨","ç","\232\","\204\","è","¡","¨","é","\235\","¢","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419028).
lisp_trans(=>(surface(OBJ1,OBJ2),all([OBJ3],=>(superficialPart(OBJ3,OBJ2),part(OBJ3,OBJ1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419313).
lisp_trans(genlPreds(interiorPart,part),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419432).
lisp_trans(rtAsymmetricRelation(interiorPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419464).
lisp_trans(rtTransitiveRelation(interiorPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419507).
lisp_trans(documentation(interiorPart,vEnglishLanguage,s("(","#$interiorPart","?","OBJ1","?","OBJ2",")","means","that","?","OBJ1","is","part","?","OBJ2","and","there","is","no","overlap","between","?","OBJ1","and","any","#$superficialPart","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419550).
lisp_trans(documentation(interiorPart,xtChineseLanguage,s("(","#$interiorPart","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ1","æ","\230\","¯","?","OBJ2","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","è","\200\","\214\","?","OBJ1","å","\222\","\214\","?","OBJ2","ç","\232\","\204\","ä","»","»","ä","½","\225\","#$superficialPart","ä","¹","\213\","é","\227\","´","å","¹","¶","æ","²","¡","æ","\234\","\211\","é","\207\","\215\","å","\217\","\240\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419728).
lisp_trans(=>(interiorPart(OBJ1,OBJ2),all([PART],=>(superficialPart(PART,OBJ2),not(overlapsSpatially(OBJ1,PART))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':419927).
lisp_trans(genlPreds(bottom,superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420078).
lisp_trans(rtBinaryPredicate(bottom),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420115).
lisp_trans(argIsa(bottom,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420149).
lisp_trans(argIsa(bottom,2,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420187).
lisp_trans(documentation(bottom,vEnglishLanguage,s("(","#$bottom","?","BOTTOM","?","OBJECT",")","holds","if","?","BOTTOM","is","the","lowest","or","deepest","maximal","superficial","part","of","?","OBJECT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420225).
lisp_trans(documentation(bottom,xtChineseLanguage,s("(","#$bottom","?","BOTTOM","?","OBJECT",")","ç","\232\","\204\","è","¯","´","æ","³","\225\","å","\217\","¯","ä","»","¥","æ","\210\","\220\","ç","«","\213\","ï","¼","\214\","å","¦","\202\","æ","\236\","\234\","?","BOTTOM","æ","\230\","¯","?","OBJECT","æ","\234\","\200\","ä","½","\216\","æ","\210\","\226\","æ","\234\","\200\","æ","·","±","ç","\232\","\204\","æ","\234\","\200\","å","¤","§","ç","\232\","\204\","è","¡","¨","é","\235\","¢","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420372).
lisp_trans(=>(and(bottom(BOTTOM,OBJECT),part(PART,OBJECT),not(connected(PART,BOTTOM))),orientation(PART,BOTTOM,tSumoAbove)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420535).
lisp_trans(genlPreds(top,superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420675).
lisp_trans(rtBinaryPredicate(top),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420709).
lisp_trans(argIsa(top,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420740).
lisp_trans(argIsa(top,2,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420775).
lisp_trans(documentation(top,vEnglishLanguage,s("(","#$top","?","TOP","?","OBJECT",")","means","that","?","TOP","is","the","highest","maximal","superficial","part","of","?","OBJECT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420810).
lisp_trans(documentation(top,xtChineseLanguage,s("(","#$top","?","TOP","?","OBJECT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","TOP","æ","\230\","¯","?","OBJECT","æ","\234\","\200\","é","«","\230\","ç","\232\","\204\","æ","\234\","\200\","å","¤","§","ç","\232\","\204\","è","¡","¨","é","\235\","¢","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':420938).
lisp_trans(=>(and(top(TOP,OBJECT),part(PART,OBJECT),not(connected(PART,TOP))),orientation(PART,TOP,tSumoBelow)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421062).
lisp_trans(genlPreds(side,superficialPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421190).
lisp_trans(rtBinaryPredicate(side),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421225).
lisp_trans(argIsa(side,1,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421257).
lisp_trans(argIsa(side,2,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421293).
lisp_trans(documentation(side,vEnglishLanguage,s("(","#$side","?","SIDE","?","OBJECT",")","means","that","?","SIDE","is","a","side","of","the","object",",","as","opposed","to","the","#$top","or","#$bottom",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421329).
lisp_trans(documentation(side,xtChineseLanguage,s("(","#$side","?","SIDE","?","OBJECT",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","SIDE","å","\222\","\214\","#$top","æ","\210\","\226\","#$bottom","ç","\233\","¸","å","\217\","\215\","ï","¼","\214\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\211\","©","ä","½","\223\","ç","\232\","\204\","æ","\227\","\201\","è","¾","¹","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421471).
lisp_trans(=>(and(side(SIDE,OBJECT),part(PART,OBJECT),not(connected(PART,SIDE))),exists([DIRECT],orientation(SIDE,PART,DIRECT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421613).
lisp_trans(=>(and(top(TOP,O),side(S,O)),not(equal(TOP,S))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421778).
lisp_trans(<=>(width(OBJECT,WIDTH),exists([SIDE1,SIDE2],and(side(SIDE1,OBJECT),side(SIDE2,OBJECT),distance(SIDE1,SIDE2,WIDTH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':421855).
lisp_trans(=>(and(height(OBJECT,HEIGHT),top(TOP,OBJECT),bottom(BOTTOM,OBJECT)),distance(TOP,BOTTOM,HEIGHT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422018).
lisp_trans(rtSpatialRelation(uMereologicalSumFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422147).
lisp_trans(rtBinaryFunction(uMereologicalSumFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422192).
lisp_trans(rtTotalValuedRelation(uMereologicalSumFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422236).
lisp_trans(argIsa(uMereologicalSumFn,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422285).
lisp_trans(argIsa(uMereologicalSumFn,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422321).
lisp_trans(resultIsa(uMereologicalSumFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422357).
lisp_trans(relatedInternalConcept(uMereologicalSumFn,uMereologicalProductFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422390).
lisp_trans(relatedInternalConcept(uMereologicalSumFn,uMereologicalDifferenceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422455).
lisp_trans(documentation(uMereologicalSumFn,vEnglishLanguage,s("(","#$MereologicalSumFn","?","OBJ1","?","OBJ2",")","denotes","the","#$Object","consisting","of","the","parts","which","belong","to","either","?","OBJ1","or","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422523).
lisp_trans(documentation(uMereologicalSumFn,xtChineseLanguage,s("(","#$MereologicalSumFn","?","OBJ1","?","OBJ2",")","è","¡","¨","ç","¤","º","è","¿","\231\","ä","¸","ª","#$Object","å","\220\","«","æ","\234\","\211\","å","±","\236\","äº","\216\","?","OBJ1","æ","\210\","\226\","?","OBJ2","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422693).
lisp_trans(=>(equal(OBJ3,uMereologicalSumFn(OBJ1,OBJ2)),all([PART],<=>(part(PART,OBJ3),or(part(PART,OBJ1),part(PART,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':422844).
lisp_trans(rtSpatialRelation(uMereologicalProductFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423017).
lisp_trans(rtBinaryFunction(uMereologicalProductFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423066).
lisp_trans(rtTotalValuedRelation(uMereologicalProductFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423114).
lisp_trans(argIsa(uMereologicalProductFn,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423167).
lisp_trans(argIsa(uMereologicalProductFn,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423207).
lisp_trans(resultIsa(uMereologicalProductFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423247).
lisp_trans(relatedInternalConcept(uMereologicalProductFn,uMereologicalDifferenceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423284).
lisp_trans(documentation(uMereologicalProductFn,vEnglishLanguage,s("(","#$MereologicalProductFn","?","OBJ1","?","OBJ2",")","denotes","the","#$Object","consisting","of","the","parts","which","belong","to","both","?","OBJ1","and","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423356).
lisp_trans(documentation(uMereologicalProductFn,xtChineseLanguage,s("(","#$MereologicalProductFn","?","OBJ1","?","OBJ2",")","è","¡","¨","ç","¤","º","#$Object","å","\220\","«","æ","\234\","\211\","å","±","\236\","äº","\216\","?","OBJ1","å","\222\","\214\","?","OBJ2","ä","¸","¤","è","\200\","\205\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423533).
lisp_trans(=>(equal(OBJ3,uMereologicalProductFn(OBJ1,OBJ2)),all([PART],<=>(part(PART,OBJ3),and(part(PART,OBJ1),part(PART,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423692).
lisp_trans(rtSpatialRelation(uMereologicalDifferenceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423870).
lisp_trans(rtBinaryFunction(uMereologicalDifferenceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423922).
lisp_trans(rtTotalValuedRelation(uMereologicalDifferenceFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':423973).
lisp_trans(argIsa(uMereologicalDifferenceFn,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424029).
lisp_trans(argIsa(uMereologicalDifferenceFn,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424072).
lisp_trans(resultIsa(uMereologicalDifferenceFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424115).
lisp_trans(documentation(uMereologicalDifferenceFn,vEnglishLanguage,s("(","#$MereologicalDifferenceFn","?","OBJ1","?","OBJ2",")","denotes","the","#$Object","consisting","of","the","parts","which","belong","to","?","OBJ1","and","not","to","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424155).
lisp_trans(documentation(uMereologicalDifferenceFn,xtChineseLanguage,s("(","#$MereologicalDifferenceFn","?","OBJ1","?","OBJ2",")","è","¡","¨","ç","¤","º","#$Object","å","\214\","\205\","å","\220\","«","å","±","\236\","äº","\216\","?","OBJ1","ä","½","\206\","ä","¸","\215\","å","±","\236\","äº","\216\","?","OBJ2","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424340).
lisp_trans(=>(equal(OBJ3,uMereologicalDifferenceFn(OBJ1,OBJ2)),all([PART],<=>(properPart(PART,OBJ3),and(properPart(PART,OBJ1),not(properPart(PART,OBJ2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424507).
lisp_trans(rtBinaryPredicate(hole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424817).
lisp_trans(rtSpatialRelation(hole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424849).
lisp_trans(rtAsymmetricRelation(hole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424881).
lisp_trans(argIsa(hole,1,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424916).
lisp_trans(argIsa(hole,2,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424937).
lisp_trans(documentation(hole,vEnglishLanguage,s("(","#$hole","?","HOLE","?","OBJ",")","means","that","?","HOLE","is","a","#$Hole","in","?","OBJ",".","A","#$Hole","is","a","fillable","body","located","at","the","#$surface","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':424973).
lisp_trans(documentation(hole,xtChineseLanguage,s("(","#$hole","?","HOLE","?","OBJ",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","HOLE","æ","\230\","¯","å","\234\","¨","?","OBJ","ç","\232\","\204\","ä","¸","\200\","ä","¸","ª","#$Holeã","\200\","\202\","ä","¸","\200\","ä","¸","ª","#$Hole","æ","\230\","¯","ä","½","\215\","äº","\216\","ä","¸","\200\","ä","¸","ª","#$Object","#$surface","å","\217\","¯","ä","»","¥","è","¢","«","å","¡","«","æ","»","¡","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':425137).
lisp_trans(genls(tSumoHole,tPlaceLikeRegion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':425325).
lisp_trans(documentation(tSumoHole,vEnglishLanguage,s("A","hole","is","an","immaterial","body","located","at","the","surface","of","an","#$Object",".","Since","every","#$Hole","is","ontologically","dependent","on","its","host","(","i",".","e",".",",","the","object","in","which","it","is","a","hole",")",",","being","a","#$Hole","is","defined","as","being","a","#$hole","in","something",".","Note","that","two","#$Holes","may","occupy","the","same","region",",","or","part","of","the","same","region",",","without","sharing","any","parts",".","Any","two","hosts","of","a","hole","have","a","common","proper","part","that","entirely","hosts","the","hole",".","A","common","host","of","two","holes","hosts","all","parts","of","the","sum","of","those","holes",".","Any","object","that","includes","the","host","of","a","hole","is","a","host","of","that","hole",",","unless","its","parts","also","include","parts","of","that","very","hole",".","Overlapping","holes","have","overlapping","hosts",".","No","hole","is","atomic",".","Holes","are","connected","with","their","hosts",".","No","hole","can","have","a","proper","part","that","is","externally","connected","with","exactly","the","same","things","as","the","hole","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':425349).
lisp_trans(documentation(tSumoHole,xtChineseLanguage,s("æ","´","\236\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","½","\215\","äº","\216\","#$Object","ç","\211\","©","ä","½","\223\","è","¡","¨","é","\235\","¢","æ","²","¡","æ","\234\","\211\","å","½","¢","ä","½","\223\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","å","\233\","\240\","ä","¸","ºæ","¯","\217\","ä","¸","ª","#$Hole","å","\234\","¨","æ","\234\","¬","ä","½","\223\","ä","¸","\212\","ä","¾","\235\","é","\235\","\240\","ç","\235\","\200\","å","®","\203\","ç","\232\","\204\","ä","¸","»","ä","½","\223\","(","å","\215\","³","æ","\230\","¯","é","\202\","£","ä","¸","ªå","¼","\200\","ç","\235\","\200\","æ","´","\236\","ç","\232\","\204\","ç","\211\","©","ä","½","\223\",")",",","ä","¸","\200\","ä","¸","ª","#$Hole","ç","\232\","\204\","å","®","\232\","äº","\216\","æ","\230\","¯","å","®","\203\","æ","\230\","¯","å","\234\","¨","æ","\237\","\220\","å","¤","\204\","ç","\232\","\204\","#$holeã","\200\","\202\","æ","³","¨","ï","¼","\232\","ä","¸","¤","ä","¸","ª","#$Hole","å","\217\","¯","ä","»","¥","å","\215\","\240\","æ","\215\","®","å","\220\","\214\","ä","¸","\200\","ä","¸","ªå","\234\","°","å","\214\","ºæ","\210\","\226\","è","\200\","\205\","ç","\233\","¸","å","\220\","\214\","å","\234\","°","å","\214\","ºç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","è","\200\","\214\","æ","²","¡","æ","\234\","\211\","ä","»","»","ä","½","\225\","å","\205\","±","å","\220\","\214\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","ä","¸","\200\","ä","¸","ªæ","´","\236\","ç","\232\","\204\","ä","»","»","ä","½","\225\","ä","¸","¤","ä","¸","ªä","¸","»","ä","½","\223\","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªå","®","\214\","å","\205\","¨","æ","\211\","¿","è","½","½","è","¿","\231\","ä","¸","ª","æ","´","\236\","ç","\232\","\204\","å","\205\","±","å","\220\","\214\","ç","\234\","\237\","æ","­","£","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","ä","¸","¤","ä","¸","ªæ","´","\236\","ç","\232\","\204\","å","\205\","±","å","\220\","\214\","ä","¸","»","ä","½","\223\","æ","\211\","¿","è","½","½","æ","´","\236\","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","ä","»","»","ä","½","\225\","å","\220\","«","æ","\234\","\211\","æ","´","\236\","ä","¸","ºä","¸","»","ä","½","\223\","ç","\232\","\204\","ç","\211\","©","ä","½","\223\","å","°","±","æ","\230\","¯","é","\202\","£","ä","¸","ªæ","´","\236\","ç","\232\","\204\","ä","¸","»","ä","½","\223\","ï","¼","\214\","é","\231\","¤","é","\235\","\236\","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ä","¹","\237\","å","\214\","\205\","å","\220\","«","è","¿","\231\","ä","¸","ªæ","´","\236\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","å","´","\207\","å","¾","·","ç","\232\","\204\","æ","´","\236\","æ","\213\","¥","æ","\234\","\211\","é","\207\","\215\","å","\217\","\240\","ç","\232\","\204\","ä","¸","»","ä","½","\223\","ï","¼","\214\","æ","²","¡","æ","\234\","\211\","æ","´","\236\","æ","\213\","¥","æ","\234\","\211\","å","\216\","\237\","å","­","\220\","æ","\200\","§","ç","\232\","\204\","ç","\211\","¹","æ","\200\","§","ï","¼","\214\","æ","´","\236\","ä","¸","\216\","å","®","\203\","ç","\232\","\204\","ä","¸","»","ä","½","\223\","ç","\233\","¸","è","¿","\236\","ï","¼","\214\","æ","²","¡","æ","\234\","\211\","æ","´","\236\","å","\217\","¯","ä","»","¥","æ","\234\","\211\","ä","¸","\200\","ä","¸","ªç","\234\","\237\","æ","­","£","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","è","\200\","\214\","è","¿","\231\","ä","¸","ªç","\234\","\237\","æ","­","£","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","å","\222\","\214\","æ","\234\","\211\","ç","\235\","\200\","è","¿","\231\","ä","¸","ªæ","´","\236\","æ","\234\","¬","èº","«","å","®","\214\","å","\205\","¨","ç","\233\","¸","å","\220\","\214\","ç","\232\","\204\","ç","\211\","©","è","´","¨","ï","¼","\214\","å","\234\","¨","å","¤","\226\","é","\203\","¨","ç","\233\","¸","è","¿","\236\","æ","\216\","¥","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':426209).
lisp_trans(<=>(tSumoHole(HOLE),exists([OBJ],hole(HOLE,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427047).
lisp_trans(=>(hole(HOLE,OBJ),not(tSumoHole(OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427118).
lisp_trans(=>(hole(HOLE,OBJ),not(overlapsSpatially(HOLE,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427177).
lisp_trans(=>(and(hole(HOLE,OBJ1),hole(HOLE,OBJ2)),exists([OBJ3],and(properPart(OBJ3,uMereologicalProductFn(OBJ1,OBJ2)),hole(HOLE,OBJ3)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427247).
lisp_trans(=>(and(hole(HOLE1,OBJ),hole(HOLE2,OBJ)),all([HOLE3],=>(part(HOLE3,uMereologicalSumFn(HOLE1,HOLE2)),hole(HOLE3,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427422).
lisp_trans(=>(and(hole(HOLE,OBJ1),part(OBJ1,OBJ2)),or(overlapsSpatially(HOLE,OBJ2),hole(HOLE,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427590).
lisp_trans(=>(and(hole(HOLE1,OBJ1),hole(HOLE2,OBJ2),overlapsSpatially(HOLE1,HOLE2)),overlapsSpatially(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427716).
lisp_trans(=>(tSumoHole(HOLE1),exists([HOLE2],properPart(HOLE2,HOLE1))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427850).
lisp_trans(rtSpatialRelation(uHoleHostFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427932).
lisp_trans(rtUnaryFunction(uHoleHostFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':427970).
lisp_trans(rtTotalValuedRelation(uHoleHostFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428006).
lisp_trans(rtAsymmetricRelation(uHoleHostFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428048).
lisp_trans(argIsa(uHoleHostFn,1,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428089).
lisp_trans(resultIsa(uHoleHostFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428116).
lisp_trans(documentation(uHoleHostFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$Hole","to","the","#$Object","which","is","its","principal","host",".","The","principle","host","of","a","#$Hole","is","its","maximally","connected","host","(","a","notion","taken","here","to","be","defined","only","when","the","argument","is","a","hole",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428142).
lisp_trans(documentation(uHoleHostFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Hole","å","\222\","\214\","å","±","\236\","äº","\216\","å","®","\203\","ä","¸","»","è","¦","\201\","ä","¸","»","ä","½","\223\","ç","\232\","\204\","#$Object","è","\201\","\224\","ç","³","»","èµ","·","æ","\235\","¥","ã","\200\","\202\","ä","¸","\200\","ä","¸","ª","#$Hole","ç","\232\","\204\","ä","¸","»","è","¦","\201\","ä","¸","»","ä","½","\223\","æ","\230\","¯","å","\222\","\214\","å","®","\203\","æ","\234\","\200\","å","¤","§","ç","¨","\213\","åº","¦","ç","\233\","¸","è","¿","\236\","ç","\232\","\204\","ä","¸","»","ä","½","\223\","(","è","¿","\231\","ä","¸","ªæ","¦","\202\","å","¿","µå","\234\","¨","è","¿","\231\","é","\207\","\214\","è","¦","\201\","ç","¬","¦","å","\220\","\210\","è","¿","\231\","ä","¸","ªå","®","\232\","ä","¹","\211\","æ","\227\","¶","æ","\211\","\215\","è","\203\","½","ç","®","\227\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªæ","´","\236\",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428403).
lisp_trans(=>(hole(HOLE,OBJ),connected(HOLE,OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428691).
lisp_trans(=>(and(tSumoHole(HOLE1),properPart(HOLE2,HOLE1)),exists([OBJ],and(meetsSpatially(HOLE1,OBJ),not(meetsSpatially(HOLE2,OBJ))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428742).
lisp_trans(vtShapeAttribute(tSumoFillable),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428926).
lisp_trans(documentation(tSumoFillable,vEnglishLanguage,s("Something","is","#$Fillable","if","it","can","be","filled","by","something","else",".","Note","that","'","filled","'","here","means","perfectly","filled",".","Something","is","fillable","just","in","case","it","is","part","of","a","hole",",","i",".","e",".",",","fillability","is","an","exclusive","property","of","holes","and","their","parts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':428961).
lisp_trans(documentation(tSumoFillable,xtChineseLanguage,s("å","¦","\202\","æ","\236\","\234\","è","¯","´","ä","¸","\200\","æ","\240\","·","ä","¸","\234\","è","¥","¿","æ","\230\","¯","#$Fillableï","¼","\214\","è","¿","\231\","ä","¸","ªä","¸","\234\","è","¥","¿","å","°","±","æ","\230\","¯","å","\217\","¯","ä","»","¥","ç","\224\","±","æ","\237\","\220\","äº","\233\","å","\205\","¶","ä","»","\226\","ç","\232\","\204\","ä","¸","\234\","è","¥","¿","æ","\235\","¥","æ","\235\","¥","å","¡","«","æ","»","¡","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","'","å","¡","«","æ","»","¡","'","å","\234\","¨","è","¿","\231\","é","\207\","\214\","æ","\230\","¯","æ","\214\","\207\","å","®","\214\","å","\205\","¨","ç","\232\","\204\","å","¡","«","æ","»","¡","ï","¼","\214\","æ","\237\","\220\","æ","\240\","·","ä","¸","\234\","è","¥","¿","æ","\230\","¯","å","\217\","¯","å","¡","«","æ","»","¡","ï","¼","\214\","ä","»","¥","é","\230\","²","å","®","\203\","æ","\230\","¯","æ","´","\236\","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","å","\215\","³","æ","\230\","¯","å","\217\","¯","ä","»","¥","å","¡","«","æ","»","¡","è","¿","\231\","ä","¸","ªç","\211\","¹","æ","\200\","§","ï","¼","\214\","æ","\230\","¯","æ","´","\236\","å","\222\","\214\","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ç","\213\","¬","æ","\234\","\211\","ç","\232\","\204\","ç","\211\","¹","æ","\200\","§","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429242).
lisp_trans(=>(exists([TIME],holdsDuring(TIME,fills(OBJ,HOLE))),sumoAttribute(HOLE,tSumoFillable)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429566).
lisp_trans(<=>(sumoAttribute(HOLE1,tSumoFillable),exists([HOLE2],and(tSumoHole(HOLE2),part(HOLE1,HOLE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429669).
lisp_trans(genlPreds(partiallyFills,located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429792).
lisp_trans(rtSpatialRelation(partiallyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429829).
lisp_trans(rtAsymmetricRelation(partiallyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429871).
lisp_trans(argIsa(partiallyFills,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429916).
lisp_trans(argIsa(partiallyFills,2,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429949).
lisp_trans(documentation(partiallyFills,vEnglishLanguage,s("(","#$partiallyFills","?","OBJ","?","HOLE",")","means","that","?","OBJ","#$completelyFills","some","part","of","?","HOLE",".","Note","that","if","(","#$partiallyFills","?","OBJ1","?","HOLE",")","and","(","#$part","?","OBJ1","?","OBJ2",")",",","then","(","#$partiallyFills","?","OBJ2","?","HOLE",")",".","Note","too","that","a","partial","filler","need","not","be","wholly","inside","a","hole","(","it","may","stick","out",")",",","which","means","that","every","complete","filler","also","qualifies","as","(","is","a","limit","case","of",")","a","partial","one",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':429980).
lisp_trans(documentation(partiallyFills,xtChineseLanguage,s("(","#$partiallyFills","?","OBJ","?","HOLE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","OBJ","#$completelyFills","?","HOLE","ç","\232\","\204\","æ","\237\","\220\","äº","\233\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","¦","\202\","æ","\236\","\234\","(","#$partiallyFills","?","OBJ1","?","HOLE",")","å","\222\","\214\","(","#$part","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$partiallyFills","?","OBJ2","?","HOLE",")","å","°","±","å","±","\236\","å","®","\236\","ã","\200\","\202\","å","\217\","¦","å","¤","\226\","ä","¹","\237\","è","¦","\201\","æ","³","¨","æ","\204\","\217\","ç","\232\","\204\","æ","\230\","¯","ï","¼","\214\","ä","¸","\200\","ä","¸","ªæ","\212\","\212\","æ","´","\236\","é","\203\","¨","å","\210\","\206\","å","¡","«","æ","»","¡","ç","\232\","\204\","ç","\211\","©","ä","½","\223\","ä","¸","\215\","é","\234\","\200\","è","¦","\201\","å","®","\214\","å","\205\","¨","å","\234\","¨","æ","´","\236\","å","\206\","\205\","(","å","®","\203\","å","\217\","¯","ä","»","¥","çª","\201\","å","\207\","ºæ","´","\236\","ç","\232\","\204\","å","¤","\226\","é","\235\","¢",")","ï","¼","\214\","å","\215\","³","æ","\230\","¯","æ","\211\","\200\","æ","\234\","\211\","è","\203\","½","å","¤","\237\","æ","\212\","\212\","æ","´","\236\","å","®","\214\","å","\205\","¨","å","¡","«","æ","»","¡","ç","\232\","\204\","ç","\211\","©","è","´","¨","ä","¹","\237\","å","\217\","¯","ç","¬","¦","å","\220\","\210\","ä","½","\234\","ä","¸","º","(","å","\234\","¨","æ","\234\","\211\","é","\231\","\220\","ç","\232\","\204\","æ","\203\","\205\","å","\206\","µä","¸","\213\",")","ä","¸","\200\","ä","¸","ªæ","\212\","\212\","æ","´","\236\","é","\203\","¨","å","\210\","\206\","å","¡","«","æ","»","¡","ç","\232\","\204\","ç","\211\","©","è","´","¨","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':430397).
lisp_trans(=>(partiallyFills(OBJ,HOLE1),exists([HOLE2],and(part(HOLE2,HOLE1),completelyFills(OBJ,HOLE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':430901).
lisp_trans(rtAsymmetricRelation(properlyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431031).
lisp_trans(genlPreds(properlyFills,partiallyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431075).
lisp_trans(argIsa(properlyFills,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431118).
lisp_trans(argIsa(properlyFills,2,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431150).
lisp_trans(documentation(properlyFills,vEnglishLanguage,s("(","#$properlyFills","?","OBJ","?","HOLE",")","means","that","?","HOLE","is","properly","(","though","perhaps","incompletely",")","filled","by","?","OBJ",",","i",".","e",".","some","part","of","?","HOLE","is","perfectly","filled","by","?","OBJ",".","Note","that","#$properlyFills","is","the","dual","of","#$completelyFills",",","and","is","so","related","to","#$partiallyFills","that","?","OBJ","#$properlyFills","?","HOLE","just","in","case","?","OBJ","#$partiallyFills","every","part","of","?","HOLE",".","(","Thus",",","every","perfect","filler","is","both","complete","and","proper","in","this","sense",")",".","Every","hole","is","connected","with","everything","with","which","a","proper","filler","of","the","hole","is","connected",".","Every","proper","part","of","a","perfect","filler","of","(","a","part","of",")","a","hole","properly","fills","(","that","part","of",")","that","hole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431180).
lisp_trans(documentation(properlyFills,xtChineseLanguage,s("(","#$properlyFills","?","OBJ","?","HOLE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","HOLE","æ","\230\","¯","ç","\234\","\237\","æ","­","£","ç","\232\","\204\","(","ä","½","\206\","å","\217\","¯","è","\203\","½","ä","¸","\215\","æ","\230\","¯","å","\205\","¨","é","\203\","¨","ç","\232\","\204\",")","è","¢","«","?","OBJ","å","¡","«","å","\205\","\205\","äº","\206\","ï","¼","\214\","å","\215\","³","æ","\230\","¯","?","HOLE","ç","\232\","\204\","æ","\237\","\220\","äº","\233\","é","\203\","¨","å","\210\","\206\","è","¢","«","?","OBJ","å","®","\214\","ç","¾","\216\","ç","\232\","\204\","å","¡","«","å","\205\","\205\","äº","\206\","ã","\200\","\202\","æ","³","¨","ï","¼","\232\","#$properlyFills","å","\222\","\214\","#$completelyFills","æ","\230\","¯","æ","\210\","\220\","å","\217\","\214\","ç","\232\","\204\","ï","¼","\214\","å","\233\","\240\","æ","­","¤","å","®","\203\","ä","¹","\237\","å","\222\","\214\","#$partiallyFills","ç","\233\","¸","å","\205\","³","ï","¼","\214\","ä","¸","\200\","ä","¸","ª","?","OBJ","ä","¼","\232\","#$properlyFills","?","HOLEï","¼","\214\","ä","»","¥","é","\230\","²","è","¿","\231\","ä","¸","ª","?","OBJ","#$partiallyFills","è","¿","\231\","ä","¸","ª","?","HOLE","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªé","\203\","¨","å","\210\","\206\","(","æ","\225\","\205\","æ","­","¤","ï","¼","\214\","å","\234\","¨","æ","\204\","\217\","ä","¹","\211\","ä","¸","\212\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªæ","\212\","\212\","æ","´","\236\","å","®","\214\","ç","¾","\216\","å","¡","«","å","\205\","\205\","ç","\232\","\204\","ç","\211\","©","è","´","¨","æ","\230\","¯","æ","\227\","¢","å","®","\214\","æ","\225\","´","å","\217\","\210\","é","\200\","\202\","å","½","\223\","ç","\232\","\204\",")","ã","\200\","\202\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªæ","´","\236\","å","\222\","\214\","è","\201\","\224\","ç","³","»","è","¿","\231\","ä","¸","ªæ","´","\236\","ç","\232\","\204\","é","\200\","\202\","å","½","\223\","å","¡","«","å","\205\","\205\","ç","\211\","©","è","´","¨","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\234\","è","¥","¿","ç","\233\","¸","è","¿","\236\","ï","¼","\214\","ä","¸","\200\","ä","¸","ªæ","´","\236\","(","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\",")","ç","\232\","\204\","å","®","\214\","ç","¾","\216\","å","¡","«","å","\205\","\205\","ç","\211\","©","è","´","¨","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªé","\200\","\202\","å","½","\223\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ï","¼","\214\","é","\200\","\202\","å","½","\223\","ç","\232\","\204\","å","¡","«","å","\205\","\205\","è","¿","\231\","ä","¸","ªæ","´","\236\","(","å","®","\203\","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\",")","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':431840).
lisp_trans(=>(properlyFills(OBJ,HOLE1),exists([HOLE2],and(part(HOLE2,HOLE1),fills(OBJ,HOLE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':432544).
lisp_trans(rtAsymmetricRelation(completelyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':432663).
lisp_trans(genlPreds(completelyFills,partiallyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':432709).
lisp_trans(documentation(completelyFills,vEnglishLanguage,s("(","#$completelyFills","?","OBJ","?","HOLE",")","means","that","some","#$part","of","the","#$Object","?","OBJ","fills","the","#$Hole","?","HOLE",".","Note","that","if","(","#$completelyFills","?","OBJ1","?","HOLE",")","and","(","#$part","?","OBJ1","?","OBJ2",")",",","then","(","#$completelyFills","?","OBJ2","?","HOLE",")",".","A","complete","filler","of","(","a","part","of",")","a","hole","is","connected","with","everything","with","which","(","that","part","of",")","the","hole","itself","is","connected",".","A","perfect","filler","of","(","a","part","of",")","a","hole","completely","fills","every","proper","part","of","(","that","part","of",")","that","hole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':432754).
lisp_trans(documentation(completelyFills,xtChineseLanguage,s("(","#$completelyFills","?","OBJ","?","HOLE",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","#$Object","?","OBJ","ç","\232\","\204\","ä","¸","\200\","äº","\233\","#$part","å","¡","«","å","\205\","\205\","äº","\206\","#$Hole","?","HOLEã","\200\","\202\","æ","³","¨","ï","¼","\232\","å","¦","\202\","æ","\236\","\234\","æ","\230\","¯","(","#$completelyFills","?","OBJ1","?","HOLE",")","å","\222\","\214\","(","#$part","?","OBJ1","?","OBJ2",")","ç","\232\","\204\","è","¯","\235\","ï","¼","\214\","é","\202\","£","ä","¹","\210\","(","#$completelyFills","?","OBJ2","?","HOLE",")","å","°","±","å","±","\236\","å","®","\236\","ã","\200\","\202\","è","\203\","½","å","¤","\237\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ªæ","´","\236\","(","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\",")","å","®","\214\","å","\205\","¨","å","¡","«","æ","»","¡","ç","\232\","\204\","ç","\211\","©","è","´","¨","ä","¼","\232\","å","\222\","\214\","è","¿","\231\","ä","¸","ªæ","´","\236\","(","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\",")","ç","\233\","¸","å","\205\","³","ç","\232\","\204\","æ","\211\","\200\","æ","\234\","\211\","ä","¸","\234\","è","¥","¿","ç","\233\","¸","è","¿","\236\","ã","\200\","\202\","è","\203\","½","å","¤","\237\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ªæ","´","\236\","(","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\",")","å","®","\214\","ç","¾","\216\","ç","\232\","\204\","å","¡","«","å","\205\","\205\","ç","\232\","\204\","ç","\211\","©","è","´","¨","ï","¼","\214\","ä","¼","\232\","å","¡","«","æ","»","¡","è","¿","\231\","ä","¸","ªæ","´","\236\","(","å","®","\203\","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\",")","ç","\232\","\204\","æ","¯","\217\","ä","¸","\200\","ä","¸","ªç","\234\","\237\","æ","­","£","ç","\232\","\204\","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433240).
lisp_trans(=>(completelyFills(OBJ1,HOLE),exists([OBJ2],and(part(OBJ2,OBJ1),fills(OBJ2,HOLE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433754).
lisp_trans(rtAsymmetricRelation(fills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433872).
lisp_trans(genlPreds(fills,completelyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433908).
lisp_trans(genlPreds(fills,properlyFills),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433944).
lisp_trans(argIsa(fills,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':433978).
lisp_trans(argIsa(fills,2,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434002).
lisp_trans(relatedInternalConcept(fills,tSumoFillable),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434024).
lisp_trans(documentation(fills,vEnglishLanguage,s("Holes","can","be","filled",".","(","#$fills","?","OBJ","?","HOLE",")","means","that","the","#$Object","?","OBJ","fills","the","#$Hole","?","HOLE",".","Note","that","#$fills","here","means","perfectly","filled",".","Perfect","fillers","and","fillable","entities","have","no","parts","in","common","(","rather",",","they","may","occupy","the","same","spatial","region",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434064).
lisp_trans(documentation(fills,xtChineseLanguage,s("Holes","can","be","filled",".","(","#$fills","?","OBJ","?","HOLE",")","means","that","the","#$Object","?","OBJ","fills","the","#$Hole","?","HOLE",".","Note","that","#$fills","here","means","perfectly","filled",".","Perfect","fillers","and","fillable","entities","have","no","parts","in","common","(","rather",",","they","may","occupy","the","same","spatial","region",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434362).
lisp_trans(=>(and(fills(OBJ1,HOLE),sumoAttribute(OBJ2,tSumoFillable)),not(overlapsSpatially(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434663).
lisp_trans(=>(completelyFills(OBJ1,HOLE),all([OBJ2],=>(connected(OBJ2,HOLE),connected(OBJ2,OBJ1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434776).
lisp_trans(=>(and(properlyFills(OBJ1,HOLE),connected(OBJ2,OBJ1)),connected(HOLE,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':434913).
lisp_trans(=>(and(fills(OBJ,HOLE1),properPart(HOLE2,HOLE1)),completelyFills(OBJ,HOLE2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435013).
lisp_trans(=>(and(fills(OBJ1,HOLE),properPart(OBJ2,OBJ1)),properlyFills(OBJ2,HOLE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435114).
lisp_trans(rtSpatialRelation(uHoleSkinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435211).
lisp_trans(rtUnaryFunction(uHoleSkinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435249).
lisp_trans(rtTotalValuedRelation(uHoleSkinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435285).
lisp_trans(rtAsymmetricRelation(uHoleSkinFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435327).
lisp_trans(argIsa(uHoleSkinFn,1,tSumoHole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435368).
lisp_trans(resultIsa(uHoleSkinFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435395).
lisp_trans(documentation(uHoleSkinFn,vEnglishLanguage,s("A","#$UnaryFunction","that","maps","a","#$Hole","to","the","skin","of","the","#$Hole",".","The","skin","of","a","#$Hole","is","the","fusion","of","those","superficial","parts","(","see","#$superficialPart",")","of","the","#$Hole","'s","principal","host","(","see","#$HoleHostFn",")","with","which","the","#$Hole","is","externally","connected",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435421).
lisp_trans(documentation(uHoleSkinFn,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$UnaryFunctionï","¼","\214\","å","®","\203\","æ","\212\","\212\","ä","¸","\200\","ä","¸","ª","#$Hole","å","\222\","\214\","#$Hole","ç","\232\","\204\","è","¡","¨","å","±","\202\","è","\201\","\224\","ç","³","»","ã","\200\","\202\","ä","¸","\200\","ä","¸","ª","#$Hole","ç","\232\","\204\","è","¡","¨","å","±","\202\","æ","\230\","¯","è","¿","\231\","ä","¸","ª","#$Hole","ç","\232\","\204\","ä","¸","»","è","¦","\201\","ä","¸","»","ä","½","\223\","(","è","§","\201\","#$HoleHostFn",")","å","\222\","\214\","è","¿","\231\","ä","¸","ª","#$Hole","waibu","ç","\233\","¸","è","¿","\236\","ç","\232\","\204\","è","¡","¨","å","±","\202\","é","\203\","¨","å","\210\","\206\","(","è","§","\201\","#$superficialPart",")","æ","\211\","\200\","è","\236\","\215\","å","\220\","\210\","è","\200\","\214\","æ","\210\","\220\","ç","\232\","\204\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':435715).
lisp_trans(=>(equal(OBJ1,uHoleSkinFn(HOLE)),all([OBJ2],<=>(overlapsSpatially(OBJ2,OBJ1),exists([OBJ3],and(superficialPart(OBJ3,uHoleHostFn(HOLE)),meetsSpatially(HOLE,OBJ3),overlapsSpatially(OBJ2,OBJ3)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436006).
lisp_trans(rtBinaryPredicate(subProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436459).
lisp_trans(rtPartialOrderingRelation(subProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436497).
lisp_trans(argIsa(subProcess,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436543).
lisp_trans(argIsa(subProcess,2,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436573).
lisp_trans(documentation(subProcess,vEnglishLanguage,s("(","#$subProcess","?","SUBPROC","?","PROC",")","means","that","?","SUBPROC","is","a","subprocess","of","?","PROC",".","A","subprocess","is","here","understood","as","a","temporally","distinguished","part","(","proper","or","not",")","of","a","#$Process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436603).
lisp_trans(documentation(subProcess,xtChineseLanguage,s("(","#$subProcess","?","SUBPROC","?","PROC",")","ç","\232\","\204\","æ","\204\","\217\","æ","\200\","\235\","æ","\230\","¯","?","SUBPROC","æ","\230\","¯","?","PROC","ç","\232\","\204\","å","­","\220\","è","¿","\207\","ç","¨","\213\","ã","\200\","\202\","å","\234\","¨","è","¿","\231\","é","\207\","\214\","ï","¼","\214\","ä","¸","\200\","ä","¸","ªå","­","\220\","è","¿","\207\","ç","¨","\213\","å","\217\","¯","ä","»","¥","ç","\220\","\206\","è","§","£","ä","¸","ºä","¸","\200\","ä","¸","ª","#$Process","æ","\232\","\202\","æ","\227\","¶","å","\217\","¯","å","\214\","ºå","\210\","\206\","ç","\232\","\204\","(","ç","\234\","\237\","æ","\225\","´","æ","\210\","\226\","é","\235\","\236\","ç","\234\","\237\","æ","\225\","´","ç","\232\","\204\",")","é","\203\","¨","å","\210\","\206\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':436825).
lisp_trans(=>(subProcess(SUBPROC,PROC),temporalPart(uWhenFn(SUBPROC),uWhenFn(PROC))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':437057).
lisp_trans(genls(eventBiologicalProcess,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':437751).
lisp_trans(documentation(eventBiologicalProcess,vEnglishLanguage,s("A","#$Process","embodied","in","an","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':437795).
lisp_trans(documentation(eventBiologicalProcess,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªä","½","\223\","ç","\216\","°","å","\234\","¨","ä","¸","\200\","ä","¸","ª","#$Organism","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':437886).
lisp_trans(=>(eventBiologicalProcess(PROC),exists([OBJ],and(tSumoOrganism(OBJ),eventLocated(PROC,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':437995).
lisp_trans(=>(and(eventBiologicalProcess(PROC),experiencer(PROC,ORG)),tSumoOrganism(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438139).
lisp_trans(genls(actPhysiologicProcess,eventBiologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438254).
lisp_trans(documentation(actPhysiologicProcess,vEnglishLanguage,s("A","normal","process","of","an","#$Organism","or","part","of","an","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438302).
lisp_trans(documentation(actPhysiologicProcess,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Organism","æ","\210\","\226\","è","\200\","\205\","æ","\230\","¯","ä","¸","\200\","ä","¸","ª","#$Organism","ç","\232\","\204\","ä","¸","\200\","é","\203\","¨","å","\210\","\206\","ç","\232\","\204\","ä","¸","\200\","ä","¸","ªæ","­","£","å","¸","¸","è","¿","\207\","ç","¨","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438415).
lisp_trans(genls(actAutonomicProcess,actPhysiologicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438557).
lisp_trans(disjointWith(actAutonomicProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438604).
lisp_trans(documentation(actAutonomicProcess,vEnglishLanguage,s("The","class","of","#$PhysiologicProcesses","of","which","there","is","not","conscious","awareness","and","control",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438651).
lisp_trans(documentation(actAutonomicProcess,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$PhysiologicProcesses","ç","\232\","\204\","ç","±","»","å","\210\","«","ï","¼","\214\","è","¿","\231\","äº","\233\","è","¿","\207\","ç","¨","\213\","é","\203\","½","æ","²","¡","æ","\234\","\211\","æ","\204\","\217\","è","¯","\206\","å","\222\","\214\","æ","\216\","§","å","\210\","¶","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438793).
lisp_trans(genls(actOrganOrTissueProcess,actAutonomicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438928).
lisp_trans(disjointWith(actOrganOrTissueProcess,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':438977).
lisp_trans(documentation(actOrganOrTissueProcess,vEnglishLanguage,s("A","#$PhysiologicProcess","of","a","particular","#$Organ","or","#$Tissue",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439025).
lisp_trans(documentation(actOrganOrTissueProcess,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","ä","¸","\200\","ä","¸","ªç","\211\","¹","å","®","\232\","#$Organ","æ","\210\","\226\","#$Tissue","ç","\232\","\204\","#$PhysiologicProcessã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439140).
lisp_trans(=>(actOrganOrTissueProcess(PROC),exists([THING],and(eventLocated(PROC,THING),or(tPartTypeOrgan(THING),tSumoTissue(THING))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439264).
lisp_trans(genls(actOrganismProcess,actPhysiologicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439486).
lisp_trans(documentation(actOrganismProcess,vEnglishLanguage,s("A","physiologic","function","of","the","#$Organism","as","a","whole",",","of","multiple","organ","systems","or","of","multiple","#$Organs","or","#$Tissues",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439532).
lisp_trans(documentation(actOrganismProcess,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","\225\","´","ä","¸","ª","#$Organismã","\200\","\201\","å","¤","\232\","ä","¸","ªå","\231\","¨","å","®","\230\","ç","³","»","ç","»","\237\","æ","\210\","\226\","å","¤","\232\","ä","¸","ª","#$Organs","æ","\210\","\226\","#$Tissues","ç","\232\","\204\","ä","¸","\200\","ç","§","\215\","ç","\224\","\237\","ç","\220\","\206\","å","\212\","\237\","è","\203\","½","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439699).
lisp_trans(genls(tSumoBirth,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439852).
lisp_trans(documentation(tSumoBirth,vEnglishLanguage,s("The","#$Process","of","being","born",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439885).
lisp_trans(documentation(tSumoBirth,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\207\","ºç","\224\","\237\","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':439954).
lisp_trans(=>(and(tSumoBirth(BIRTH),experiencer(BIRTH,AGENT)),exists([DEATH],and(tSumoDeath(DEATH),experiencer(DEATH,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':440111).
lisp_trans(genls(tSumoDeath,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':440293).
lisp_trans(documentation(tSumoDeath,vEnglishLanguage,s("The","#$Process","of","dying",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':440326).
lisp_trans(documentation(tSumoDeath,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","æ","­","»","äº","¡","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':440390).
lisp_trans(=>(and(tSumoDeath(DEATH),tSumoOrganism(ORG),experiencer(DEATH,ORG)),exists([REM],and(result(DEATH,REM),tSumoOrganicObject(REM),holdsDuring(eventFutureFn(uWhenFn(DEATH)),sumoAttribute(REM,tDead)),=>(holdsDuring(uImmediateFutureFn(uWhenFn(DEATH)),part(OBJ,REM)),holdsDuring(uImmediatePastFn(uWhenFn(DEATH)),part(OBJ,ORG)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':440979).
lisp_trans(genls(actBreathing,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441427).
lisp_trans(genls(actBreathing,actAutonomicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441464).
lisp_trans(documentation(actBreathing,vEnglishLanguage,s("The","#$Process","of","respiration",",","by","which","oxygen","is","made","available","to","an","#$Animal",".","This","covers","processes","of","inhalation",",","exhalation",",","and","alternations","between","the","two",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441502).
lisp_trans(documentation(actBreathing,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","å","\221\","¼","å","\220\","¸","ç","\232\","\204\","#$Processï","¼","\214\","#$Animal","é","\200\","\232\","è","¿","\207\","è","¿","\231\","è","¿","\207\","ç","¨","\213\","å","\217\","\226\","å","¾","\227\","æ","°","§","æ","°","\224\","ã","\200\","\202\","è","¿","\231\","å","\214\","\205\","æ","\213\","¬","å","\220\","¸","å","\205\","¥","ã","\200\","\201\","å","\221\","¼","å","\207\","ºæ","°","§","æ","°","\224\","å","\222\","\214\","ä","¸","¤","è","\200\","\205\","ç","\232\","\204\","ä","¸","\215\","æ","\226\","­","äº","¤","æ","\233\","¿","ç","\232\","\204\","è","¿","\207\","ç","¨","\213\","ã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441710).
lisp_trans(genls(actIngesting,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441890).
lisp_trans(documentation(actIngesting,vEnglishLanguage,s("The","#$Process","by","which","food","is","taken","into","an","#$Animal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':441927).
lisp_trans(documentation(actIngesting,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Animal","è","¿","\233\","é","£","\237\","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442028).
lisp_trans(=>(and(actIngesting(ACT),resource(ACT,FOOD)),isa(FOOD,uFoodForFn(tSumoOrganism))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442112).
lisp_trans(genls(actEating,actIngesting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442228).
lisp_trans(documentation(actEating,vEnglishLanguage,s("The","#$Process","by","which","solid","food","is","incorporated","into","an","#$Animal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442256).
lisp_trans(documentation(actEating,xtChineseLanguage,s("è","¿","\231\","æ","\230\","¯","#$Animal","æ","\221\","\204\","å","\205\","¥","å","\233\","ºä","½","\223\","é","£","\237\","ç","\211\","©","ç","\232\","\204\","#$Processã","\200\","\202\")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442365).
lisp_trans(=>(and(actEating(ACT),resource(ACT,FOOD)),sumoAttribute(FOOD,tSumoSolid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442458).
lisp_trans(genls(actDrinking,actIngesting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442557).
lisp_trans(documentation(actDrinking,vEnglishLanguage,s("The","#$Process","by","which","liquid","food",",","i",".","e",".","#$Beverages",",","are","incorporated","into","an","#$Animal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442587).
lisp_trans(=>(and(actDrinking(ACT),resource(ACT,FOOD)),sumoAttribute(FOOD,tSumoLiquid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442720).
lisp_trans(genls(actDigesting,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442822).
lisp_trans(genls(actDigesting,actAutonomicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442859).
lisp_trans(documentation(actDigesting,vEnglishLanguage,s("The","#$Process","by","which","#$Food","that","has","been","ingested","is","broken","down","into","simpler","chemical","compounds","and","absorbed","by","the","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':442897).
lisp_trans(=>(and(actDigesting(DIGEST),agent(DIGEST,ORGANISM)),exists([INGEST],and(actIngesting(INGEST),agent(INGEST,ORGANISM),overlapsTemporally(uWhenFn(INGEST),uWhenFn(DIGEST))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443074).
lisp_trans(=>(actDigesting(DIGEST),exists([DECOMP],and(eventChemicalDecomposition(DECOMP),subProcess(DECOMP,DIGEST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443327).
lisp_trans(genls(tSumoGrowth,actAutonomicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443487).
lisp_trans(documentation(tSumoGrowth,vEnglishLanguage,s("The","#$Process","of","biological","development","in","which","an","#$Organism","or","part","of","an","#$Organism","changes","its","form","or","its","size",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443522).
lisp_trans(genls(actReplication,actOrganismProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443682).
lisp_trans(documentation(actReplication,vEnglishLanguage,s("The","#$Process","of","biological","reproduction",".","This","can","be","either","a","sexual","or","an","asexual","process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443721).
lisp_trans(=>(and(actReplication(REP),agent(REP,PARENT),result(REP,CHILD)),parent(CHILD,PARENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443861).
lisp_trans(=>(actReplication(REP),exists([BODY],and(tSumoReproductiveBody(BODY),result(REP,BODY)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':443991).
lisp_trans(genls(actSexualReproduction,actReplication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444132).
lisp_trans(disjointWith(actSexualReproduction,actAsexualReproduction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444174).
lisp_trans(documentation(actSexualReproduction,vEnglishLanguage,s("Sexual","#$Processes","of","biological","reproduction",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444224).
lisp_trans(=>(and(actSexualReproduction(REP),result(REP,ORGANISM)),exists([MOTHER,FATHER],and(mother(ORGANISM,MOTHER),father(ORGANISM,FATHER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444325).
lisp_trans(genls(actAsexualReproduction,actReplication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444525).
lisp_trans(documentation(actAsexualReproduction,vEnglishLanguage,s("Asexual","#$Processes","of","biological","reproduction",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444568).
lisp_trans(=>(and(actAsexualReproduction(REP),result(REP,ORGANISM),parent(ORGANISM,PARENT1),parent(ORGANISM,PARENT2)),equal(PARENT1,PARENT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':444998).
lisp_trans(genls(actPsychologicalProcess,eventBiologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445172).
lisp_trans(documentation(actPsychologicalProcess,vEnglishLanguage,s("A","#$BiologicalProcess","which","takes","place","in","the","mind","or","brain","of","an","#$Organism","and","which","may","be","manifested","in","the","behavior","of","the","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445222).
lisp_trans(=>(actPsychologicalProcess(PROCESS),exists([ANIMAL],and(tClazzAnimal(ANIMAL),experiencer(PROCESS,ANIMAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445419).
lisp_trans(genls(actPathologicProcess,eventBiologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445588).
lisp_trans(disjointWith(actPathologicProcess,actPhysiologicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445635).
lisp_trans(documentation(actPathologicProcess,vEnglishLanguage,s("A","disordered","process",",","activity",",","or","state","of","the","#$Organism","as","a","whole",",","of","a","body","system","or","systems",",","or","of","multiple","#$Organs","or","#$Tissues",".","Included","here","are","normal","responses","to","a","negative","stimulus","as","well","as","patholologic","conditions","or","states","that","are","less","specific","than","a","disease",".","Pathologic","functions","frequently","have","systemic","effects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':445683).
lisp_trans(=>(and(actPathologicProcess(PATH),experiencer(PATH,ORG)),exists([PART,DISEASE],and(part(PART,ORG),tSumoDiseaseOrSyndrome(DISEASE),sumoAttribute(PART,DISEASE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446071).
lisp_trans(genls(actInjuring,actPathologicProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446309).
lisp_trans(genls(actInjuring,actDamaging),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446347).
lisp_trans(documentation(actInjuring,vEnglishLanguage,s("The","process","of","creating","a","traumatic","wound","or","injury",".","Since","#$Injuring","is","not","possible","without","some","biologic","function","of","the","organism","being","injured",",","it","is","a","subclass","of","#$BiologicalProcess",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446376).
lisp_trans(=>(actInjuring(INJ),exists([STRUCT],and(tSumoAnatomicalStructure(STRUCT),patient(INJ,STRUCT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446610).
lisp_trans(<=>(actInjuring(INJ),and(actDamaging(INJ),exists([ORGANISM],and(tSumoOrganism(ORGANISM),patient(INJ,ORGANISM))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446768).
lisp_trans(genls(statePoisoning,actInjuring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446964).
lisp_trans(documentation(statePoisoning,vEnglishLanguage,s("A","#$Poisoning","is","caused","by","an","external","substance",".","Since","#$Poisoning","is","not","possible","without","some","biologic","function","which","affects","the","#$Organism","being","injured",",","it","is","a","subclass","of","#$BiologicalProcess",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':446994).
lisp_trans(=>(statePoisoning(POISON),exists([THING],and(patient(POISON,THING),or(tSumoOrganism(THING),tSumoAnatomicalStructure(THING))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447240).
lisp_trans(=>(statePoisoning(POISON),exists([SUBSTANCE],and(tSumoBiologicallyActiveSubstance(SUBSTANCE),instrument(POISON,SUBSTANCE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447466).
lisp_trans(documentation(actNaturalProcess,vEnglishLanguage,s("A","#$Process","that","take","place","in","nature","spontanously",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447631).
lisp_trans(genls(actNaturalProcess,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447732).
lisp_trans(disjointWith(actNaturalProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447766).
lisp_trans(genls(actIntentionalProcess,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447812).
lisp_trans(documentation(actIntentionalProcess,vEnglishLanguage,s("A","#$Process","that","has","a","specific","purpose","for","the","#$Agent","who","performs","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447850).
lisp_trans(=>(and(actIntentionalProcess(PROC),agent(PROC,AGENT)),exists([PURP],hasPurposeForAgent(PROC,PURP,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':447977).
lisp_trans(=>(actIntentionalProcess(PROC),exists([AGENT],and(mobCognitiveAgent(AGENT),agent(PROC,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448127).
lisp_trans(=>(and(actIntentionalProcess(PROC),agent(PROC,HUMAN),tClazzAnimal(HUMAN)),holdsDuring(uWhenFn(PROC),sumoAttribute(HUMAN,mobAwake))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448277).
lisp_trans(genls(actIntentionalPsychologicalProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448449).
lisp_trans(genls(actIntentionalPsychologicalProcess,actPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448511).
lisp_trans(documentation(actIntentionalPsychologicalProcess,vEnglishLanguage,s("An","#$IntentionalProcess","that","can","be","realized","entirely","within","the","mind","or","brain","of","an","#$Organism",".","Thus",",","for","example",",","#$Reasoning","is","a","subclass","of","#$IntentionalPsychologicalProcess",",","because","one","can","reason","simply","by","exercising","one","'s","mind","/","brain",".","On","the","other","hand",",","#$RecreationOrExercise","is","not","a","subclass","of","#$IntentionalPsychologicalProcess",",","because","many","instances","of","#$RecreationOrExercise","necessarily","have","#$subProcesses","of","#$BodyMotion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':448575).
lisp_trans(genls(tSumoRecreationOrExercise,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':449082).
lisp_trans(documentation(tSumoRecreationOrExercise,vEnglishLanguage,s("A","#$Process","that","is","carried","out","for","the","purpose","of","recreation","or","exercise",".","Since","#$RecreationOrExercise","is","a","subclass","of","#$IntentionalProcess",",","the","intent","of","a","process","determines","whether","or","not","it","is","an","instance","of","the","class",".","Hence",",","if","John","and","Bill","watch","the","same","program","on","television",",","and","John","watches","it","to","relax","while","Bill","watches","it","solely","to","satisfy","an","educational","requirement",",","then","John","'s","watching","the","movie","is","an","instance","of","#$RecreationOrExercise",",","while","Bill","'s","is","not","(","both","cases","of","watching","the","television","program","would","however","be","in","the","class","of","#$Seeing",",","since","being","an","instance","of","this","latter","class","is","not","determined","by","intention",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':449133).
lisp_trans(genls(actOrganizationalProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':449836).
lisp_trans(documentation(actOrganizationalProcess,vEnglishLanguage,s("An","#$IntentionalProcess","that","involves","an","#$Organization",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':449888).
lisp_trans(=>(and(actOrganizationalProcess(ACT),agent(ACT,AGENT)),or(tGroupedOrganization(AGENT),exists([ORG],and(tGroupedOrganization(ORG),member(AGENT,ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450002).
lisp_trans(genls(actElection,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450243).
lisp_trans(documentation(actElection,vEnglishLanguage,'Election is the class of events conducted by an organization, in which qualified participants vote for officers, adopt resolutions, or settle other issues in that #$Organization.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450285).
lisp_trans(genls(actReligiousProcess,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450510).
lisp_trans(documentation(actReligiousProcess,vEnglishLanguage,s("An","#$OrganizationalProcess","that","is","carried","out","within","or","by","a","#$ReligiousOrganization",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450560).
lisp_trans(=>(and(actReligiousProcess(ACT),agent(ACT,AGENT)),or(tGroupedReligiousOrganization(AGENT),exists([ORG],and(member(AGENT,ORG),tGroupedReligiousOrganization(ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450699).
lisp_trans(genls(actJoiningAnOrganization,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':450953).
lisp_trans(documentation(actJoiningAnOrganization,vEnglishLanguage,s("The","#$OrganizationalProcess","of","becoming","a","#$member","of","an","#$Organization",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451008).
lisp_trans(=>(and(actJoiningAnOrganization(JOIN),tGroupedOrganization(ORG),agent(JOIN,PERSON),patient(JOIN,ORG)),and(holdsDuring(uBeginFn(uWhenFn(JOIN)),not(member(PERSON,ORG))),holdsDuring(iTimeOf_EndFn(uWhenFn(JOIN)),member(PERSON,ORG)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451138).
lisp_trans(genls(actLeavingAnOrganization,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451435).
lisp_trans(disjointWith(actLeavingAnOrganization,actJoiningAnOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451490).
lisp_trans(documentation(actLeavingAnOrganization,vEnglishLanguage,s("The","#$OrganizationalProcess","of","leaving","an","#$Organization",",","whether","voluntarily","or","involuntarily",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451545).
lisp_trans(=>(and(actLeavingAnOrganization(LEAVE),tGroupedOrganization(ORG),agent(LEAVE,PERSON),patient(LEAVE,ORG)),and(holdsDuring(uBeginFn(uWhenFn(LEAVE)),member(PERSON,ORG)),holdsDuring(iTimeOf_EndFn(uWhenFn(LEAVE)),not(member(PERSON,ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':451698).
lisp_trans(genls(actGraduation,actLeavingAnOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452000).
lisp_trans(documentation(actGraduation,vEnglishLanguage,s("The","#$OrganizationalProcess","of","graduating","from","an","#$EducationalOrganization",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452044).
lisp_trans(=>(and(actGraduation(GRAD),agent(GRAD,ORG)),tGroupedEducationalOrganization(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452167).
lisp_trans(genls(actMatriculation,actJoiningAnOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452278).
lisp_trans(documentation(actMatriculation,vEnglishLanguage,s("The","#$OrganizationalProcess","of","joining","an","#$EducationalOrganization","as","a","student",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452325).
lisp_trans(=>(and(actMatriculation(MAT),agent(MAT,ORG)),tGroupedEducationalOrganization(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452456).
lisp_trans(genls(actHiring,actJoiningAnOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452568).
lisp_trans(documentation(actHiring,vEnglishLanguage,'OrganizationalProcesses where someone is made an employee of an #$Organization.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452608).
lisp_trans(=>(and(actHiring(HIRE),tGroupedOrganization(ORG),agent(HIRE,ORG),patient(HIRE,PERSON)),and(holdsDuring(uBeginFn(uWhenFn(HIRE)),not(employs(ORG,PERSON))),holdsDuring(iTimeOf_EndFn(uWhenFn(HIRE)),employs(ORG,PERSON)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':452732).
lisp_trans(genls(tSumoTerminatingEmployment,actLeavingAnOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453016).
lisp_trans(documentation(tSumoTerminatingEmployment,vEnglishLanguage,'OrganizationalProcesses where someone ceases to be an employee of an #$Organization.  Note that this covers being laid off, being fired, and voluntarily leaving a job.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453071).
lisp_trans(=>(and(tSumoTerminatingEmployment(FIRE),tGroupedOrganization(ORG),agent(FIRE,ORG),patient(FIRE,PERSON)),and(holdsDuring(uBeginFn(uWhenFn(FIRE)),employs(ORG,PERSON)),holdsDuring(iTimeOf_EndFn(uWhenFn(FIRE)),not(employs(ORG,PERSON))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453298).
lisp_trans(genls(actPoliticalProcess,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453597).
lisp_trans(documentation(actPoliticalProcess,vEnglishLanguage,s("An","#$OrganizationalProcess","carried","out","by",",","for","or","against","officially","constituted","governments",".","Some","examples","would","be","voting","on","proposed","legislation",",","electing","a","government","representative",",","or","even","overthrowing","a","government","in","a","revolution",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453647).
lisp_trans(=>(actPoliticalProcess(PROC),exists([POL],and(or(tSumoGovernment(POL),exists([GOV],and(tSumoGovernment(GOV),member(POL,GOV)))),or(agent(PROC,POL),patient(PROC,POL))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':453938).
lisp_trans(genls(actJudicialProcess,actPoliticalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454274).
lisp_trans(documentation(actJudicialProcess,vEnglishLanguage,s("Any","legal","proceeding","which","is","conducted","by","a","#$JudicialOrganization",".","Note","that","there","is","an","important","difference","between","the","concepts","#$LegalAction","and","#$JudicialProcess",".","The","former","refers","to","legal","claims","that","are","brought","by","a","plaintiff",",","e",".","g",".","law","suits",",","while","the","second","refers","to","trials","and","other","sorts","of","judicial","hearings","where","the","merits","of","a","#$LegalAction","are","decided",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454318).
lisp_trans(=>(and(actJudicialProcess(PROCESS),agent(PROCESS,ORG),tGroupedOrganization(ORG)),tGroupedJudicialOrganization(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454744).
lisp_trans(genls(tSumoLegalDecision,actJudicialProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454904).
lisp_trans(genls(tSumoLegalDecision,actDeclaring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454945).
lisp_trans(documentation(tSumoLegalDecision,vEnglishLanguage,s("A","decision","issued","by","a","court","with","respect","to","a","#$LegalAction",".","Note","that","a","#$LegalDecision","is","the","act","of","#$Declaring","a","decision","of","a","court",",","it","is","not","the","act","of","judge","or","jury","#$Deciding","the","merits","of","a","particular","#$LegalAction",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':454980).
lisp_trans(=>(tSumoLegalDecision(DECISION),exists([ACTION],and(actLegalAction(ACTION),refers(DECISION,ACTION)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455257).
lisp_trans(=>(tSumoLegalDecision(DECISION),exists([DECIDE],and(actDeciding(DECIDE),earlier(uWhenFn(DECIDE),uWhenFn(DECISION))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455411).
lisp_trans(genls(actMilitaryProcess,actPoliticalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455581).
lisp_trans(genls(actMilitaryProcess,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455625).
lisp_trans(documentation(actMilitaryProcess,vEnglishLanguage,s("Any","#$Process","that","is","carried","out","by","a","military","organization",".","Note","that","this","class","covers","#$Processes",",","e",".","g",".","military","operations",",","that","are","the","result","of","careful","planning",",","as","well","as","those","which","are","unscripted",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455674).
lisp_trans(genls(actRegulatoryProcess,actGuiding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455935).
lisp_trans(documentation(actRegulatoryProcess,vEnglishLanguage,s("an","#$Guiding","whose","aim","is","the","enforcement","of","rules","or","regulations",".","Note","the","key","differences","between","#$RegulatoryProcess","and","the","related","concept","#$Managing",".","The","latter","implies","a","long","-","term","relationship","between","a","single","manager","and","limited","number","of","agents","who","are","managed",",","while","the","former","implies","a","normative","standard","to","which","the","activities","of","the","regulated","are","referred",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':455972).
lisp_trans(genls(actManaging,actOrganizationalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':456399).
lisp_trans(genls(actManaging,actGuiding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':456441).
lisp_trans(documentation(actManaging,vEnglishLanguage,'OrganizationalProcesses that involve overseeing the activities of others.  Note the key differences between #$RegulatoryProcess and its sibling #$Managing.  The latter implies a long-term relationship between the manager and the managed, while the former implies a normative standard to which the activities of the regulated are referred.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':456469).
lisp_trans(genls(actPlanning,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':456854).
lisp_trans(documentation(actPlanning,vEnglishLanguage,s("Specifying","a","set","of","actions","in","order","to","meet","a","set","of","goals","or","objectives",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':456906).
lisp_trans(=>(and(actPlanning(EVENT),result(EVENT,CBO),tSumoContentBearingObject(CBO)),exists([PLAN],and(cwPlan(PLAN),containsInformation(CBO,PLAN)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457025).
lisp_trans(genls(actDesigning,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457232).
lisp_trans(genls(actDesigning,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457285).
lisp_trans(documentation(actDesigning,vEnglishLanguage,s("The","spatial","analogue","of","#$Planning",".","#$Designing","a","#$Collection","of","#$Objects","involves","determining","a","placement","of","the","#$Objects","with","respect","to","one","another","and","perhaps","other","#$Objects","as","well",",","in","order","to","satisfy","a","particular","purpose",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457325).
lisp_trans(genls(actInterpreting,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457604).
lisp_trans(documentation(actInterpreting,vEnglishLanguage,s("Any","#$Process","of","assigning","a","#$Proposition","to","a","#$Text",",","i",".","e",".","understanding","the","#$Text",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457660).
lisp_trans(=>(and(actInterpreting(INTERPRET),agent(INTERPRET,AGENT),patient(INTERPRET,CONTENT),tSumoContentBearingObject(CONTENT)),exists([PROP],holdsDuring(iTimeOf_EndFn(uWhenFn(INTERPRET)),believes(AGENT,containsInformation(CONTENT,PROP))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':457795).
lisp_trans(genls(tSumoQuantityChange,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458089).
lisp_trans(sumo_partition(tSumoQuantityChange,actIncreasing,actDecreasing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458130).
lisp_trans(documentation(tSumoQuantityChange,vEnglishLanguage,s("Any","#$InternalChange","where","a","#$PhysicalQuantity","associated","with","the","#$patient","is","altered",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458179).
lisp_trans(genls(actIncreasing,tSumoQuantityChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458319).
lisp_trans(relatedInternalConcept(actIncreasing,actPutting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458356).
lisp_trans(documentation(actIncreasing,vEnglishLanguage,s("Any","#$QuantityChange","where","the","#$PhysicalQuantity","is","increased",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458400).
lisp_trans(=>(and(actIncreasing(INCREASE),patient(INCREASE,OBJ)),exists([UNIT,QUANT1,QUANT2],and(holdsDuring(uBeginFn(uWhenFn(INCREASE)),equal(uMeasureFn(OBJ,UNIT),QUANT1)),holdsDuring(iTimeOf_EndFn(uWhenFn(INCREASE)),equal(uMeasureFn(OBJ,UNIT),QUANT2)),greaterThan(QUANT2,QUANT1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458510).
lisp_trans(genls(actHeating,actIncreasing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458876).
lisp_trans(disjointWith(actHeating,actCooling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458906).
lisp_trans(documentation(actHeating,vEnglishLanguage,s("Any","#$Increasing","#$Process","where","the","#$PhysicalQuantity","increased","is","a","#$TemperatureMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':458933).
lisp_trans(=>(and(actHeating(HEAT),patient(HEAT,OBJ)),exists([UNIT,QUANT1,QUANT2],and(vtTemperatureMeasure(UNIT),holdsDuring(uBeginFn(uWhenFn(HEAT)),equal(uMeasureFn(OBJ,UNIT),QUANT1)),holdsDuring(iTimeOf_EndFn(uWhenFn(HEAT)),equal(uMeasureFn(OBJ,UNIT),QUANT2)),greaterThan(QUANT2,QUANT1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':459069).
lisp_trans(genls(actDecreasing,tSumoQuantityChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':459489).
lisp_trans(relatedInternalConcept(actDecreasing,actRemoving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':459526).
lisp_trans(documentation(actDecreasing,vEnglishLanguage,s("Any","#$QuantityChange","where","the","#$PhysicalQuantity","is","decreased",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':459571).
lisp_trans(=>(and(actDecreasing(DECREASE),patient(DECREASE,OBJ)),exists([UNIT,QUANT1,QUANT2],and(holdsDuring(uBeginFn(uWhenFn(DECREASE)),equal(uMeasureFn(OBJ,UNIT),QUANT1)),holdsDuring(iTimeOf_EndFn(uWhenFn(DECREASE)),equal(uMeasureFn(OBJ,UNIT),QUANT2)),lessThan(QUANT2,QUANT1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':459681).
lisp_trans(genls(actCooling,actDecreasing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460071).
lisp_trans(documentation(actCooling,vEnglishLanguage,s("Any","#$Decreasing","#$Process","where","the","#$PhysicalQuantity","decreased","is","a","#$TemperatureMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460101).
lisp_trans(=>(and(actCooling(COOL),patient(COOL,OBJ)),exists([UNIT,QUANT1,QUANT2],and(vtTemperatureMeasure(UNIT),holdsDuring(uBeginFn(uWhenFn(COOL)),equal(uMeasureFn(OBJ,UNIT),QUANT1)),holdsDuring(iTimeOf_EndFn(uWhenFn(COOL)),equal(uMeasureFn(OBJ,UNIT),QUANT2)),lessThan(QUANT2,QUANT1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460237).
lisp_trans(rtCaseRole(moves),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460679).
lisp_trans(rtTotalValuedRelation(moves),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460705).
lisp_trans(argIsa(moves,1,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460742).
lisp_trans(argIsa(moves,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460766).
lisp_trans(documentation(moves,vEnglishLanguage,s("(","#$moves","?","MOTION","?","OBJECT",")","means","that","during","the","#$Motion","event","?","MOTION",",","?","OBJECT","moves",".","This","does","not","necessarily","imply","that","the","location","of","?","OBJECT","changes","during","?","MOTION",".","See","also","#$changesLocation","and","#$Translocation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':460790).
lisp_trans(genlPreds(moves,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461052).
lisp_trans(rtCaseRole(changesLocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461130).
lisp_trans(rtTotalValuedRelation(changesLocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461166).
lisp_trans(argIsa(changesLocation,1,eventTranslocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461213).
lisp_trans(argIsa(changesLocation,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461254).
lisp_trans(documentation(changesLocation,vEnglishLanguage,s("(","#$changesLocation","?","EVENT","?","OBJECT",")","means","that","during","the","#$Translocation","event","?","EVENT",",","?","OBJECT","'s","location","changes",".","?","OBJECT","might","also","be","the","#$agent",",","#$patient",",","or","#$experiencer","of","?","EVENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461288).
lisp_trans(genlPreds(changesLocation,moves),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461528).
lisp_trans(=>(changesLocation(EVENT,OBJ),and(eventTranslocation(EVENT),tSumoObject(OBJ),or(patient(EVENT,OBJ),agent(EVENT,OBJ),experiencer(EVENT,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461583).
lisp_trans(genls(actMotion,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461787).
lisp_trans(documentation(actMotion,vEnglishLanguage,s("Any","#$Process","of","movement",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461813).
lisp_trans(=>(actMotion(MOTION),exists([OBJ],and(tSumoObject(OBJ),moves(MOTION,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':461894).
lisp_trans(=>(and(actMotion(MOTION),moves(MOTION,OBJ),origin(MOTION,PLACE)),holdsDuring(uBeginFn(uWhenFn(MOTION)),located(OBJ,PLACE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':462382).
lisp_trans(=>(and(actMotion(MOTION),moves(MOTION,OBJ),destination(MOTION,PLACE)),holdsDuring(iTimeOf_EndFn(uWhenFn(MOTION)),located(OBJ,PLACE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':462772).
lisp_trans(genls(tSumoMotionUpward,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':462946).
lisp_trans(disjointWith(tSumoMotionUpward,tSumoMotionDownward),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':462977).
lisp_trans(documentation(tSumoMotionUpward,vEnglishLanguage,'Motion where an #$Object is moving away from the ground.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463016).
lisp_trans(genls(tSumoMotionDownward,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463123).
lisp_trans(documentation(tSumoMotionDownward,vEnglishLanguage,'Motion where an #$Object is moving toward the ground.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463156).
lisp_trans(rtCaseRole(path),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463262).
lisp_trans(rtTotalValuedRelation(path),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463287).
lisp_trans(genlPreds(path,eventPartlyLocated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463402).
lisp_trans(argIsa(path,1,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463440).
lisp_trans(argIsa(path,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463463).
lisp_trans(documentation(path,vEnglishLanguage,s("(","#$path","?","MOTION","?","PATH",")","means","that","?","PATH","is","a","route","along","which","?","MOTION","occurs",".","For","example",",","Highway","101","is","the","path","in","the","following","proposition",":","the","car","drove","up","Highway","101",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463486).
lisp_trans(=>(and(path(PROCESS,PATH1),origin(PROCESS,SOURCE),destination(PROCESS,DEST),length(PATH1,MEASURE1),distance(SOURCE,DEST,DISTANCE),not(greaterThan(MEASURE1,DISTANCE))),all([OBJ],=>(part(OBJ,PATH1),cycBetween(SOURCE,OBJ,DEST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':463704).
lisp_trans(genls(actBodyMotion,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':464030).
lisp_trans(documentation(actBodyMotion,vEnglishLanguage,s("Any","#$Motion","where","the","#$agent","is","an","#$Organism","and","the","#$patient","is","a","#$BodyPart",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':464059).
lisp_trans(=>(and(actBodyMotion(MOTION),moves(MOTION,OBJ)),and(tSumoBodyPart(OBJ),patient(MOTION,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':464450).
lisp_trans(=>(actBodyMotion(MOTION),exists([AGENT],and(tSumoOrganism(AGENT),agent(MOTION,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':464599).
lisp_trans(documentation(actSpeaking,vEnglishLanguage,s("Any","#$LinguisticCommunication","by","a","#$Human","which","involves","his","/","her","vocal","cords",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465074).
lisp_trans(genls(actAmbulating,actBodyMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465413).
lisp_trans(genls(actAmbulating,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465446).
lisp_trans(genls(actAmbulating,eventTranslocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465487).
lisp_trans(sumo_partition(actAmbulating,actWalking,actRunning),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465523).
lisp_trans(documentation(actAmbulating,vEnglishLanguage,s("Any","#$BodyMotion","which","is","accomplished","by","means","of","the","legs","of","an","#$Animal","for","the","purpose","of","moving","from","one","point","to","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465562).
lisp_trans(genls(actWalking,actAmbulating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465736).
lisp_trans(documentation(actWalking,vEnglishLanguage,'Ambulating relatively slowly, i.e. moving in such a way that at least one foot is always in contact with the ground.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465766).
lisp_trans(genls(actRunning,actAmbulating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465928).
lisp_trans(documentation(actRunning,vEnglishLanguage,'Ambulating relatively quickly, i.e. moving in such a way that, with each step, neither foot is in contact with the ground for a period of time.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':465958).
lisp_trans(=>(and(actWalking(WALK),actRunning(RUN),agent(WALK,AGENT),agent(RUN,AGENT),holdsDuring(uWhenFn(WALK),measure(AGENT,vSpeedFn(LENGTH1,TIME))),holdsDuring(uWhenFn(RUN),measure(AGENT,vSpeedFn(LENGTH2,TIME)))),greaterThan(LENGTH2,LENGTH1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466147).
lisp_trans(genls(actSwimming,actBodyMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466464).
lisp_trans(genls(actSwimming,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466495).
lisp_trans(documentation(actSwimming,vEnglishLanguage,s("Any","deliberate","and","controlled","#$BodyMotion","through","water","that","is","accomplished","by","an","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466534).
lisp_trans(=>(and(actSwimming(SWIM),agent(SWIM,AGENT)),exists([AREA],and(tSumoWaterArea(AREA),located(AGENT,AREA)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466674).
lisp_trans(genls(actDancing,actBodyMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466848).
lisp_trans(documentation(actDancing,vEnglishLanguage,s("Any","#$BodyMotion","of","#$Humans","which","is","deliberately","coordinated","with","music",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466878).
lisp_trans(genls(actGeologicalProcess,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':466996).
lisp_trans(genls(actGeologicalProcess,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467032).
lisp_trans(disjointWith(actGeologicalProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467076).
lisp_trans(documentation(actGeologicalProcess,vEnglishLanguage,s("The","class","of","activities","that","are","caused","by","geological","forces","and","affect","geological","features",",","and","which","may","affect","the","biosphere","as","well",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467124).
lisp_trans(genls(actWeatherProcess,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467314).
lisp_trans(disjointWith(actWeatherProcess,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467347).
lisp_trans(documentation(actWeatherProcess,vEnglishLanguage,'WeatherProcess is the broadest class of processes that involve weather, including weather seasons (not to be confused with instances of #$SeasonOfYear), weather systems, and short-term weather events.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467392).
lisp_trans(genls(actPrecipitation,actWeatherProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467645).
lisp_trans(genls(actPrecipitation,actWaterMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467685).
lisp_trans(genls(actPrecipitation,actFalling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467722).
lisp_trans(documentation(actPrecipitation,vEnglishLanguage,'Precipitation is the process of water molecules falling from the air to the ground, in either a liquid or frozen state.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467755).
lisp_trans(=>(actPrecipitation(PROCESS),exists([STUFF],and(tWater(STUFF),patient(PROCESS,STUFF)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':467926).
lisp_trans(genls(actLiquidMotion,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468060).
lisp_trans(documentation(actLiquidMotion,vEnglishLanguage,s("Any","#$Motion","where","the","#$patient","is","a","#$Liquid",".","This","class","would","cover",",","in","particular",",","the","flow","of","#$Water",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468091).
lisp_trans(=>(and(actLiquidMotion(MOTION),patient(MOTION,OBJ)),sumoAttribute(OBJ,tSumoLiquid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468248).
lisp_trans(genls(actWaterMotion,actLiquidMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468357).
lisp_trans(documentation(actWaterMotion,vEnglishLanguage,s("Any","#$LiquidMotion","where","the","#$Liquid","is","#$Water",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468393).
lisp_trans(=>(actWaterMotion(MOTION),exists([WATER],and(patient(MOTION,WATER),tWater(WATER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468490).
lisp_trans(genls(actGasMotion,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468630).
lisp_trans(documentation(actGasMotion,vEnglishLanguage,s("Any","#$Motion","where","the","#$patient","is","a","#$Gas",".","This","class","would","cover",",","in","particular",",","the","motion","of","#$Air",",","e",".","g",".","a","breeze","or","wind",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468658).
lisp_trans(=>(and(actGasMotion(MOTION),patient(MOTION,OBJ)),sumoAttribute(OBJ,tSumoGas)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468832).
lisp_trans(genls(tSumoWind,actGasMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468935).
lisp_trans(documentation(tSumoWind,vEnglishLanguage,s("Any","#$Motion","of","#$Air",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':468961).
lisp_trans(genls(tSumoDirectionChange,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469024).
lisp_trans(documentation(tSumoDirectionChange,vEnglishLanguage,s("The","act","of","changing","the","direction","in","which","the","#$patient","of","the","act","is","oriented",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469058).
lisp_trans(=>(tSumoDirectionChange(PROC),exists([ATTR],and(vtDirectionalAttribute(ATTR),or(and(holdsDuring(uBeginFn(uWhenFn(PROC)),manner(PROC,ATTR)),holdsDuring(iTimeOf_EndFn(uWhenFn(PROC)),not(manner(PROC,ATTR)))),and(holdsDuring(iTimeOf_EndFn(uWhenFn(PROC)),manner(PROC,ATTR)),holdsDuring(uBeginFn(uWhenFn(PROC)),not(manner(PROC,ATTR)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469190).
lisp_trans(genls(actTransfer,eventTranslocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469669).
lisp_trans(documentation(actTransfer,vEnglishLanguage,s("Any","#$instance","of","#$Translocation","where","the","#$agent","and","the","#$patient","are","not","the","same","thing",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469703).
lisp_trans(=>(and(actTransfer(TRANSFER),agent(TRANSFER,AGENT),patient(TRANSFER,PATIENT)),not(equal(AGENT,PATIENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469841).
lisp_trans(=>(and(eventTranslocation(T1),eventTranslocation(T2),origin(T1,O1),origin(T2,D1),destination(T1,D1),destination(T2,D2),experiencer(T1,P),experiencer(T2,P)),exists([T],and(eventTranslocation(T),origin(T,O1),destination(T,D2),subProcess(T1,T),subProcess(T2,T),experiencer(T,P),starts(uWhenFn(T1),uWhenFn(T)),finishes(uWhenFn(T2),uWhenFn(T))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':469997).
lisp_trans(genls(actCarrying,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':470522).
lisp_trans(documentation(actCarrying,vEnglishLanguage,'Transfer from one point to another by means of an #$Animal or #$Human.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':470551).
lisp_trans(=>(actCarrying(CARRY),exists([ANIMAL],and(tClazzAnimal(ANIMAL),instrument(CARRY,ANIMAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':470668).
lisp_trans(genls(actRemoving,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':470810).
lisp_trans(documentation(actRemoving,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","something","is","taken","away","from","a","location",".","Note","that","the","thing","removed","and","the","location","are","specified","with","the","#$CaseRoles","#$patient","and","#$origin",",","respectively",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':470839).
lisp_trans(=>(and(actRemoving(REMOVE),origin(REMOVE,PLACE),patient(REMOVE,OBJ)),and(holdsDuring(uBeginFn(uWhenFn(REMOVE)),located(OBJ,PLACE)),holdsDuring(iTimeOf_EndFn(uWhenFn(REMOVE)),not(located(OBJ,PLACE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471076).
lisp_trans(genls(actUncovering,actRemoving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471335).
lisp_trans(disjointWith(actUncovering,actCovering),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471366).
lisp_trans(documentation(actUncovering,vEnglishLanguage,s("The","#$Class","of","#$Removing","processes","where","the","#$agent","uncovers","the","#$patient",",","either","completely","or","only","partially",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471397).
lisp_trans(genls(actPutting,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471558).
lisp_trans(documentation(actPutting,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","something","is","put","in","a","location",".","Note","that","the","location","is","specified","with","the","#$CaseRole","#$destination",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471586).
lisp_trans(=>(and(actPutting(PUT),destination(PUT,PLACE),patient(PUT,OBJ)),and(holdsDuring(uBeginFn(uWhenFn(PUT)),not(located(OBJ,PLACE))),holdsDuring(iTimeOf_EndFn(uWhenFn(PUT)),located(OBJ,PLACE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':471766).
lisp_trans(genls(actCovering,actPutting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472014).
lisp_trans(documentation(actCovering,vEnglishLanguage,s("The","#$Class","of","#$Putting","processes","where","the","#$agent","covers","the","#$patient",",","either","completely","or","only","partially",",","with","something","else",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472042).
lisp_trans(genls(actInserting,actPutting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472219).
lisp_trans(documentation(actInserting,vEnglishLanguage,'Putting one thing inside of another thing.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472248).
lisp_trans(=>(and(actInserting(INSERT),patient(INSERT,OBJ1),destination(INSERT,OBJ2)),and(holdsDuring(uBeginFn(uWhenFn(INSERT)),not(contains(OBJ2,OBJ1))),holdsDuring(iTimeOf_EndFn(uWhenFn(INSERT)),contains(OBJ2,OBJ1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472338).
lisp_trans(genls(actInjecting,actInserting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472605).
lisp_trans(documentation(actInjecting,vEnglishLanguage,'Inserting a #$BiologicallyActiveSubstance into an #$Animal or a #$Human with a syringe.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472636).
lisp_trans(=>(actInjecting(INJECT),exists([SUBSTANCE,ANIMAL],and(patient(INJECT,SUBSTANCE),tSumoBiologicallyActiveSubstance(SUBSTANCE),sumoAttribute(SUBSTANCE,tSumoLiquid),destination(INJECT,ANIMAL),tClazzAnimal(ANIMAL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':472771).
lisp_trans(genls(actSubstituting,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473064).
lisp_trans(genls(actSubstituting,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473097).
lisp_trans(documentation(actSubstituting,vEnglishLanguage,s("The","#$Class","of","#$Transfers","where","one","thing","is","replaced","with","something","else",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473139).
lisp_trans(=>(actSubstituting(SUB),exists([PUT,REMOVE,OBJ1,OBJ2,PLACE],and(actPutting(PUT),actRemoving(REMOVE),subProcess(PUT,SUB),subProcess(REMOVE,SUB),patient(REMOVE,OBJ1),origin(REMOVE,PLACE),patient(PUT,OBJ2),destination(PUT,PLACE),not(equal(OBJ1,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473263).
lisp_trans(genls(actImpelling,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473662).
lisp_trans(documentation(actImpelling,vEnglishLanguage,s("The","#$subclass","of","#$Transfer","where","the","#$patient","travels","through","space","by","means","of","a","sudden",",","forceful","event",".","Some","examples","would","be","shooting",",","throwing",",","tossing",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473692).
lisp_trans(genls(actShooting,actImpelling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473904).
lisp_trans(documentation(actShooting,vEnglishLanguage,s("The","#$subclass","of","#$Impelling","where","the","#$patient","is","a","projectile","that","is","fired","through","the","air","by","means","of","some","sort","of","#$Device",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':473934).
lisp_trans(genls(actTouching,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474109).
lisp_trans(documentation(actTouching,vEnglishLanguage,s("Any","#$Transfer","where","two","#$Objects","are","brought","into","immediate","physical","contact","with","one","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474138).
lisp_trans(=>(and(actTouching(TOUCH),agent(TOUCH,OBJ1),patient(TOUCH,OBJ2)),and(holdsDuring(uBeginFn(uWhenFn(TOUCH)),not(connected(OBJ1,OBJ2))),holdsDuring(iTimeOf_EndFn(uWhenFn(TOUCH)),connected(OBJ1,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474279).
lisp_trans(genlPreds(grasps,meetsSpatially),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474536).
lisp_trans(argIsa(grasps,1,tClazzAnimal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474572).
lisp_trans(argIsa(grasps,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474597).
lisp_trans(documentation(grasps,vEnglishLanguage,s("The","state","of","grasping","an","#$Object",".","(","#$grasps","?","ANIMAL","?","OBJ",")","means","that","the","#$Animal","?","ANIMAL","is","intentionally","holding","on","to","the","#$Object","?","OBJ",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474622).
lisp_trans(genls(actGrabbing,actTouching),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474806).
lisp_trans(genls(actGrabbing,actAttaching),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474835).
lisp_trans(documentation(actGrabbing,vEnglishLanguage,s("Any","instance","of","#$Touching","which","results","in","a","situation","where","the","#$agent","#$grasps","the","#$patient","of","the","#$Touching",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':474865).
lisp_trans(=>(and(actGrabbing(GRAB),agent(GRAB,AGENT),patient(GRAB,THING)),and(holdsDuring(uBeginFn(uWhenFn(GRAB)),not(grasps(AGENT,THING))),holdsDuring(iTimeOf_EndFn(uWhenFn(GRAB)),grasps(AGENT,THING)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475025).
lisp_trans(genls(actReleasing,actTransfer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475277).
lisp_trans(documentation(actReleasing,vEnglishLanguage,s("Any","instance","of","#$Transfer","which","results","in","a","situation","where","it","is","not","the","case","that","the","#$agent","#$grasps","something","which","he","/","she","#$grasps","previously",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475307).
lisp_trans(=>(and(actReleasing(RELEASE),agent(GRAB,AGENT),patient(GRAB,THING)),and(holdsDuring(uBeginFn(uWhenFn(RELEASE)),grasps(AGENT,THING)),holdsDuring(iTimeOf_EndFn(uWhenFn(RELEASE)),not(grasps(AGENT,THING))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475503).
lisp_trans(genls(actImpacting,actTouching),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475765).
lisp_trans(documentation(actImpacting,vEnglishLanguage,s("Any","#$Touching","where","something","comes","into","sudden",",","forceful",",","physical","contact","with","something","else",".","Some","examples","would","be","striking",",","knocking",",","whipping","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475795).
lisp_trans(=>(and(actImpacting(IMPACT),patient(IMPACT,OBJ)),exists([IMPEL],and(actImpelling(IMPEL),patient(IMPEL,OBJ),earlier(uWhenFn(IMPEL),uWhenFn(IMPACT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':475996).
lisp_trans(genls(eventTranslocation,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':476228).
lisp_trans(documentation(eventTranslocation,vEnglishLanguage,'Translocation is that class of #$Motions in which an object moves from one place to another.  In the case of round trips, the #$origin and #$destination are the same, but the intervening motion passes through other locations.  #$Translocation represents linear motion, in contrast to rotation or other movement in place.  A vehicle is not necessary, #$Ambulating is a kind of #$Translocation.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':476260).
lisp_trans(=>(and(eventTranslocation(MOVEMENT),origin(MOVEMENT,PLACE1)),exists([PLACE2,STAGE],and(tPlaceLikeRegion(PLACE2),not(equal(PLACE1,PLACE2)),subProcess(STAGE,MOVEMENT),located(STAGE,PLACE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':476704).
lisp_trans(=>(eventTranslocation(T),exists([O,D,P],and(tSumoObject(O),tSumoObject(D),tSumoObject(P),path(T,P),origin(T,O),destination(T,D)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':476961).
lisp_trans(genls(actFalling,eventTranslocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477176).
lisp_trans(genls(actFalling,tSumoMotionDownward),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477209).
lisp_trans(documentation(actFalling,vEnglishLanguage,'Falling is the class of events in which something moves from a higher location to a lower location under the force of gravity.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477243).
lisp_trans(=>(and(actFalling(DROP),origin(DROP,START),destination(DROP,FINISH)),orientation(FINISH,START,tSumoBelow)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477415).
lisp_trans(genls(actTransportation,eventTranslocation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477553).
lisp_trans(relatedInternalConcept(actTransportation,tObjectTransportationDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477593).
lisp_trans(documentation(actTransportation,vEnglishLanguage,'Motion from one point to another by means of a #$TransportationDevice.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477654).
lisp_trans(=>(actTransportation(TRANS),exists([DEVICE],and(tObjectTransportationDevice(DEVICE),instrument(TRANS,DEVICE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477777).
lisp_trans(genls(actGuiding,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477940).
lisp_trans(documentation(actGuiding,vEnglishLanguage,s("Any","#$IntentionalProcess","where","the","#$agent","tries","to","direct","the","behavior","of","another","#$Object",",","whether","an","#$Agent","or","not",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':477978).
lisp_trans(genls(actDriving,actGuiding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478141).
lisp_trans(documentation(actDriving,vEnglishLanguage,s("Controlling","the","direction","and","/","or","speed","of","a","#$Vehicle",".","This","includes","navigating","a","ship",",","driving","a","car","or","truck",",","operating","a","train",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478168).
lisp_trans(=>(actDriving(DRIVE),exists([VEHICLE],and(tSumoVehicle(VEHICLE),patient(DRIVE,VEHICLE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478348).
lisp_trans(genls(actEducationalProcess,actGuiding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478490).
lisp_trans(documentation(actEducationalProcess,vEnglishLanguage,s("Any","#$Process","which","is","intended","to","result","in","#$Learning",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478528).
lisp_trans(=>(and(actEducationalProcess(EDUCATION),patient(EDUCATION,PERSON)),hasPurpose(EDUCATION,exists([LEARN],and(actLearning(LEARN),patient(LEARN,PERSON))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478639).
lisp_trans(genls(tSumoChangeOfPossession,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478859).
lisp_trans(relatedInternalConcept(tSumoChangeOfPossession,possesses),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478907).
lisp_trans(documentation(tSumoChangeOfPossession,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","ownership","of","something","is","transferred","from","one","#$Agent","to","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':478961).
lisp_trans(=>(and(tSumoChangeOfPossession(CHANGE),patient(CHANGE,OBJ),holdsDuring(uBeginFn(uWhenFn(CHANGE)),possesses(AGENT1,OBJ)),holdsDuring(iTimeOf_EndFn(uWhenFn(CHANGE)),possesses(AGENT2,OBJ))),not(equal(AGENT1,AGENT2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':479115).
lisp_trans(=>(and(tSumoChangeOfPossession(CHANGE),origin(CHANGE,AGENT1),destination(CHANGE,AGENT2),tAgent(AGENT1),tAgent(AGENT2),patient(CHANGE,OBJ)),and(holdsDuring(uBeginFn(uWhenFn(CHANGE)),possesses(AGENT1,OBJ)),holdsDuring(iTimeOf_EndFn(uWhenFn(CHANGE)),possesses(AGENT2,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':479384).
lisp_trans(genls(actGiving,tSumoChangeOfPossession),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':479752).
lisp_trans(documentation(actGiving,vEnglishLanguage,s("The","#$subclass","of","#$ChangeOfPossession","where","the","#$agent","gives","the","#$destination","something",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':479789).
lisp_trans(=>(and(actGiving(GIVE),agent(GIVE,AGENT1),destination(GIVE,AGENT2),tAgent(AGENT2),patient(GIVE,OBJ)),exists([GET],and(actGetting(GET),agent(GET,AGENT2),origin(GET,AGENT1),patient(GET,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':479923).
lisp_trans(=>(and(actGiving(GIVE),agent(GIVE,AGENT)),origin(GIVE,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':480242).
lisp_trans(genls(actFunding,actGiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':480339).
lisp_trans(documentation(actFunding,vEnglishLanguage,s("Any","instance","of","#$Giving","where","the","#$patient","is","an","instance","of","#$Currency",".","Note","that","this","class","covers","both","financing",",","e",".","g",".","where","a","firm","funds","a","software","company","with","venture","capital","with","the","agreement","that","a","certain","percentage","of","the","profits","on","the","investment","will","be","returned","to","the","firm",",","and","instances","of","#$UnilateralGiving",",","e",".","g",".","providing","a","tuition","waiver","and","/","or","a","stipend","to","a","student","as","part","of","scholarship","or","fellowship",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':480365).
lisp_trans(=>(actFunding(FUND),exists([MONEY],and(tObjectCurrency(MONEY),patient(FUND,MONEY)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':480837).
lisp_trans(genls(actUnilateralGiving,actGiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':480972).
lisp_trans(documentation(actUnilateralGiving,vEnglishLanguage,s("Any","instance","of","#$Giving","that","is","not","part","of","a","#$Transaction",".","In","other","words",",","any","instance","of","#$Giving","where","nothing","is","received","in","return",".","Some","examples","of","#$UnilateralGiving","are",":","honorary","awards",",","gifts",",","and","financial","grants",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':481007).
lisp_trans(=>(actUnilateralGiving(GIVE),not(exists([TRANS],and(actTransaction(TRANS),subProcess(GIVE,TRANS))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':481289).
lisp_trans(genls(eventLending,actGiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':481460).
lisp_trans(documentation(eventLending,vEnglishLanguage,s("The","#$subclass","of","#$Giving","#$Processes","where","the","#$agent","gives","the","#$destination","something","for","a","limited","period","of","time","with","the","expectation","that","it","will","be","returned","later","(","perhaps","with","interest",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':481486).
lisp_trans(<=>(exists([BORROW],and(actBorrowing(BORROW),agent(BORROW,AGENT1),origin(BORROW,AGENT2),patient(BORROW,OBJECT))),exists([LEND],and(eventLending(LEND),agent(LEND,AGENT2),destination(LEND,AGENT1),patient(LEND,OBJECT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':481726).
lisp_trans(genls(tSumoGivingBack,actGiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482074).
lisp_trans(documentation(tSumoGivingBack,vEnglishLanguage,s("Any","instance","of","#$Giving","where","the","#$agent","gives","something","to","the","#$destination","which","was","previously","given","to","the","#$agent","by","the","#$destination",",","e",".","g",".","returing","a","book","that","was","borrowed","from","someone",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482103).
lisp_trans(=>(and(tSumoGivingBack(RETURN),agent(RETURN,AGENT),destination(RETURN,DEST)),exists([GIVE],and(actGiving(GIVE),agent(GIVE,DEST),destination(GIVE,AGENT),earlier(uWhenFn(GIVE),uWhenFn(RETURN))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482346).
lisp_trans(genls(actGetting,tSumoChangeOfPossession),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482641).
lisp_trans(documentation(actGetting,vEnglishLanguage,s("The","#$subclass","of","#$ChangeOfPossession","where","the","#$agent","gets","something",".","Note","that","the","source","from","which","something","is","obtained","is","specified","with","the","#$origin","#$CaseRole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482679).
lisp_trans(=>(and(actGetting(GET),agent(GET,AGENT)),destination(GET,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482893).
lisp_trans(genls(actUnilateralGetting,actGetting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':482993).
lisp_trans(relatedInternalConcept(actUnilateralGetting,actUnilateralGiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483030).
lisp_trans(documentation(actUnilateralGetting,vEnglishLanguage,s("Any","instance","of","#$Getting","that","is","not","part","of","a","#$Transaction",".","In","other","words",",","any","instance","of","#$Getting","where","nothing","is","given","in","return",".","Some","examples","of","#$UnilateralGetting","are",":","appropriating",",","commandeering",",","stealing",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483090).
lisp_trans(=>(actUnilateralGetting(GET),not(exists([TRANS],and(actTransaction(TRANS),subProcess(GET,TRANS))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483372).
lisp_trans(genls(actBorrowing,actGetting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483542).
lisp_trans(documentation(actBorrowing,vEnglishLanguage,s("The","#$subclass","of","#$Getting","#$Processes","where","the","#$agent","gets","something","for","a","limited","period","of","time","with","the","expectation","that","it","will","be","returned","later","(","perhaps","with","interest",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483571).
lisp_trans(genls(actTransaction,tSumoChangeOfPossession),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483795).
lisp_trans(genls(actTransaction,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483837).
lisp_trans(documentation(actTransaction,vEnglishLanguage,s("The","#$subclass","of","#$ChangeOfPossession","where","something","is","exchanged","for","something","else",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':483878).
lisp_trans(=>(actTransaction(TRANS),exists([AGENT1,AGENT2,GIVE1,GIVE2,OBJ1,OBJ2],and(actGiving(GIVE1),actGiving(GIVE2),subProcess(GIVE1,TRANS),subProcess(GIVE2,TRANS),agent(GIVE1,AGENT1),agent(GIVE2,AGENT2),patient(GIVE1,OBJ1),patient(GIVE2,OBJ2),destination(GIVE1,AGENT2),destination(GIVE2,AGENT1),not(equal(AGENT1,AGENT2)),not(equal(OBJ1,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484013).
lisp_trans(genls(actFinancialTransaction,actTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484557).
lisp_trans(documentation(actFinancialTransaction,vEnglishLanguage,s("A","#$Transaction","where","an","instance","of","#$FinancialInstrument","is","the","subject","of","the","action",",","and","often","is","exchanged","for","something","else",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484601).
lisp_trans(=>(actFinancialTransaction(TRANS),exists([OBJ],and(patient(TRANS,OBJ),tSumoFinancialInstrument(OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484789).
lisp_trans(rtBinaryPredicate(transactionAmount),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484944).
lisp_trans(rtSingleValuedRelation(transactionAmount),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':484989).
lisp_trans(rtTotalValuedRelation(transactionAmount),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485039).
lisp_trans(argIsa(transactionAmount,1,actFinancialTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485088).
lisp_trans(argIsa(transactionAmount,2,vtCurrencyMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485138).
lisp_trans(documentation(transactionAmount,vEnglishLanguage,s("(","#$transactionAmount","?","TRANSACTION","?","AMOUNT",")","means","that","?","AMOUNT","is","an","instance","of","#$CurrencyMeasure","being","exhanged","in","the","#$FinancialTransaction","?","TRANSACTION",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485183).
lisp_trans(=>(transactionAmount(TRANS,AMOUNT),exists([OBJ],and(patient(TRANS,OBJ),monetaryValue(OBJ,AMOUNT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485393).
lisp_trans(genls(actServiceProcess,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485537).
lisp_trans(documentation(actServiceProcess,vEnglishLanguage,'ServiceProcess denotes the class of events in which one agent performs a service for another.  The service need not be commercial, and it need not be the case that the #$serviceRecipient pays or recompenses the #$serviceProvider for the service.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485581).
lisp_trans(genls(tSumoCommercialService,actFinancialTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485879).
lisp_trans(documentation(tSumoCommercialService,vEnglishLanguage,s("Any","#$FinancialTransaction","by","a","#$CommercialAgent","where","the","aim","is","to","produce","a","profit",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':485929).
lisp_trans(genls(tSumoCommercialService,actServiceProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486069).
lisp_trans(=>(tSumoCommercialService(BUSINESS),exists([AGENT],and(mobCommercialAgent(AGENT),agent(BUSINESS,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486114).
lisp_trans(genls(actBetting,actFinancialTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486272).
lisp_trans(documentation(actBetting,vEnglishLanguage,s("A","#$FinancialTransaction","where","an","instance","of","#$CurrencyMeasure","is","exchanged","for","the","possibility","of","winning","a","larger","instance","of","#$CurrencyMeasure","within","the","context","of","some","sort","of","#$Game",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486312).
lisp_trans(genls(actBuying,actFinancialTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486545).
lisp_trans(relatedInternalConcept(actBuying,actSelling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486584).
lisp_trans(documentation(actBuying,vEnglishLanguage,s("A","#$FinancialTransaction","in","which","an","instance","of","#$CurrencyMeasure","is","exchanged","for","an","instance","of","#$Physical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486624).
lisp_trans(=>(and(actBuying(BUY),agent(BUY,AGENT)),destination(BUY,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486777).
lisp_trans(genls(actSelling,actFinancialTransaction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486876).
lisp_trans(documentation(actSelling,vEnglishLanguage,s("A","#$FinancialTransaction","in","which","an","instance","of","#$Physical","is","exchanged","for","an","instance","of","#$CurrencyMeasure",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':486916).
lisp_trans(<=>(exists([BUY],and(actBuying(BUY),agent(BUY,AGENT1),origin(BUY,AGENT2),patient(BUY,OBJECT))),exists([SELL],and(actSelling(SELL),agent(SELL,AGENT2),destination(SELL,AGENT1),patient(SELL,OBJECT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487070).
lisp_trans(=>(and(actSelling(SELL),agent(SELL,AGENT)),origin(SELL,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487400).
lisp_trans(genls(actLearning,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487498).
lisp_trans(documentation(actLearning,vEnglishLanguage,s("The","#$Class","of","#$Processes","which","relate","to","the","acquisition","of","information",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487550).
lisp_trans(=>(and(actLearning(LEARN),agent(LEARN,AGENT)),mobCognitiveAgent(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487669).
lisp_trans(=>(and(actLearning(LEARN),agent(LEARN,AGENT),patient(LEARN,PROP)),and(holdsDuring(uBeginFn(uWhenFn(LEARN)),not(knows(AGENT,PROP))),holdsDuring(iTimeOf_EndFn(uWhenFn(LEARN)),knows(AGENT,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':487781).
lisp_trans(genls(actDiscovering,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488033).
lisp_trans(documentation(actDiscovering,vEnglishLanguage,s("Finding","something","that","was","sought",".","Note","that","this","class","is","restricted","to","cases","of","discovering","something","#$Physical",".","For","cases","involving","the","acquisition","of","knowledge",",","the","class","#$Learning","should","be","used",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488088).
lisp_trans(=>(and(actDiscovering(DISCOVER),patient(DISCOVER,OBJ)),exists([PURSUE],and(actPursuing(PURSUE),meetsTemporally(uWhenFn(PURSUE),uWhenFn(DISCOVER))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488339).
lisp_trans(=>(and(actDiscovering(DISCOVER),patient(DISCOVER,OBJ),holdsDuring(uWhenFn(DISCOVER),located(OBJ,PLACE))),exists([LEARN],and(actLearning(LEARN),subProcess(LEARN,DISCOVER),patient(LEARN,located(OBJ,PLACE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488558).
lisp_trans(genls(actClassifying,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488860).
lisp_trans(documentation(actClassifying,vEnglishLanguage,s("The","#$Class","of","#$IntentionalPsychologicalProcesses","which","involve","attaching","a","name","or","category","to","a","thing","or","set","of","things",".","Note","that","#$Classifying","is","distinguished","from","#$Learning","by","the","fact","that","the","latter","covers","the","acquisition","by","a","#$CognitiveAgent","of","any","#$Proposition",",","while","the","former","involves","the","assignment","of","a","label","or","category",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':488915).
lisp_trans(genls(eventReasoning,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489302).
lisp_trans(documentation(eventReasoning,vEnglishLanguage,s("The","#$Class","of","#$IntentionalPsychologicalProcesses","which","involve","concluding",",","on","the","basis","of","either","deductive","or","inductive","evidence",",","that","a","particular","#$Proposition","or","#$Sentence","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489355).
lisp_trans(=>(mobCognitiveAgent(AGENT),capability(eventReasoning,agent,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489588).
lisp_trans(genls(actSelecting,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489669).
lisp_trans(documentation(actSelecting,vEnglishLanguage,s("The","#$Class","of","#$IntentionalPsychologicalProcesses","which","involve","opting","for","one","or","more","#$Entity","out","of","a","larger","set","of","#$Entities",".","Note","that","this","covers","all","cases","of","judging","or","evaluating",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489722).
lisp_trans(genls(actDeciding,actSelecting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489957).
lisp_trans(documentation(actDeciding,vEnglishLanguage,s("The","subclass","of","#$Selecting","where","the","#$agent","opts","for","one","course","of","action","out","of","a","set","of","multiple","possibilities","that","are","open","to","him","/","her",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':489987).
lisp_trans(=>(and(actDeciding(DECIDE),agent(DECIDE,AGENT),patient(DECIDE,PROCESS)),and(actIntentionalProcess(PROCESS),agent(PROCESS,AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490172).
lisp_trans(genls(actVoting,actDeciding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490367).
lisp_trans(documentation(actVoting,vEnglishLanguage,'Voting is the activity of voting in an #$Election.  Voting is typically done by individuals, while #$Elections are conducted by #$Organizations.  The voting process by an individual voter is part of an #$Election process.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490394).
lisp_trans(=>(actVoting(VOTE),exists([ELECT],and(actElection(ELECT),subProcess(VOTE,ELECT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490660).
lisp_trans(genls(actJudging,actSelecting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490787).
lisp_trans(documentation(actJudging,vEnglishLanguage,s("The","subclass","of","#$Selecting","where","the","#$agent","opts","for","one","belief","out","of","a","set","of","multiple","possibilities","that","are","available","to","him","/","her",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490816).
lisp_trans(=>(and(actJudging(JUDGE),agent(JUDGE,AGENT),patient(JUDGE,PROPOSITION)),and(holdsDuring(uBeginFn(uWhenFn(JUDGE)),not(believes(AGENT,PROPOSITION))),holdsDuring(iTimeOf_EndFn(uWhenFn(JUDGE)),believes(AGENT,PROPOSITION)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':490995).
lisp_trans(genls(actComparing,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491273).
lisp_trans(genls(actComparing,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491326).
lisp_trans(documentation(actComparing,vEnglishLanguage,s("The","#$Class","of","#$IntentionalPsychologicalProcesses","which","involve","comparing",",","relating",",","contrasting",",","etc",".","the","properties","of","two","or","more","#$Entities",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491365).
lisp_trans(genls(actCalculating,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491556).
lisp_trans(documentation(actCalculating,vEnglishLanguage,'IntentionalPsychologicalProcesses which involve the consideration and/or manipulation of instances of #$Quantity.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491611).
lisp_trans(genls(actMeasuring,actCalculating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491774).
lisp_trans(documentation(actMeasuring,vEnglishLanguage,s("The","#$Class","of","#$Calculating","#$Processes","where","the","aim","is","to","determine","the","#$PhysicalQuantity","of","some","aspect","of","the","#$patient",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491807).
lisp_trans(=>(and(actMeasuring(MEAS),agent(MEAS,AGENT),patient(MEAS,OBJ)),exists([QUANT,UNIT],holdsDuring(iTimeOf_EndFn(uWhenFn(MEAS)),knows(AGENT,measure(OBJ,uMeasureFn(QUANT,UNIT)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':491979).
lisp_trans(genls(actCounting,actCalculating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492215).
lisp_trans(documentation(actCounting,vEnglishLanguage,s("Enumerating","something",".","The","#$Class","of","#$Calculating","#$Processes","where","the","aim","is","to","determine","the","#$Number","corresponding","to","the","#$patient",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492247).
lisp_trans(=>(and(actCounting(COUNT),agent(COUNT,AGENT),patient(COUNT,ENTITY)),exists([NUMBER],knows(AGENT,equal(vCardinalityFn(ENTITY),NUMBER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492431).
lisp_trans(genls(actPredicting,actIntentionalPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492621).
lisp_trans(documentation(actPredicting,vEnglishLanguage,s("The","#$Class","of","#$IntentionalPsychologicalProcesses","which","involve","the","formulation","of","a","#$Proposition","about","a","state","of","affairs","which","might","be","realized","in","the","future",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492675).
lisp_trans(=>(and(actPredicting(PREDICT),patient(PREDICT,FORMULA)),exists([TIME],and(holdsDuring(TIME,FORMULA),or(before(TIME,uWhenFn(PREDICT)),earlier(TIME,uWhenFn(PREDICT)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':492885).
lisp_trans(genls(eventRemembering,actPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493146).
lisp_trans(documentation(eventRemembering,vEnglishLanguage,s("The","#$Class","of","#$PsychologicalProcesses","which","involve","the","recollection","of","prior","experiences","and","/","or","of","knowledge","which","was","previously","acquired",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493190).
lisp_trans(=>(and(eventRemembering(REMEMBER),patient(REMEMBER,FORMULA)),exists([TIME],and(holdsDuring(TIME,FORMULA),or(before(TIME,uWhenFn(REMEMBER)),earlier(TIME,uWhenFn(REMEMBER)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493380).
lisp_trans(genls(actKeeping,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493646).
lisp_trans(documentation(actKeeping,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","the","#$agent","keeps","something","in","a","particular","location","for","an","extended","period","of","time",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493684).
lisp_trans(=>(and(actKeeping(KEEP),agent(KEEP,AGENT),patient(KEEP,OBJ)),exists([PUT],and(actPutting(PUT),agent(PUT,AGENT),patient(PUT,OBJ),earlier(uWhenFn(PUT),uWhenFn(KEEP))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':493845).
lisp_trans(=>(and(actKeeping(KEEP),patient(KEEP,OBJ)),exists([PLACE],all([TIME],=>(temporalPart(TIME,uWhenFn(KEEP)),holdsDuring(TIME,located(OBJ,PLACE)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494115).
lisp_trans(genls(actConfining,actKeeping),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494348).
lisp_trans(documentation(actConfining,vEnglishLanguage,s("The","#$Class","of","#$Keeping","#$Processes","where","the","#$patient","is","a","#$Human","or","an","#$Animal","and","is","kept","involuntarily",".","This","covers","caging",",","imprisonment",",","jailing",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494377).
lisp_trans(=>(actConfining(CONFINE),exists([AGENT],and(tClazzAnimal(AGENT),patient(CONFINE,AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494583).
lisp_trans(=>(and(actConfining(CONFINE),patient(CONFINE,PERSON),tSumoHuman(PERSON)),not(desires(PERSON,patient(CONFINE,PERSON)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494724).
lisp_trans(genls(actMaintaining,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494893).
lisp_trans(documentation(actMaintaining,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","the","#$agent","cares","for","or","maintains","the","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':494935).
lisp_trans(genls(actRepairing,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495064).
lisp_trans(relatedInternalConcept(actRepairing,actMaintaining),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495104).
lisp_trans(documentation(actRepairing,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","the","#$agent","makes","a","modification","or","series","of","modifications","to","an","#$Object","that","is","not","functioning","as","intended","so","that","it","works","properly",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495151).
lisp_trans(=>(and(actRepairing(REPAIR),patient(REPAIR,OBJ)),exists([DAMAGE],and(actDamaging(DAMAGE),patient(DAMAGE,OBJ),earlier(uWhenFn(DAMAGE),uWhenFn(REPAIR))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495367).
lisp_trans(genls(actTherapeuticProcess,actRepairing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495602).
lisp_trans(documentation(actTherapeuticProcess,vEnglishLanguage,s("A","#$Process","that","is","carried","out","for","the","purpose","of","curing",",","improving","or","reducing","the","pain","associated","with","a","#$DiseaseOrSyndrome",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495642).
lisp_trans(=>(and(actTherapeuticProcess(PROC),patient(PROC,BIO)),or(tSumoOrganism(BIO),exists([ORG],and(tSumoOrganism(ORG),part(BIO,ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':495825).
lisp_trans(genls(actSurgery,actTherapeuticProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496051).
lisp_trans(documentation(actSurgery,vEnglishLanguage,s("Any","#$TherapeuticProcess","that","involves","making","an","incision","in","the","#$Animal","that","is","the","#$patient","of","the","#$TherapeuticProcess",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496089).
lisp_trans(=>(and(actSurgery(ACT),patient(ACT,ANIMAL)),exists([SUBACT],and(actCutting(SUBACT),tClazzAnimal(ANIMAL),patient(SUBACT,ANIMAL),subProcess(SUBACT,ACT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496257).
lisp_trans(genls(actDamaging,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496506).
lisp_trans(disjointWith(actDamaging,actRepairing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496541).
lisp_trans(documentation(actDamaging,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","the","#$agent","brings","about","a","situation","where","the","#$patient","no","longer","functions","normally","or","as","intended",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496571).
lisp_trans(genls(actDestruction,actDamaging),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496750).
lisp_trans(documentation(actDestruction,vEnglishLanguage,s("The","#$subclass","of","#$Damagings","in","which","the","#$patient","(","or","an","essential","element","of","the","#$patient",")","is","destroyed",".","Note","that","the","difference","between","this","concept","and","its","superclass","is","solely","one","of","extent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':496782).
lisp_trans(<=>(actDestruction(PROCESS),exists([PATIENT],and(patient(PROCESS,PATIENT),time(PATIENT,uBeginFn(uWhenFn(PROCESS))),not(time(PATIENT,iTimeOf_EndFn(uWhenFn(PROCESS))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497029).
lisp_trans(genls(actKilling,actDestruction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497265).
lisp_trans(documentation(actKilling,vEnglishLanguage,s("The","#$subclass","of","#$Destruction","in","which","the","death","of","an","#$Organism","is","caused","by","an","#$Organism",".","Note","that","in","cases","of","suicide","the","#$Organism","would","be","the","same","in","both","cases",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497296).
lisp_trans(=>(and(actKilling(KILL),agent(KILL,AGENT),patient(KILL,PATIENT)),and(tSumoOrganism(AGENT),tSumoOrganism(PATIENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497514).
lisp_trans(=>(and(actKilling(KILL),patient(KILL,PATIENT)),and(holdsDuring(uBeginFn(uWhenFn(KILL)),sumoAttribute(PATIENT,actLiving)),holdsDuring(eventFutureFn(uWhenFn(KILL)),sumoAttribute(PATIENT,tDead)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497695).
lisp_trans(=>(and(actKilling(KILL),patient(KILL,OBJ)),exists([DEATH],and(tSumoDeath(DEATH),experiencer(DEATH,OBJ),causes(KILL,DEATH)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':497926).
lisp_trans(genls(actPoking,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498131).
lisp_trans(documentation(actPoking,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","the","#$agent","pierces","the","surface","of","the","#$Object","with","an","#$instrument",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498168).
lisp_trans(=>(and(actPoking(POKE),agent(POKE,AGENT),patient(POKE,OBJ),instrument(POKE,INST)),holdsDuring(uWhenFn(POKE),connects(INST,AGENT,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498313).
lisp_trans(genls(actCutting,actPoking),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498504).
lisp_trans(documentation(actCutting,vEnglishLanguage,s("The","#$subclass","of","#$Poking","#$Processes","which","involve","a","sharp","#$instrument",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498530).
lisp_trans(genls(actAttaching,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498648).
lisp_trans(disjointWith(actAttaching,actDetaching),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498687).
lisp_trans(relatedInternalConcept(actAttaching,actPutting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498718).
lisp_trans(documentation(actAttaching,vEnglishLanguage,s("A","#$Process","where","one","#$Object","becomes","attached","to","another","#$Object",".","Note","that","this","differs","from","#$Putting","in","that","two","things","which","are","attached","may","already","be","in","the","same","location",".","Note","that","#$Combining","is","different","from","#$Attaching","in","that","the","former","applies","to","#$Substances",",","while","the","latter","applies","to","#$CorpuscularObjects",".","Note","too","that","#$Attaching","is","different","from","#$Putting","in","that","one","or","both","of","the","two","things","which","are","attached","may","or","may","not","be","moved","from","the","location","where","they","were","combined",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':498761).
lisp_trans(=>(and(actAttaching(ATTACH),patient(ATTACH,OBJ1),patient(ATTACH,OBJ2)),and(holdsDuring(uBeginFn(uWhenFn(ATTACH)),not(connected(OBJ1,OBJ2))),holdsDuring(iTimeOf_EndFn(uWhenFn(ATTACH)),connected(OBJ1,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':499316).
lisp_trans(=>(actAttaching(ATTACH),exists([OBJ],and(tSumoCorpuscularObject(OBJ),patient(ATTACH,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':499581).
lisp_trans(genls(actDetaching,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':499725).
lisp_trans(documentation(actDetaching,vEnglishLanguage,s("A","#$Process","where","the","#$agent","detaches","one","thing","from","something","else",".","Note","that","#$Detaching","is","different","from","#$Separating","in","that","the","latter","applies","to","#$Substances",",","while","the","former","applies","to","#$CorpuscularObjects",".","Note","too","that","#$Detaching","is","different","from","#$Removing","in","that","one","or","both","of","the","two","things","which","are","detached","may","or","may","not","be","moved","from","the","location","where","they","were","attached",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':499765).
lisp_trans(=>(and(actDetaching(DETACH),patient(DETACH,OBJ1),patient(DETACH,OBJ2)),and(holdsDuring(uBeginFn(uWhenFn(DETACH)),connected(OBJ1,OBJ2)),holdsDuring(iTimeOf_EndFn(uWhenFn(DETACH)),not(connected(OBJ1,OBJ2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':500210).
lisp_trans(=>(actDetaching(DETACH),exists([OBJ],and(tSumoCorpuscularObject(OBJ),patient(DETACH,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':500475).
lisp_trans(genls(actUngrasping,actDetaching),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':500619).
lisp_trans(documentation(actUngrasping,vEnglishLanguage,s("Any","instance","of","#$Detaching","which","results","in","a","situation","where","it","is","not","the","case","that","the","#$agent","#$grasps","something","which","he","/","she","#$grasps","previously",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':500651).
lisp_trans(=>(and(actUngrasping(RELEASE),agent(GRAB,AGENT),patient(GRAB,THING)),and(holdsDuring(uBeginFn(uWhenFn(RELEASE)),grasps(AGENT,THING)),holdsDuring(iTimeOf_EndFn(uWhenFn(RELEASE)),not(grasps(AGENT,THING))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':500849).
lisp_trans(genls(actCombining,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':501112).
lisp_trans(documentation(actCombining,vEnglishLanguage,s("A","#$Process","where","two","or","more","#$SelfConnectedObjects","are","incorporated","into","a","single","#$SelfConnectedObject",".","Note","that","#$Combining","is","different","from","#$Attaching","in","that","the","former","results","in","one","of","the","objects","being","#$part","of","the","other",",","while","#$Attaching","only","results","in","the","two","objects","being","#$connected","with","one","another",".","Note","too","that","#$Combining","is","different","from","#$Putting","in","that","one","or","both","of","the","two","things","which","are","combined","may","or","may","not","be","moved","from","the","location","where","they","were","combined",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':501151).
lisp_trans(<=>(and(actCombining(COMBINE),resource(COMBINE,OBJ1),result(COMBINE,OBJ2)),and(holdsDuring(uBeginFn(uWhenFn(COMBINE)),not(part(OBJ1,OBJ2))),holdsDuring(iTimeOf_EndFn(uWhenFn(COMBINE)),part(OBJ1,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':501698).
lisp_trans(=>(actCombining(COMBINE),exists([OBJ],and(tSumoSelfConnectedObject(OBJ),patient(COMBINE,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':501959).
lisp_trans(genls(actSeparating,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502107).
lisp_trans(disjointWith(actSeparating,actCombining),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502147).
lisp_trans(documentation(actSeparating,vEnglishLanguage,s("A","#$Process","where","a","#$SelfConnectedObject","is","separated","into","(","some","of",")","its","#$parts",".","Note","that","#$Separating","is","different","from","#$Detaching","in","that","the","latter","only","results","in","the","two","objects","not","being","#$connected",".","Note","too","that","#$Separating","is","different","from","#$Removing","in","that","one","or","both","of","the","two","things","which","are","separated","may","or","may","not","be","moved","from","the","location","where","they","were","separated",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502179).
lisp_trans(=>(actSeparating(SEPARATE),exists([OBJ],and(tSumoSelfConnectedObject(OBJ),patient(SEPARATE,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502620).
lisp_trans(genls(eventChemicalProcess,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502771).
lisp_trans(sumo_partition(eventChemicalProcess,actChemicalSynthesis,eventChemicalDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502813).
lisp_trans(documentation(eventChemicalProcess,vEnglishLanguage,s("A","#$ChemicalProcess","occurs","whenever","chemical","compounds","(","#$CompoundSubstances",")","are","formed","or","decomposed",".","For","example",",","reactants","disappear","as","chemical","change","occurs",",","and","products","appear","as","chemical","change","occurs",".","In","a","chemical","change","a","chemical","reaction","takes","place",".","Catalysts","in","a","#$ChemicalProcess","may","speed","up","the","reaction",",","but","aren","'t","themselves","produced","or","consumed",".","Examples",":","rusting","of","iron","and","the","decomposition","of","water",",","induced","by","an","electric","current",",","to","gaseous","hydrogen","and","gaseous","oxygen",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':502881).
lisp_trans(=>(and(eventChemicalProcess(PROC),or(resource(PROC,STUFF),result(PROC,STUFF))),tPureSubstance(STUFF)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':503434).
lisp_trans(genls(actChemicalSynthesis,eventChemicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':503598).
lisp_trans(genls(actChemicalSynthesis,actCombining),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':503643).
lisp_trans(documentation(actChemicalSynthesis,vEnglishLanguage,s("The","#$Class","of","#$ChemicalProcesses","in","which","a","#$CompoundSubstance","is","formed","from","simpler","reactants",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':503682).
lisp_trans(=>(and(resource(PROC,SUBSTANCE1),result(PROC,SUBSTANCE2),tSumoElementalSubstance(SUBSTANCE1),tSumoCompoundSubstance(SUBSTANCE2)),actChemicalSynthesis(PROC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':503835).
lisp_trans(<=>(tSumoCompoundSubstance(COMPOUND),exists([ELEMENT1,ELEMENT2,PROCESS],and(tSumoElementalSubstance(ELEMENT1),tSumoElementalSubstance(ELEMENT2),not(equal(ELEMENT1,ELEMENT2)),actChemicalSynthesis(PROCESS),resource(PROCESS,ELEMENT1),resource(PROCESS,ELEMENT2),result(PROCESS,COMPOUND)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504051).
lisp_trans(genls(eventChemicalDecomposition,eventChemicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504458).
lisp_trans(genls(eventChemicalDecomposition,actSeparating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504507).
lisp_trans(documentation(eventChemicalDecomposition,vEnglishLanguage,s("The","#$Class","of","#$ChemicalProcesses","in","which","a","#$CompoundSubstance","breaks","down","into","simpler","products",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504551).
lisp_trans(=>(and(resource(PROC,SUBSTANCE1),result(PROC,SUBSTANCE2),tSumoCompoundSubstance(SUBSTANCE1),tSumoElementalSubstance(SUBSTANCE2)),eventChemicalDecomposition(PROC)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504709).
lisp_trans(genls(actCombustion,eventChemicalDecomposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504929).
lisp_trans(documentation(actCombustion,vEnglishLanguage,s("The","#$Class","of","#$ChemicalProcesses","in","which","an","#$Object","reacts","with","oxygen","and","gives","off","heat",".","This","includes","all","#$Processes","in","which","something","is","burning",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':504973).
lisp_trans(=>(actCombustion(COMBUSTION),exists([HEAT,LIGHT],and(actHeating(HEAT),tSumoRadiatingLight(LIGHT),subProcess(HEAT,COMBUSTION),subProcess(LIGHT,COMBUSTION)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505176).
lisp_trans(vtPhysicalAttribute(tSumoFlammable),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505415).
lisp_trans(documentation(tSumoFlammable,vEnglishLanguage,s("The","#$Attribute","of","being","flammable","at","normal","temperatures","(","i",".","e",".","not","while","a","#$Plasma",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505454).
lisp_trans(=>(sumoAttribute(X,tSumoFlammable),capability(actCombustion,patient,X)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505585).
lisp_trans(genls(tSumoInternalChange,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505655).
lisp_trans(documentation(tSumoInternalChange,vEnglishLanguage,'Processes which involve altering an internal property of an #$Object, e.g. the shape of the #$Object, its coloring, its structure, etc.  #$Processes that are not instances of this class include changes that only affect the relationship to other objects, e.g. changes in spatial or temporal location.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':505689).
lisp_trans(=>(and(tSumoInternalChange(CHANGE),patient(CHANGE,OBJ)),exists([PROPERTY],or(and(holdsDuring(uBeginFn(uWhenFn(CHANGE)),sumoAttribute(OBJ,PROPERTY)),holdsDuring(iTimeOf_EndFn(uWhenFn(CHANGE)),not(sumoAttribute(OBJ,PROPERTY)))),and(holdsDuring(uBeginFn(uWhenFn(CHANGE)),not(sumoAttribute(OBJ,PROPERTY))),holdsDuring(iTimeOf_EndFn(uWhenFn(CHANGE)),sumoAttribute(OBJ,PROPERTY)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':506041).
lisp_trans(genls(tSumoSurfaceChange,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':506518).
lisp_trans(documentation(tSumoSurfaceChange,vEnglishLanguage,'Processes which involve altering the properties that apply to the surface of an #$Object.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':506558).
lisp_trans(=>(and(tSumoSurfaceChange(ALT),patient(ALT,OBJ)),exists([PART,PROPERTY],and(superficialPart(PART,OBJ),or(and(holdsDuring(uBeginFn(uWhenFn(ALT)),sumoAttribute(PART,PROPERTY)),holdsDuring(iTimeOf_EndFn(uWhenFn(ALT)),not(sumoAttribute(PART,PROPERTY)))),and(holdsDuring(uBeginFn(uWhenFn(ALT)),not(sumoAttribute(PART,PROPERTY))),holdsDuring(iTimeOf_EndFn(uWhenFn(ALT)),sumoAttribute(PART,PROPERTY))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':506699).
lisp_trans(genls(actColoring,tSumoSurfaceChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':507238).
lisp_trans(documentation(actColoring,vEnglishLanguage,s("The","#$subclass","of","#$SurfaceChange","where","a","#$ColorAttribute","of","the","#$patient","is","altered",".","Note","that","the","change","in","color","may","apply","to","just","part","of","the","object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':507272).
lisp_trans(=>(and(actColoring(COLORING),patient(COLORING,OBJ)),exists([PROPERTY,PART],and(part(PART,OBJ),vtColorAttribute(PROPERTY),or(and(holdsDuring(uBeginFn(uWhenFn(COLORING)),sumoAttribute(PART,PROPERTY)),holdsDuring(iTimeOf_EndFn(uWhenFn(COLORING)),not(sumoAttribute(PART,PROPERTY)))),and(holdsDuring(uBeginFn(uWhenFn(COLORING)),not(sumoAttribute(PART,PROPERTY))),holdsDuring(iTimeOf_EndFn(uWhenFn(COLORING)),sumoAttribute(PART,PROPERTY))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':507473).
lisp_trans(genls(tSumoShapeChange,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508071).
lisp_trans(documentation(tSumoShapeChange,vEnglishLanguage,s("The","#$Process","of","changing","the","shape","of","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508109).
lisp_trans(=>(and(tSumoShapeChange(ALT),patient(ALT,OBJ)),exists([PROPERTY],and(vtShapeAttribute(PROPERTY),or(and(holdsDuring(uBeginFn(uWhenFn(ALT)),sumoAttribute(OBJ,PROPERTY)),holdsDuring(iTimeOf_EndFn(uWhenFn(ALT)),not(sumoAttribute(OBJ,PROPERTY)))),and(holdsDuring(uBeginFn(uWhenFn(ALT)),not(sumoAttribute(OBJ,PROPERTY))),holdsDuring(iTimeOf_EndFn(uWhenFn(ALT)),sumoAttribute(OBJ,PROPERTY))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508208).
lisp_trans(genls(tSumoContentDevelopment,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508742).
lisp_trans(documentation(tSumoContentDevelopment,vEnglishLanguage,s("A","#$subclass","of","#$IntentionalProcess","in","which","content","is","modified",",","its","form","is","altered","or","it","is","created","anew",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508791).
lisp_trans(=>(tSumoContentDevelopment(DEVELOP),exists([OBJ],and(tSumoContentBearingObject(OBJ),result(DEVELOP,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':508955).
lisp_trans(genls(actReading,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509112).
lisp_trans(relatedInternalConcept(actReading,actInterpreting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509150).
lisp_trans(documentation(actReading,vEnglishLanguage,s("A","#$subclass","of","#$ContentDevelopment","in","which","content","is","converted","from","a","written","form","into","a","spoken","representation",".","Note","that","the","class","#$Interpreting","should","be","used","in","cases","where","a","#$Text","is","read","silently",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509196).
lisp_trans(=>(actReading(READ),exists([TEXT,PROP],and(tSumoText(TEXT),containsInformation(TEXT,PROP),realization(READ,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509448).
lisp_trans(genls(actWriting,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509629).
lisp_trans(documentation(actWriting,vEnglishLanguage,s("A","#$subclass","of","#$ContentDevelopment","in","which","content","is","converted","from","one","form","(","e",".","g",".","uttered",",","written","or","represented","mentally",")","into","a","written","form",".","Note","that","this","class","covers","both","transcription","and","original","creation","of","written","#$Texts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509667).
lisp_trans(genls(actEncoding,actWriting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509950).
lisp_trans(documentation(actEncoding,vEnglishLanguage,s("Converting","a","document","or","message","into","a","formal","language","or","into","a","code","that","can","be","understood","only","by","a","relatively","small","body","of","#$Agents",".","Generally","speaking",",","this","hinders","wide","dissemination","of","the","content","in","the","original","document","or","message",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':509978).
lisp_trans(genls(actDecoding,actWriting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510266).
lisp_trans(disjointWith(actDecoding,actEncoding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510294).
lisp_trans(documentation(actDecoding,vEnglishLanguage,s("Converting","a","document","or","message","that","has","previously","been","encoded","(","see","#$Encoding",")","into","a","#$Language","that","can","be","understood","by","a","relatively","large","number","of","speakers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510323).
lisp_trans(=>(and(actDecoding(DECODE),patient(DECODE,DOC1)),exists([ENCODE,DOC2,TIME],and(containsInformation(DOC2,PROP),containsInformation(DOC1,PROP),temporalPart(TIME,tColOfPastFn(uWhenFn(DECODE))),holdsDuring(TIME,and(actEncoding(ENCODE),patient(ENCODE,DOC2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510533).
lisp_trans(genls(actTranslating,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510926).
lisp_trans(genls(actTranslating,actDualObjectProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':510968).
lisp_trans(documentation(actTranslating,vEnglishLanguage,s("Converting","content","from","one","#$Language","into","another",".","This","covers","oral","translation","(","i",".","e",".","interpreting",")","as","well","as","written","translation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511009).
lisp_trans(=>(and(actTranslating(TRANSLATE),patient(TRANSLATE,EXPRESSION1),result(TRANSLATE,EXPRESSION2)),exists([LANGUAGE1,LANGUAGE2,ENTITY],and(representsInLanguage(EXPRESSION1,ENTITY,LANGUAGE1),representsInLanguage(EXPRESSION2,ENTITY,LANGUAGE2),not(equal(LANGUAGE1,LANGUAGE2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511190).
lisp_trans(genls(actWetting,actPutting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511553).
lisp_trans(documentation(actWetting,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","a","#$Liquid","is","added","to","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511580).
lisp_trans(=>(actWetting(WET),exists([OBJ],and(patient(WET,OBJ),holdsDuring(uBeginFn(uWhenFn(WET)),not(sumoAttribute(OBJ,vDamp))),holdsDuring(iTimeOf_EndFn(uWhenFn(WET)),sumoAttribute(OBJ,vDamp))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511692).
lisp_trans(=>(actWetting(WET),exists([OBJ],and(sumoAttribute(OBJ,tSumoLiquid),patient(WET,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':511976).
lisp_trans(genls(eventDrying,actRemoving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512102).
lisp_trans(documentation(eventDrying,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","a","#$Liquid","is","removed","from","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512129).
lisp_trans(=>(and(eventDrying(DRY),patient(DRY,OBJ)),holdsDuring(iTimeOf_EndFn(uWhenFn(DRY)),sumoAttribute(OBJ,vDry))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512244).
lisp_trans(genls(actCreation,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512380).
lisp_trans(relatedInternalConcept(actCreation,actDestruction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512415).
lisp_trans(documentation(actCreation,vEnglishLanguage,s("The","#$subclass","of","#$Process","in","which","something","is","created",".","Note","that","the","thing","created","is","specified","with","the","#$result","#$CaseRole",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512461).
lisp_trans(=>(actCreation(ACTION),exists([RESULT],result(ACTION,RESULT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512636).
lisp_trans(<=>(actCreation(PROCESS),exists([PATIENT],and(patient(PROCESS,PATIENT),time(PATIENT,iTimeOf_EndFn(uWhenFn(PROCESS))),not(time(PATIENT,uBeginFn(uWhenFn(PROCESS))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512726).
lisp_trans(genls(actMaking,actCreation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512959).
lisp_trans(genls(actMaking,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':512986).
lisp_trans(documentation(actMaking,vEnglishLanguage,s("The","#$subclass","of","#$Creation","in","which","an","individual","#$Artifact","or","a","type","of","#$Artifact","is","made",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513023).
lisp_trans(=>(actMaking(MAKING),exists([ARTIFACT],and(tObjectArtifact(ARTIFACT),result(MAKING,ARTIFACT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513161).
lisp_trans(genls(actConstructing,actMaking),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513297).
lisp_trans(documentation(actConstructing,vEnglishLanguage,s("The","#$subclass","of","#$Making","in","which","a","#$StationaryArtifact","is","built",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513328).
lisp_trans(<=>(exists([BUILD],and(actConstructing(BUILD),result(BUILD,ARTIFACT))),tObjectStationaryArtifact(ARTIFACT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513445).
lisp_trans(genls(tSumoManufacture,actMaking),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513603).
lisp_trans(documentation(tSumoManufacture,vEnglishLanguage,s("The","#$Making","of","#$Artifacts","on","a","mass","scale",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513633).
lisp_trans(genls(actPublication,tSumoManufacture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513725).
lisp_trans(genls(actPublication,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513760).
lisp_trans(documentation(actPublication,vEnglishLanguage,s("The","#$Manufacture","of","#$Texts",".","Note","that","there","is","no","implication","that","the","#$Texts","are","distributed",".","Such","distribution",",","when","it","occurs",",","is","an","instance","of","#$Dissemination",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':513802).
lisp_trans(=>(and(actPublication(PUB),patient(PUB,TEXT)),genls(TEXT,tSumoText)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514019).
lisp_trans(genls(actCooking,actMaking),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514120).
lisp_trans(documentation(actCooking,vEnglishLanguage,s("The","#$Making","of","an","#$instance","of","#$Food",".","Note","that","this","can","cover","any","preparation","of","#$Food",",","e",".","g",".","making","a","salad",",","cutting","up","fruit",",","etc",".","It","does","not","necessarily","involve","the","application","of","heat",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514146).
lisp_trans(=>(actCooking(COOK),exists([FOOD],and(isa(FOOD,uFoodForFn(tSumoOrganism)),result(COOK,FOOD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514385).
lisp_trans(genls(actPursuing,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514528).
lisp_trans(documentation(actPursuing,vEnglishLanguage,s("The","class","of","#$IntentionalProcesses","where","something","is","sought",".","Some","examples","would","be","hunting",",","shopping",",","trawling",",","and","stalking",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514567).
lisp_trans(=>(actPursuing(PURSUE),exists([OBJ],and(tSumoObject(OBJ),patient(PURSUE,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514741).
lisp_trans(=>(and(actPursuing(PURSUE),agent(PURSUE,AGENT),patient(PURSUE,OBJ)),holdsDuring(PURSUE,wants(AGENT,OBJ))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':514873).
lisp_trans(=>(and(actPursuing(PURSUE),agent(PURSUE,AGENT),patient(PURSUE,OBJ)),holdsDuring(PURSUE,not(possesses(AGENT,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515025).
lisp_trans(genls(actHunting,actPursuing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515187).
lisp_trans(documentation(actHunting,vEnglishLanguage,s("Hunting","is","the","class","of","#$Processes","in","which","an","animal","or","animals","are","pursued","and","sometimes","captured","and","/","or","killed",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515215).
lisp_trans(=>(actHunting(H),exists([T],and(tClazzAnimal(T),patient(H,T)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515373).
lisp_trans(=>(and(actHunting(H),patient(H,P)),hasPurpose(H,exists([PROC],and(patient(PROC,P),or(actConfining(PROC),actKilling(PROC)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515478).
lisp_trans(genls(actInvestigating,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515759).
lisp_trans(documentation(actInvestigating,vEnglishLanguage,s("The","class","of","#$IntentionalPsychologicalProcesses","where","the","#$agent","attempts","to","obtaina","information","(","i",".","e",".","a","#$Proposition","denoted","by","a","#$Formula",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515803).
lisp_trans(=>(and(actInvestigating(INVESTIGATE),patient(INVESTIGATE,PROP)),ftFormula(PROP)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':515998).
lisp_trans(=>(and(actInvestigating(INVESTIGATE),agent(INVESTIGATE,AGENT),patient(INVESTIGATE,PROP)),holdsDuring(uWhenFn(INVESTIGATE),not(knows(AGENT,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516120).
lisp_trans(=>(and(actInvestigating(INVESTIGATE),agent(INVESTIGATE,AGENT),patient(INVESTIGATE,PROP)),hasPurposeForAgent(INVESTIGATE,knows(AGENT,PROP),AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516314).
lisp_trans(genls(actExperimenting,actInvestigating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516523).
lisp_trans(documentation(actExperimenting,vEnglishLanguage,'Investigating the truth of a #$Proposition by constructing and observing a trial.  Note that the trial may be either controlled or uncontrolled, blind or not blind.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516562).
lisp_trans(genls(actDiagnosticProcess,actInvestigating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516778).
lisp_trans(documentation(actDiagnosticProcess,vEnglishLanguage,s("A","#$Process","that","is","carried","out","for","the","purpose","of","determining","the","nature","of","a","#$DiseaseOrSyndrome",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516821).
lisp_trans(=>(and(actDiagnosticProcess(PROC),agent(PROC,AGENT)),exists([CAUSE],hasPurposeForAgent(PROC,knows(AGENT,causes(CAUSE,PROC)),AGENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':516974).
lisp_trans(genls(actSearching,actInvestigating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':517156).
lisp_trans(documentation(actSearching,vEnglishLanguage,s("An","#$IntentionalProcess","which","has","the","purpose","for","a","#$CognitiveAgent","to","learn","the","location","of","a","#$Physical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':517191).
lisp_trans(=>(actSearching(S),exists([AGENT,OBJ,LOC],and(mobCognitiveAgent(AGENT),agent(S,AGENT),tSumoPhysical(OBJ),patient(S,OBJ),tSumoObject(LOC),located(OBJ,LOC),hasPurposeForAgent(S,knows(AGENT,located(OBJ,LOC)),AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':517344).
lisp_trans(=>(and(actSearching(S),patient(S,OBJ),tSumoPhysical(OBJ)),exists([LOC,AGENT],and(mobCognitiveAgent(AGENT),agent(S,AGENT),tSumoObject(LOC),located(OBJ,LOC),hasPurposeForAgent(S,knows(AGENT,located(OBJ,LOC)),AGENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':517679).
lisp_trans(genls(actSocialInteraction,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518015).
lisp_trans(documentation(actSocialInteraction,vEnglishLanguage,s("The","#$subclass","of","#$IntentionalProcess","that","involves","interactions","between","#$CognitiveAgents",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518063).
lisp_trans(=>(actSocialInteraction(INTERACTION),exists([AGENT1,AGENT2],and(involvedInEvent(INTERACTION,AGENT1),involvedInEvent(INTERACTION,AGENT2),tAgent(AGENT1),tAgent(AGENT2),not(equal(AGENT1,AGENT2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518209).
lisp_trans(genls(actPretending,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518517).
lisp_trans(documentation(actPretending,vEnglishLanguage,s("Any","#$SocialInteraction","where","a","#$CognitiveAgent","or","#$Group","of","#$CognitiveAgents","attempts","to","make","another","#$CognitiveAgent","or","#$Group","of","#$CognitiveAgents","believe","something","that","is","false",".","This","covers","deceit",",","affectation",",","impersonation",",","and","entertainment","productions",",","to","give","just","a","few","examples",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518557).
lisp_trans(=>(actPretending(PRETEND),exists([PERSON,PROP],and(hasPurpose(PRETEND,believes(PERSON,PROP)),truth(PROP,vFalse)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':518900).
lisp_trans(genls(actCommunication,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519065).
lisp_trans(genls(actCommunication,actContentBearingProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519108).
lisp_trans(sumo_partition(actCommunication,actStating,actSupposing,actDirecting,actCommitting,actExpressing,actDeclaring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519155).
lisp_trans(relatedInternalConcept(actCommunication,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519241).
lisp_trans(documentation(actCommunication,vEnglishLanguage,s("A","#$SocialInteraction","that","involves","the","transfer","of","information","between","two","or","more","#$CognitiveAgents",".","Note","that","#$Communication","is","closely","related","to",",","but","essentially","different","from",",","#$ContentDevelopment",".","The","latter","involves","the","creation","or","modification","of","a","#$ContentBearingObject",",","while","#$Communication","is","the","transfer","of","information","for","the","purpose","of","conveying","a","message",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519299).
lisp_trans(=>(actCommunication(COMMUNICATE),exists([PHYS,ENTITY,AGENT1,AGENT2],and(refers(PHYS,ENTITY),patient(COMMUNICATE,PHYS),mobCognitiveAgent(AGENT1),agent(COMMUNICATE,AGENT1),mobCognitiveAgent(AGENT2),destination(COMMUNICATE,AGENT2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':519726).
lisp_trans(genls(actDisseminating,actCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520067).
lisp_trans(documentation(actDisseminating,vEnglishLanguage,s("Any","#$Communication","that","involves","a","single","#$agent","and","many","#$destinations",".","This","covers","the","release","of","a","published","book",",","broadcasting",",","a","theatrical","performance",",","giving","orders","to","assembled","troops",",","delivering","a","public","lecture",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520106).
lisp_trans(=>(actDisseminating(DISSEMINATE),exists([AGENT1,AGENT2],and(destination(DISSEMINATE,AGENT1),mobCognitiveAgent(AGENT1),destination(DISSEMINATE,AGENT2),mobCognitiveAgent(AGENT2),not(equal(AGENT1,AGENT2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520386).
lisp_trans(genls(actDemonstrating,actDisseminating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520688).
lisp_trans(documentation(actDemonstrating,vEnglishLanguage,s("Exhibiting","something","or","a","range","of","things","before","the","public","in","a","particular","location",".","This","would","cover","software","demos",",","theatrical","plays",",","lectures",",","dance","and","music","recitals",",","museum","exhibitions",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520727).
lisp_trans(=>(actDemonstrating(DEMO),exists([PERSON],attends(DEMO,PERSON))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':520975).
lisp_trans(genlPreds(attends,experiencer),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521067).
lisp_trans(rtCaseRole(attends),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521101).
lisp_trans(rtPartialValuedRelation(attends),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521129).
lisp_trans(argIsa(attends,1,actDemonstrating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521170).
lisp_trans(argIsa(attends,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521203).
lisp_trans(documentation(attends,vEnglishLanguage,s("(","#$attends","?","DEMO","?","PERSON",")","means","that","?","PERSON","attends",",","i",".","e",".","is","a","member","of","the","audience",",","of","the","performance","event","?","DEMO",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521228).
lisp_trans(genls(stateGesture,actCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521391).
lisp_trans(genls(stateGesture,actBodyMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521424).
lisp_trans(documentation(stateGesture,vEnglishLanguage,s("Any","#$BodyMotion",",","e",".","g",".","a","hand","wave",",","a","nod","of","the","head",",","a","smile",",","which","is","also","an","instance","of","#$Communication",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521454).
lisp_trans(genls(actAdvertising,actDisseminating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521607).
lisp_trans(documentation(actAdvertising,vEnglishLanguage,s("A","#$Disseminating","whose","purpose","is","to","promote","the","sale","of","an","#$Object","represented","in","a","#$Text","or","#$Icon","(","the","advertisement",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521644).
lisp_trans(=>(actAdvertising(ADVERT),exists([OBJ],and(refers(ADVERT,OBJ),hasPurpose(ADVERT,exists([SALE],and(actSelling(SALE),patient(SALE,OBJ))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':521816).
lisp_trans(genls(actExpressing,actCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522017).
lisp_trans(documentation(actExpressing,vEnglishLanguage,s("Instances","of","this","#$Class","express","a","state","of","the","#$agent",".","For","example",",","Jane","thanked","Barbara","for","the","present","she","had","given","her",".","The","thanking","in","this","case","expresses","the","gratitude","of","Jane","towards","Barbara",".","Note","that","#$Expressing",",","unlike","the","other","speech","act","types",",","is","not","a","subclass","of","#$LinguisticCommunication",".","This","is","because","emotions",",","for","example",",","can","be","expressed","without","language",",","e",".","g",".","by","smiling",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522053).
lisp_trans(=>(and(actExpressing(EXPRESS),agent(EXPRESS,AGENT)),exists([STATE],and(tSumoStateOfMind(STATE),sumoAttribute(AGENT,STATE),represents(EXPRESS,STATE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522501).
lisp_trans(genls(actLinguisticCommunication,actCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522728).
lisp_trans(documentation(actLinguisticCommunication,vEnglishLanguage,s("A","#$Communication","that","involves","the","transfer","of","information","via","a","#$LinguisticExpression",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522777).
lisp_trans(=>(actLinguisticCommunication(COMMUNICATE),exists([OBJ],and(represents(COMMUNICATE,OBJ),ftLinguisticExpression(OBJ),patient(COMMUNICATE,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':522926).
lisp_trans(genls(actStating,actLinguisticCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':523137).
lisp_trans(documentation(actStating,vEnglishLanguage,s("Instances","of","this","#$Class","commit","the","#$agent","to","some","truth",".","For","example",",","John","claimed","that","the","moon","is","made","of","green","cheese",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':523180).
lisp_trans(=>(and(actStating(STATE),agent(STATE,AGENT),patient(STATE,FORMULA),ftFormula(FORMULA)),holdsDuring(uWhenFn(STATE),believes(AGENT,FORMULA))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':523348).
lisp_trans(genls(actDisagreeing,actStating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':523549).
lisp_trans(documentation(actDisagreeing,vEnglishLanguage,s("A","#$Stating","in","which","two","#$Agents","have","contradictory","statements",".","This","is","distinguished","from","#$Arguing","in","that","the","statement","in","dispute","may","be","a","simple","assertion",",","rather","than","a","chain","of","deduction",",","and","that","two","entities","must","be","disagreeing","with","each","other",",","whereas","a","single","entity","may","craft","an","argument","for","a","given","point","of","view",",","without","the","need","for","another","agent","to","disagree","with",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':523580).
lisp_trans(=>(actDisagreeing(DIS),exists([A1,A2,STATE1,STATE2,STMT1,STMT2],and(subProcess(STATE1,DIS),subProcess(STATE2,DIS),agent(STATE1,A1),agent(STATE2,A2),not(equal(A1,A2)),containsInformation(STATE1,STMT1),containsInformation(STATE2,STMT2),not(consistent(STMT1,STMT2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524008).
lisp_trans(genls(actSupposing,actLinguisticCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524390).
lisp_trans(documentation(actSupposing,vEnglishLanguage,s("Instances","of","this","#$Class","suppose",",","for","the","sake","of","argument",",","that","a","proposition","is","true",".","For","example",",","John","considered","what","he","would","do","if","he","won","the","lottery",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524435).
lisp_trans(genls(actDirecting,actLinguisticCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524639).
lisp_trans(documentation(actDirecting,vEnglishLanguage,s("Instances","of","this","#$Class","urge","some","further","action","among","the","receivers",".","A","#$Directing","can","be","an","#$Ordering",",","a","#$Requesting","or","a","#$Questioning",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524684).
lisp_trans(genls(actOrdering,actDirecting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524873).
lisp_trans(documentation(actOrdering,vEnglishLanguage,s("A","#$Directing","in","which","the","receiver","is","commanded","to","realize","the","content","of","a","#$ContentBearingObject",".","Orders","are","injunctions",",","the","disobedience","of","which","involves","sanctions",",","or","which","express","an","obligation","upon","the","part","of","the","orderee",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':524903).
lisp_trans(=>(and(actOrdering(ORDER),patient(ORDER,FORMULA)),modalAttribute(FORMULA,cwObligation)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525180).
lisp_trans(genls(actRequesting,actDirecting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525300).
lisp_trans(documentation(actRequesting,vEnglishLanguage,s("A","request","expresses","a","desire","that","some","future","action","be","performed",".","For","example",",","the","5","th","Battalion","requested","air","support","from","the","3","rd","Bomber","Group",".","Note","that","this","class","covers","proposals",",","recommendations",",","suggestions",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525332).
lisp_trans(=>(and(actRequesting(REQUEST),agent(REQUEST,AGENT),patient(REQUEST,FORMULA),ftFormula(FORMULA)),desires(AGENT,FORMULA)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525601).
lisp_trans(genls(actQuestioning,actDirecting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525780).
lisp_trans(documentation(actQuestioning,vEnglishLanguage,s("A","request","for","information",".","For","example",",","John","asked","Bill","if","the","President","had","said","anything","about","taxes","in","his","State","of","the","Union","address",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525813).
lisp_trans(=>(and(actQuestioning(QUESTION),agent(QUESTION,AGENT),patient(QUESTION,FORMULA),ftFormula(FORMULA)),holdsDuring(uWhenFn(QUESTION),not(knows(AGENT,FORMULA)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':525999).
lisp_trans(genls(actCommitting,actLinguisticCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526219).
lisp_trans(documentation(actCommitting,vEnglishLanguage,s("Instances","of","this","#$Class","commit","the","#$agent","to","some","future","course",".","For","example",",","Bob","promised","Susan","that","he","would","be","home","by","11","pm",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526265).
lisp_trans(=>(and(actCommitting(COMMIT),patient(COMMIT,FORMULA),ftFormula(FORMULA)),modalAttribute(FORMULA,eventPromise)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526443).
lisp_trans(genls(actOffering,actCommitting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526598).
lisp_trans(documentation(actOffering,vEnglishLanguage,s("The","subclass","of","#$Committing","in","which","a","#$CognitiveAgent","offers","something","#$Physical","to","another","agent",".","Offerings","may","be","unconditional","(","in","which","case","they","are","a","promise","to","effect","a","#$UnilateralGiving",")","or","conditional","(","in","which","case","they","are","a","promise","to","effect","a","#$Transaction","of","some","sort",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526630).
lisp_trans(genls(actDeclaring,actLinguisticCommunication),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':526965).
lisp_trans(documentation(actDeclaring,vEnglishLanguage,s("The","#$Class","of","#$LinguisticCommunications","that","effect","an","institutional","alteration","when","performed","by","competent","authority",".","Some","examples","are","nominating",",","marrying",",","and","excommunicating",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527010).
lisp_trans(=>(actDeclaring(DECLARE),exists([PROP,NORM],or(confersNorm(DECLARE,PROP,NORM),deprivesNorm(DECLARE,PROP,NORM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527237).
lisp_trans(genls(actNaming,actDeclaring),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527402).
lisp_trans(documentation(actNaming,vEnglishLanguage,s("The","#$Process","of","assigning","a","name","to","someone","or","something",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527430).
lisp_trans(=>(and(actNaming(PROCESS),patient(PROCESS,THING),destination(PROCESS,NAME)),holdsDuring(eventFutureFn(uWhenFn(PROCESS)),names(NAME,THING))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527531).
lisp_trans(genls(actCooperation,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527713).
lisp_trans(documentation(actCooperation,vEnglishLanguage,s("The","#$subclass","of","#$SocialInteraction","where","the","participants","involved","work","together","for","the","achievement","of","a","common","goal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527754).
lisp_trans(=>(actCooperation(COOPERATE),exists([PURP],all([AGENT],=>(agent(COOPERATE,AGENT),hasPurposeForAgent(COOPERATE,PURP,AGENT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':527923).
lisp_trans(genls(actMeeting,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528119).
lisp_trans(documentation(actMeeting,vEnglishLanguage,s("The","coming","together","of","two","or","more","#$CognitiveAgents","for","the","purpose","of","#$Communication",".","This","covers","informal","meetings",",","e",".","g",".","visits","with","family","members",",","and","formal","meetings",",","e",".","g",".","a","board","of","directors","meeting",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528156).
lisp_trans(=>(and(actMeeting(MEET),agent(MEET,AGENT1),agent(MEET,AGENT2)),holdsDuring(uWhenFn(MEET),orientation(AGENT1,AGENT2,tSumoNear))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528409).
lisp_trans(=>(actMeeting(MEET),exists([AGENT1,AGENT2],and(agent(MEET,AGENT1),agent(MEET,AGENT2),hasPurpose(MEET,exists([COMM],and(actCommunication(COMM),agent(COMM,AGENT1),agent(COMM,AGENT2))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528578).
lisp_trans(genls(tSumoContest,actSocialInteraction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528911).
lisp_trans(documentation(tSumoContest,vEnglishLanguage,s("A","#$SocialInteraction","where","the","#$agent","and","#$patient","are","#$CognitiveAgents","who","are","trying","to","defeat","one","another",".","Note","that","this","concept","is","often","applied","in","a","metaphorical","sense","in","natural","language",",","when","we","speak",",","e",".","g",".",",","of","the","struggle","of","plants","for","space","or","sunlight",",","or","of","bacteria","for","food","resources","in","some","environment",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':528948).
lisp_trans(=>(tSumoContest(CONTEST),exists([AGENT1,AGENT2,PURP1,PURP2],and(agent(CONTEST,AGENT1),agent(CONTEST,AGENT2),hasPurposeForAgent(CONTEST,PURP1,AGENT1),hasPurposeForAgent(CONTEST,PURP2,AGENT2),not(equal(AGENT1,AGENT2)),not(equal(PURP1,PURP2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':529315).
lisp_trans(genls(tSumoViolentContest,tSumoContest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':529684).
lisp_trans(documentation(tSumoViolentContest,vEnglishLanguage,s("A","#$Contest","where","one","participant","attempts","to","physically","injure","another","participant",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':529718).
lisp_trans(genls(actWar,tSumoViolentContest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':529853).
lisp_trans(documentation(actWar,vEnglishLanguage,s("A","military","confrontation","between","two","or","more","#$GeopoliticalAreas","or","#$Organizations","whose","members","are","#$GeopoliticalAreas",".","As","the","corresponding","axiom","specifies",",","a","#$War","is","made","up","of","#$Battles",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':529883).
lisp_trans(=>(actWar(WAR),exists([BATTLE],and(actBattle(BATTLE),subProcess(BATTLE,WAR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':530116).
lisp_trans(=>(and(actWar(WAR),agent(WAR,AGENT)),or(tSumoGeopoliticalArea(AGENT),and(tGroupedOrganization(AGENT),all([MEMBER],=>(member(MEMBER,AGENT),tSumoGeopoliticalArea(MEMBER)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':530249).
lisp_trans(genls(actBattle,tSumoViolentContest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':530552).
lisp_trans(documentation(actBattle,vEnglishLanguage,s("A","#$ViolentContest","between","two","or","more","military","units","within","the","context","of","a","war",".","Note","that","this","does","not","cover","the","metaphorical","sense","of","'","battle","'",",","which","simply","means","a","struggle","of","some","sort",".","This","sense","should","be","represented","with","the","more","general","concept","of","#$Contest",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':530585).
lisp_trans(=>(actBattle(BATTLE),exists([WAR],and(actWar(WAR),subProcess(BATTLE,WAR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':530899).
lisp_trans(=>(actBattle(BATTLE),exists([ATTACK],and(tSumoViolentContest(ATTACK),subProcess(ATTACK,BATTLE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531029).
lisp_trans(genls(tGame,tSumoContest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531179).
lisp_trans(genls(tGame,tSumoRecreationOrExercise),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531203).
lisp_trans(documentation(tGame,vEnglishLanguage,s("A","#$Contest","whose","purpose","is","the","enjoyment","/","stimulation","of","the","participants","or","spectators","of","the","#$Game",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531240).
lisp_trans(genls(tSport,tGame),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531384).
lisp_trans(documentation(tSport,vEnglishLanguage,s("A","#$Game","which","requires","some","degree","of","physical","exercion","from","the","participants","of","the","game",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531406).
lisp_trans(genls(actLegalAction,tSumoContest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531539).
lisp_trans(documentation(actLegalAction,vEnglishLanguage,s("Any","#$Process","where","a","#$CognitiveAgent","seeks","to","obtain","something","through","a","court","of","law",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531570).
lisp_trans(genls(tSumoManeuver,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531706).
lisp_trans(documentation(tSumoManeuver,vEnglishLanguage,s("An","intentional","move","or","play","within","a","#$Contest",".","In","many","cases",",","a","#$Maneuver","is","a","realization","of","part","of","a","strategy","for","winning","the","#$Contest",",","but","it","also","may","be","just","an","arbitrary","or","semi","-","arbitrary","division","of","the","overarching","#$Contest",",","e",".","g",".","innings","in","a","baseball","game",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':531745).
lisp_trans(=>(tSumoManeuver(MOVE),exists([CONTEST],and(tSumoContest(CONTEST),subProcess(MOVE,CONTEST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532058).
lisp_trans(genls(tSumoAttack,tSumoManeuver),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532202).
lisp_trans(documentation(tSumoAttack,vEnglishLanguage,s("A","#$Maneuver","in","a","#$ViolentContest","where","the","#$agent","attempts","to","inflict","damage","on","the","#$patient",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532229).
lisp_trans(=>(tSumoAttack(ATTACK),exists([CONTEST],and(tSumoViolentContest(CONTEST),subProcess(ATTACK,CONTEST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532369).
lisp_trans(=>(and(tSumoAttack(ATTACK),agent(ATTACK,AGENT),patient(ATTACK,OBJ)),hasPurposeForAgent(ATTACK,exists([DAMAGE],and(actDamaging(DAMAGE),patient(DAMAGE,OBJ))),AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532522).
lisp_trans(genls(tSumoDefensiveManeuver,tSumoManeuver),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532772).
lisp_trans(documentation(tSumoDefensiveManeuver,vEnglishLanguage,s("A","#$Maneuver","in","a","#$ViolentContest","where","the","#$agent","attempts","to","avoid","being","damaged",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532810).
lisp_trans(=>(tSumoDefensiveManeuver(DEFENSE),exists([CONTEST],and(tSumoViolentContest(CONTEST),subProcess(DEFENSE,CONTEST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':532949).
lisp_trans(=>(and(tSumoDefensiveManeuver(DEFENSE),agent(DEFENSE,AGENT)),hasPurposeForAgent(DEFENSE,not(exists([DAMAGE],and(actDamaging(DAMAGE),patient(DAMAGE,AGENT)))),AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533115).
lisp_trans(=>(and(tSumoManeuver(MANEUVER),tSumoViolentContest(CONTEST),subProcess(MANEUVER,CONTEST)),or(tSumoAttack(MANEUVER),tSumoDefensiveManeuver(MANEUVER))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533360).
lisp_trans(genls(actPerception,actPsychologicalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533577).
lisp_trans(documentation(actPerception,vEnglishLanguage,s("Sensing","some","aspect","of","the","material","world",".","Note","that","the","#$agent","of","this","sensing","is","assumed","to","be","an","#$Animal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533620).
lisp_trans(=>(and(actPerception(PERCEPT),agent(PERCEPT,AGENT)),tClazzAnimal(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533777).
lisp_trans(=>(mobSentientAgent(AGENT),capability(actPerception,experiencer,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533887).
lisp_trans(genls(actSeeing,actPerception),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':533974).
lisp_trans(documentation(actSeeing,vEnglishLanguage,s("The","#$subclass","of","#$Perception","in","which","the","sensing","is","done","by","an","ocular","#$Organ",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534003).
lisp_trans(=>(and(actSeeing(SEE),agent(SEE,AGENT),patient(SEE,OBJ)),exists([PROP],and(vtColorAttribute(PROP),knows(AGENT,sumoAttribute(OBJ,PROP))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534127).
lisp_trans(=>(and(actSeeing(SEE),patient(SEE,OBJ)),holdsDuring(uWhenFn(SEE),sumoAttribute(OBJ,tSumoIlluminated))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534347).
lisp_trans(=>(and(actSeeing(SEE),patient(SEE,OBJ)),exists([ATTR],and(vtColorAttribute(ATTR),holdsDuring(uWhenFn(SEE),sumoAttribute(OBJ,ATTR))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534475).
lisp_trans(genls(actLooking,actSeeing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534672).
lisp_trans(genls(actLooking,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534698).
lisp_trans(documentation(actLooking,vEnglishLanguage,s("Any","instance","of","#$Seeing","which","is","intentional",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534736).
lisp_trans(genls(actSmelling,actPerception),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534826).
lisp_trans(documentation(actSmelling,vEnglishLanguage,s("The","#$subclass","of","#$Perception","in","which","the","sensing","is","done","by","an","olefactory","#$Organ",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534857).
lisp_trans(=>(and(actSmelling(SMELL),patient(SMELL,OBJ)),exists([ATTR],and(vtOlfactoryAttribute(ATTR),sumoAttribute(OBJ,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':534987).
lisp_trans(genls(actTasting,actPerception),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535172).
lisp_trans(documentation(actTasting,vEnglishLanguage,s("The","#$subclass","of","#$Perception","in","which","the","sensing","is","done","by","of","an","#$Organ","which","can","discriminate","various","tastes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535202).
lisp_trans(=>(and(actTasting(TASTE),patient(TASTE,OBJ)),exists([ATTR],and(vtTasteAttribute(ATTR),sumoAttribute(OBJ,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535361).
lisp_trans(genls(actHearing,actPerception),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535541).
lisp_trans(documentation(actHearing,vEnglishLanguage,s("The","#$subclass","of","#$Perception","in","which","the","sensing","is","done","by","an","auditory","#$Organ",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535571).
lisp_trans(=>(and(actHearing(HEAR),patient(HEAR,OBJ)),exists([ATTR],and(vtSoundAttribute(ATTR),sumoAttribute(OBJ,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535698).
lisp_trans(genls(vtSoundAttribute,vtPerceptualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':535888).
lisp_trans(documentation(vtSoundAttribute,vEnglishLanguage,s("The","volume","of","sound","relative","to","a","listener",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536060).
lisp_trans(vtSoundAttribute(tSumoAudible),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536153).
lisp_trans(vtSoundAttribute('Inaudible'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536187).
lisp_trans(documentation('Inaudible',vEnglishLanguage,s("A","sound","level","and","frequency","not","capable","of","being","heard","by","a","#$Human",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536223).
lisp_trans(contraryAttribute(tSumoAudible,'Inaudible'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536336).
lisp_trans(documentation(tSumoAudible,vEnglishLanguage,s("A","sound","level","and","frequency","capable","of","being","heard","by","a","#$Human",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536374).
lisp_trans(=>(and(tSumoRadiatingSound(SOUND),agent(SOUND,OBJ),sumoAttribute(SOUND,tSumoAudible)),exists([HUMAN],and(tSumoHuman(HUMAN),capability(uKappaFn(HEAR,and(actHearing(HEAR),agent(HEAR,HUMAN),destination(HEAR,HUMAN),origin(HEAR,OBJ))),agent,HUMAN)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536481).
lisp_trans(genls(actListening,actHearing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536861).
lisp_trans(genls(actListening,actIntentionalProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536890).
lisp_trans(documentation(actListening,vEnglishLanguage,s("Any","instance","of","#$Hearing","which","is","intentional",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':536930).
lisp_trans(genls(actTactilePerception,actPerception),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537023).
lisp_trans(documentation(actTactilePerception,vEnglishLanguage,s("The","#$subclass","of","#$Perception","in","which","the","sensing","is","done","by","#$Touching",".","Note","that","#$Touching","need","not","involve","#$TactilePerception",".","For","example",",","a","person","who","has","lost","all","sensation","in","both","of","his","legs","would","have","no","#$TactilePerception","of","anything","his","legs","were","#$Touching",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537063).
lisp_trans(=>(actTactilePerception(TACTILE),exists([TOUCH],and(actTouching(TOUCH),subProcess(TOUCH,TACTILE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537393).
lisp_trans(genls(actRadiating,actMotion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537547).
lisp_trans(documentation(actRadiating,vEnglishLanguage,s("Processes","in","which","some","form","of","electromagnetic","radiation",",","e",".","g",".","radio","waves",",","light","waves",",","electrical","energy",",","etc",".",",","is","given","off","or","absorbed","by","something","else",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537575).
lisp_trans(genls(tSumoRadiatingLight,tSumoRadiatingElectromagnetic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537779).
lisp_trans(documentation(tSumoRadiatingLight,vEnglishLanguage,s("The","#$subclass","of","#$Radiating","in","which","light","is","given","off","or","absorbed",".","Some","examples","include","blinking",",","flashing",",","and","glittering",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':537830).
lisp_trans(<=>(exists([EMIT],and(tSumoRadiatingLight(EMIT),patient(EMIT,REGION),tPlaceLikeRegion(REGION))),sumoAttribute(REGION,tSumoIlluminated)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538010).
lisp_trans(genls(tSumoRadiatingInfrared,tSumoRadiatingElectromagnetic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538193).
lisp_trans(genls(tSumoRadiatingXRay,tSumoRadiatingElectromagnetic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538247).
lisp_trans(documentation(tSumoRadiatingXRay,vEnglishLanguage,s("A","form","of","#$RadiatingElectromagnetic","with","#$wavelength","ranging","from","0.01","to","10","#$Nanometers",",","corresponding","to","frequencies","in","the","range","30","petahertz","to","30","exahertz","and","energies","in","the","range","100","eV","to","100","keV",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538297).
lisp_trans(genls(tSumoRadiatingSound,actRadiating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538555).
lisp_trans(documentation(tSumoRadiatingSound,vEnglishLanguage,s("The","#$subclass","of","#$Radiating","in","which","sound","waves","are","given","off","or","absorbed",".","Some","examples","include","creaking",",","roaring",",","and","whistling",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538591).
lisp_trans(=>(and(tSumoRadiatingSound(EMIT),agent(EMIT,SOUND)),exists([ATTR],and(vtSoundAttribute(ATTR),sumoAttribute(SOUND,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':538776).
lisp_trans(genls(tSumoMakingMusic,tSumoRadiatingSound),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539259).
lisp_trans(documentation(tSumoMakingMusic,vEnglishLanguage,'MakingMusic is a type of #$RadiatingSound where the #$result is intended to be melodic and is produced delibrately'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539297).
lisp_trans(termFormat(vEnglishLanguage,tSumoMakingMusic,s("making","music")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539460).
lisp_trans(comment(tSumoMakingMusic,s("Changing","the","old","Music","to","#$MakingMusic","to","be","more","consistent","with","the","verb","-","form","that","#$Process","seem","to","take",".","(","9","-14","-2011",")"),"KJN"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539516).
lisp_trans(sumo_partition(tSumoMakingMusic,tSumoMakingInstrumentalMusic,tSumoMakingVocalMusic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539670).
lisp_trans(genls(tSumoMakingInstrumentalMusic,tSumoMakingMusic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539735).
lisp_trans(documentation(tSumoMakingInstrumentalMusic,vEnglishLanguage,'MakingInstrumentalMusic is a type of #$MakingMusic which is produced using some kind of #$MusicalInstrument'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539782).
lisp_trans(termFormat(vEnglishLanguage,tSumoMakingInstrumentalMusic,s("instrumental","music")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':539950).
lisp_trans(=>(tSumoMakingInstrumentalMusic(M),exists([I],and(tObjectMusicalInstrument(I),instrument(M,I)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540025).
lisp_trans(genls(tSumoMakingVocalMusic,tSumoMakingMusic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540160).
lisp_trans(genls(tSumoMakingVocalMusic,actVocalizing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540200).
lisp_trans(documentation(tSumoMakingVocalMusic,vEnglishLanguage,'MakingVocalMusic is a type of #$MakingMusic which is produced by using the vocal cords'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540239).
lisp_trans(termFormat(vEnglishLanguage,tSumoMakingVocalMusic,"singing"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540379).
lisp_trans(comment(tSumoMakingVocalMusic,s("Currently",",","#$VocalMusic","also","inherits","from","#$Speaking",".","Changing","this","to","more","general","#$Vocalizing",".","Acapella","groups","today","use","their","#$VocalCord","to","create","music","in","ways","that","are","more","than","just","speaking",".","(","9","-14","-2011",")"),"KJN"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540435).
lisp_trans(genls(actSinging,tSumoMakingVocalMusic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540687).
lisp_trans(documentation(actSinging,vEnglishLanguage,'Singing is a type of #$MakingVocalMusic wherein words are produced by the singer. This is different from other forms of #$MakingVocalMusic such as humming or scatting or beatboxing , where the vocal cords are used to create the music but no words are formed.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':540723).
lisp_trans(=>(actSinging(S),exists([W],and(patient(S,W),tSumoWord(W)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541027).
lisp_trans(genls(tSumoRadiatingElectromagnetic,actRadiating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541130).
lisp_trans(documentation(tSumoRadiatingElectromagnetic,vEnglishLanguage,'RadiatingElectromagnetic is the subclass of #$Radiating processes in which electromagnetic radiation is transmitted or absorbed.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541176).
lisp_trans(genls(tSumoRadiatingNuclear,actRadiating),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541367).
lisp_trans(documentation(tSumoRadiatingNuclear,vEnglishLanguage,s("Releasing","atomic","energy",",","i",".","e",".","energy","from","a","nuclear","reaction",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541405).
lisp_trans(genls(tSumoStateChange,tSumoInternalChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541519).
lisp_trans(documentation(tSumoStateChange,vEnglishLanguage,s("Any","#$Process","where","the","#$PhysicalState","of","#$part","of","the","#$patient","of","the","#$Process","changes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541557).
lisp_trans(=>(and(tSumoStateChange(PROCESS),patient(PROCESS,OBJ)),exists([PART,STATE1,STATE2],and(part(PART,OBJ),tSumoPhysicalState(STATE1),tSumoPhysicalState(STATE2),not(equal(STATE1,STATE2)),holdsDuring(uBeginFn(uWhenFn(PROCESS)),sumoAttribute(PART,STATE1)),holdsDuring(iTimeOf_EndFn(uWhenFn(PROCESS)),sumoAttribute(PART,STATE2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':541697).
lisp_trans(rtBinaryPredicate(atomicNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542130).
lisp_trans(rtAsymmetricRelation(atomicNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542170).
lisp_trans(rtPartialValuedRelation(atomicNumber),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542213).
lisp_trans(argGenl(atomicNumber,1,tSumoElementalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542259).
lisp_trans(argIsa(atomicNumber,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542310).
lisp_trans(documentation(atomicNumber,vEnglishLanguage,s("(","#$atomicNumber","?","ELEMENT","?","NUMBER",")","means","that","the","#$ElementalSubstance","?","ELEMENT","has","the","atomic","number","?","NUMBER",".","The","atomic","number","is","the","number","of","#$Protons","in","the","nucleus","of","an","#$Atom",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542350).
lisp_trans(=>(atomicNumber(TYPE,NUMBER),=>(and(isa(SUBSTANCE,TYPE),part(ATOM,SUBSTANCE),tSumoAtomMolecule(ATOM)),equal(NUMBER,vCardinalityFn(uKappaFn(PROTON,and(part(PROTON,ATOM),tProton(PROTON))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542583).
lisp_trans(rtBinaryPredicate(boilingPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542884).
lisp_trans(argGenl(boilingPoint,1,tPureSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542924).
lisp_trans(argIsa(boilingPoint,2,vtTemperatureMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':542970).
lisp_trans(documentation(boilingPoint,vEnglishLanguage,s("The","temperature","at","which","a","#$PureSubstance","changes","state","from","a","#$Liquid","to","a","#$Gas",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':543013).
lisp_trans(=>(and(isa(X,Y),genls(Y,tPureSubstance),barometricPressure(X,uMeasureFn(PRES,tSumoInchMercury)),greaterThan(29.92,PRES),boilingPoint(Y,uMeasureFn(BOIL,vtKelvinDegree)),measure(X,uMeasureFn(TEMP,vtKelvinDegree)),greaterThan(TEMP,BOIL)),sumoAttribute(X,tSumoGas)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':543146).
lisp_trans(=>(and(isa(X,Y),genls(Y,tPureSubstance),boilingPoint(Y,uMeasureFn(BOIL,vtKelvinDegree)),meltingPoint(Y,uMeasureFn(MELT,vtKelvinDegree)),measure(X,uMeasureFn(TEMP,vtKelvinDegree)),greaterThan(TEMP,MELT),lessThan(TEMP,BOIL)),sumoAttribute(X,tSumoLiquid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':543454).
lisp_trans(=>(and(isa(X,Y),genls(Y,tPureSubstance),meltingPoint(Y,uMeasureFn(MELT,vtKelvinDegree)),barometricPressure(X,uMeasureFn(PRES,tSumoInchMercury)),greaterThan(PRES,29.92),measure(X,uMeasureFn(TEMP,vtKelvinDegree)),lessThan(TEMP,MELT)),sumoAttribute(X,tSumoSolid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':543765).
lisp_trans(=>(and(eventBoiling(BOILING),boilingPoint(TYPE,uMeasureFn(TEMP1,MEASURE)),isa(SUBSTANCE,TYPE),patient(BOILING,SUBSTANCE),holdsDuring(uWhenFn(BOILING),measure(SUBSTANCE,uMeasureFn(TEMP2,MEASURE))),vtUnitOfTemperature(MEASURE)),greaterThanOrEqualTo(TEMP2,TEMP1)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':544071).
lisp_trans(=>(and(boilingPoint(TYPE,uMeasureFn(TEMP1,MEASURE)),isa(SUBSTANCE,TYPE),holdsDuring(TIME,measure(SUBSTANCE,uMeasureFn(TEMP2,MEASURE))),vtUnitOfTemperature(MEASURE),greaterThanOrEqualTo(TEMP2,TEMP1)),or(holdsDuring(TIME,sumoAttribute(SUBSTANCE,tSumoGas)),exists([BOIL],and(overlapsTemporally(uWhenFn(BOIL),TIME),eventBoiling(BOIL),patient(BOIL,SUBSTANCE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':544416).
lisp_trans(rtBinaryPredicate(meltingPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':544911).
lisp_trans(argGenl(meltingPoint,1,tPureSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':544951).
lisp_trans(argIsa(meltingPoint,2,vtTemperatureMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':544997).
lisp_trans(documentation(meltingPoint,vEnglishLanguage,s("The","temperature","at","which","a","#$PureSubstance","changes","state","from","a","#$Solid","to","a","#$Liquid",".","Note","that","#$Arsenic","can","sublimate","directly","from","#$Solid","to","#$Gas","which","means","that","its","melting","and","boiling","points","are","equal",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':545040).
lisp_trans(=>(and(isa(SUBSTANCE,TYPE),boilingPoint(TYPE,uMeasureFn(TEMP1,MEASURE)),meltingPoint(TYPE,uMeasureFn(TEMP2,MEASURE)),vtUnitOfTemperature(MEASURE),holdsDuring(TIME,measure(SUBSTANCE,uMeasureFn(TEMP3,MEASURE))),greaterThan(TEMP3,TEMP2),lessThan(TEMP3,TEMP1)),or(holdsDuring(TIME,sumoAttribute(SUBSTANCE,tSumoLiquid)),exists([MELT],and(overlapsTemporally(uWhenFn(MELT),TIME),eventMelting(MELT),patient(BOIL,SUBSTANCE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':545300).
lisp_trans(=>(and(isa(SUBSTANCE,TYPE),meltingPoint(TYPE,uMeasureFn(TEMP1,MEASURE)),holdsDuring(TIME,measure(SUBSTANCE,uMeasureFn(TEMP2,MEASURE))),vtUnitOfTemperature(MEASURE),lessThan(TEMP2,TEMP1)),or(holdsDuring(TIME,sumoAttribute(SUBSTANCE,tSumoSolid)),exists([FREEZE],and(overlapsTemporally(uWhenFn(FREEZE),TIME),eventFreezing(FREEZE),patient(FREEZE,SUBSTANCE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':545840).
lisp_trans(=>(and(meltingPoint(TYPE,MELT),boilingPoint(TYPE,BOIL)),greaterThanOrEqualTo(BOIL,MELT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546303).
lisp_trans(genls(eventMelting,tSumoStateChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546416).
lisp_trans(documentation(eventMelting,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","an","#$Object","is","heated","and","converted","from","a","#$Solid","to","a","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546447).
lisp_trans(=>(eventMelting(MELT),exists([HEAT],and(actHeating(HEAT),subProcess(HEAT,MELT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546589).
lisp_trans(=>(and(eventMelting(MELT),patient(MELT,OBJ)),exists([PART],and(part(PART,OBJ),holdsDuring(uBeginFn(uWhenFn(MELT)),sumoAttribute(PART,tSumoSolid)),holdsDuring(iTimeOf_EndFn(uWhenFn(MELT)),sumoAttribute(PART,tSumoLiquid))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546723).
lisp_trans(genls(eventBoiling,tSumoStateChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':546998).
lisp_trans(documentation(eventBoiling,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","a","#$Substance","is","heated","and","converted","from","a","#$Liquid","to","a","#$Gas",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547029).
lisp_trans(=>(eventBoiling(BOIL),exists([HEAT],and(actHeating(HEAT),subProcess(HEAT,BOIL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547171).
lisp_trans(=>(and(eventBoiling(BOIL),patient(BOIL,OBJ)),exists([PART],and(part(PART,OBJ),holdsDuring(uBeginFn(uWhenFn(BOIL)),sumoAttribute(PART,tSumoLiquid)),holdsDuring(iTimeOf_EndFn(uWhenFn(BOIL)),sumoAttribute(PART,tSumoGas))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547305).
lisp_trans(genls(eventEvaporating,tSumoStateChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547578).
lisp_trans(documentation(eventEvaporating,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","a","#$Substance","is","converted","from","a","#$Liquid","to","a","#$Gas","at","a","temperature","below","its","#$Boiling","point",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547613).
lisp_trans(=>(and(eventEvaporating(EVAP),boilingPoint(OBJ,uMeasureFn(BOILVAL,MEAS)),measure(OBJ,uMeasureFn(VAL,MEAS)),vtUnitOfTemperature(MEAS),patient(EVAP,OBJ)),exists([PART],and(part(PART,OBJ),greaterThan(BOILVAL,VAL),holdsDuring(uBeginFn(uWhenFn(EVAP)),sumoAttribute(PART,tSumoLiquid)),holdsDuring(iTimeOf_EndFn(uWhenFn(EVAP)),sumoAttribute(PART,tSumoGas))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':547791).
lisp_trans(genls(actCondensing,tSumoStateChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548243).
lisp_trans(documentation(actCondensing,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","an","#$Object","is","cooled","and","converted","from","a","#$Gas","to","a","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548277).
lisp_trans(=>(actCondensing(COND),exists([COOL],and(actCooling(COOL),subProcess(COOL,COND)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548420).
lisp_trans(=>(and(actCondensing(COND),patient(COND,OBJ)),exists([PART],and(part(PART,OBJ),holdsDuring(uBeginFn(uWhenFn(COND)),sumoAttribute(PART,tSumoGas)),holdsDuring(iTimeOf_EndFn(uWhenFn(COND)),sumoAttribute(PART,tSumoLiquid))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548557).
lisp_trans(genls(eventFreezing,tSumoStateChange),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548833).
lisp_trans(documentation(eventFreezing,vEnglishLanguage,s("The","#$Class","of","#$Processes","where","an","#$Object","is","cooled","and","converted","from","a","#$Liquid","to","a","#$Solid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':548865).
lisp_trans(=>(eventFreezing(FREEZE),exists([COOL],and(actCooling(COOL),subProcess(COOL,FREEZE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':549008).
lisp_trans(=>(and(eventFreezing(FREEZE),patient(FREEZE,OBJ)),exists([PART],and(part(PART,OBJ),holdsDuring(uBeginFn(uWhenFn(FREEZE)),sumoAttribute(PART,tSumoLiquid)),holdsDuring(iTimeOf_EndFn(uWhenFn(FREEZE)),sumoAttribute(PART,tSumoSolid))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':549147).
lisp_trans(genls(tAstronomicalBody,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':549600).
lisp_trans(disjointWith(tAstronomicalBody,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':549635).
lisp_trans(documentation(tAstronomicalBody,vEnglishLanguage,s("The","#$Class","of","all","astronomical","objects","of","significant","size",".","It","includes","#$SelfConnectedObjects","like","planets",",","stars",",","and","asteroids",",","as","well","as","#$Collections","like","nebulae",",","galaxies",",","and","constellations",".","Note","that","the","planet","Earth","is","an","#$AstronomicalBody",",","but","every","#$Region","of","Earth","is","a","#$GeographicArea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':549678).
lisp_trans(genls(tSumoGeographicArea,tPlaceLikeRegion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550037).
lisp_trans(sumo_partition(tSumoGeographicArea,tSumoWaterArea,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550070).
lisp_trans(documentation(tSumoGeographicArea,vEnglishLanguage,s("A","geographic","location",",","generally","having","definite","boundaries",".","Note","that","this","differs","from","its","immediate","superclass","#$Region","in","that","a","#$GeographicArea","is","a","three","-","dimensional","#$Region","of","the","earth",".","Accordingly",",","all","astronomical","objects","other","than","earth","and","all","one","-","dimensional","and","two","-","dimensional","#$Regions","are","not","classed","under","#$GeographicArea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550116).
lisp_trans(genls(tSumoLocalizablePlace,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550513).
lisp_trans(rtBinaryPredicate(geographicSubregion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550557).
lisp_trans(rtTransitiveRelation(geographicSubregion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550604).
lisp_trans(rtAsymmetricRelation(geographicSubregion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550654).
lisp_trans(genlPreds(geographicSubregion,properPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550704).
lisp_trans(genlPreds(geographicSubregion,located),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550749).
lisp_trans(argIsa(geographicSubregion,1,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550791).
lisp_trans(argIsa(geographicSubregion,2,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550837).
lisp_trans(documentation(geographicSubregion,vEnglishLanguage,s("(","#$geographicSubregion","?","PART","?","WHOLE",")","means","that","the","#$GeographicArea","?","PART","is","part","of","the","#$GeographicArea","?","WHOLE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':550883).
lisp_trans(genls(tSumoGeopoliticalArea,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551053).
lisp_trans(genls(tSumoGeopoliticalArea,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551096).
lisp_trans(documentation(tSumoGeopoliticalArea,vEnglishLanguage,s("Any","#$GeographicArea","which","is","associated","with","some","sort","of","political","structure",".","This","class","includes","#$Lands",",","#$Cities",",","districts","of","cities",",","counties",",","etc",".","Note","that","the","identity","of","a","#$GeopoliticalArea","may","remain","constant","after","a","change","in","borders",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551130).
lisp_trans(=>(and(tSumoGeopoliticalArea(AREA),leader(iGroup_GovernmentFn(AREA),PERSON)),leader(AREA,PERSON)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551433).
lisp_trans(=>(and(tSumoGeopoliticalArea(AREA),leader(AREA,PERSON)),leader(iGroup_GovernmentFn(AREA),PERSON)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551554).
lisp_trans(=>(and(actElection(EVENT),agent(EVENT,AGENT),tSumoGeopoliticalArea(AGENT)),actPoliticalProcess(EVENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551672).
lisp_trans(=>(and(actElection(EVENT),agent(EVENT,AGENT),tSumoGeopoliticalArea(AREA),isa(AGENT,iGroup_GovernmentFn(AREA))),actPoliticalProcess(EVENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':551819).
lisp_trans(rtAsymmetricRelation(geopoliticalSubdivision),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552008).
lisp_trans(rtTransitiveRelation(geopoliticalSubdivision),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552062).
lisp_trans(genlPreds(geopoliticalSubdivision,geographicSubregion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552116).
lisp_trans(argIsa(geopoliticalSubdivision,1,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552174).
lisp_trans(argIsa(geopoliticalSubdivision,2,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552226).
lisp_trans(documentation(geopoliticalSubdivision,vEnglishLanguage,s("(","#$geopoliticalSubdivision","?","AREA1","?","AREA2",")","means","that","?","AREA1","is","any","geopolitical","part","of","?","AREA2",",","that","is",",","?","AREA1","is","an","integral","#$geographicSubregion","of","?","AREA2","(","not","a","#$DependencyOrSpecialSovereigntyArea",")",",","having","its","own","associated","#$GovernmentOrganization","which","is","subordinated","to","or","constrained","by","the","government","of","?","AREA2",".","Cf",".","#$dependentGeopoliticalArea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':552278).
lisp_trans(genls(tSumoWaterArea,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553429).
lisp_trans(documentation(tSumoWaterArea,vEnglishLanguage,s("A","body","which","is","made","up","predominantly","of","water",",","e",".","g",".","rivers",",","lakes",",","oceans",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553465).
lisp_trans(=>(tSumoWaterArea(AREA),exists([BED,HOLE,WATER],and(equal(uHoleHostFn(HOLE),BED),tWater(WATER),properlyFills(WATER,HOLE),equal(uMereologicalSumFn(BED,WATER),AREA)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553591).
lisp_trans(genls(tSumoSaltWaterArea,tSumoWaterArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553838).
lisp_trans(disjointWith(tSumoSaltWaterArea,tSumoFreshWaterArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553873).
lisp_trans(documentation(tSumoSaltWaterArea,vEnglishLanguage,s("A","#$WaterArea","whose","#$Water","is","saline",",","e",".","g",".","oceans","and","seas",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':553913).
lisp_trans(genls(tSumoFreshWaterArea,tSumoWaterArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':554023).
lisp_trans(documentation(tSumoFreshWaterArea,vEnglishLanguage,s("A","#$WaterArea","whose","#$Water","is","not","saline",",","e",".","g",".","most","rivers","and","lakes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':554059).
lisp_trans(genls(tSumoLandArea,tSumoGeographicArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':554694).
lisp_trans(documentation(tSumoLandArea,vEnglishLanguage,s("An","area","which","is","predominantly","solid","ground",",","e",".","g",".","a","#$Nation",",","a","mountain",",","a","desert",",","etc",".","Note","that","a","#$LandArea","may","contain","some","relatively","small","#$WaterAreas",".","For","example",",","Australia","is","a","#$LandArea","even","though","it","contains","various","rivers","and","lakes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':554729).
lisp_trans(=>(tSumoLandArea(LAND1),exists([LAND2],and(part(LAND1,LAND2),or(tPlaceLikeContinent(LAND2),tClazzIsland(LAND2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555024).
lisp_trans(genls(tSumoShoreArea,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555214).
lisp_trans(documentation(tSumoShoreArea,vEnglishLanguage,s("A","#$ShoreArea","is","a","#$LandArea","approximately","1","-3","km","wide","bordering","a","body","of","water",",","such","as","an","ocean",",","bay",",","river",",","or","lake",".","A","#$ShoreArea","may","comprise","a","variety","of","#$LandForms",",","such","as","dunes",",","sloughs",",","and","marshes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555244).
lisp_trans(=>(tSumoShoreArea(BANK),exists([WATER],and(tSumoWaterArea(WATER),meetsSpatially(BANK,WATER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555502).
lisp_trans(genls(tPlaceLikeContinent,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555647).
lisp_trans(equal(vCardinalityFn(tPlaceLikeContinent),7),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555677).
lisp_trans(documentation(tPlaceLikeContinent,vEnglishLanguage,s("As","defined","in","the","CIA","World","Fact","Book",",","#$Continent","covers","seven","land","masses",":","#$Africa",",","#$NorthAmerica",",","#$SouthAmerica",",","#$Antarctica",",","#$Europe",",","#$Asia",",","and","#$Oceania",".","Note","that","#$Australia",",","counted","as","a","continent","in","some","other","systems",",","is","included","in","#$Oceania","in","the","Fact","Book",".","As","a","consequence",",","there","is","no","#$Nation","which","is","also","a","#$Continent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':555713).
lisp_trans(genls(tClazzIsland,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556105).
lisp_trans(documentation(tClazzIsland,vEnglishLanguage,s("A","#$LandArea","that","is","completely","surrounded","by","a","#$WaterArea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556132).
lisp_trans(=>(tClazzIsland(ISLAND),not(exists([AREA,PART1,PART2],and(tSumoLandArea(AREA),part(PART1,ISLAND),part(PART2,AREA),not(part(ISLAND,AREA)),not(part(AREA,ISLAND)),meetsSpatially(PART1,PART2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556235).
lisp_trans(=>(and(tClazzIsland(ISLE),tSumoGeographicArea(AREA),meetsSpatially(ISLE,AREA)),not(tSumoLandArea(AREA))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556586).
lisp_trans(=>(tClazzIsland(ISLE),exists([WATER],and(tSumoWaterArea(WATER),meetsSpatially(ISLE,WATER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556735).
lisp_trans(genls(actNation,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556867).
lisp_trans(genls(actNation,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556902).
lisp_trans(documentation(actNation,vEnglishLanguage,s("The","broadest","#$GeopoliticalArea",",","i",".","e",".","#$Nations","are","#$GeopoliticalAreas","that","are","not","part","of","any","other","overarching","and","comprehensive","governance","structure","(","excepting","commonwealths","and","other","sorts","of","loose","international","organizations",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':556929).
lisp_trans(genls(tSumoStateOrProvince,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557205).
lisp_trans(genls(tSumoStateOrProvince,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557249).
lisp_trans(documentation(tSumoStateOrProvince,vEnglishLanguage,s("Administrative","subdivisions","of","a","#$Nation","that","are","broader","than","any","other","political","subdivisions","that","may","exist",".","This","#$Class","includes","the","states","of","the","United","States",",","as","well","as","the","provinces","of","Canada","and","European","countries",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557285).
lisp_trans(=>(tSumoStateOrProvince(STATE),exists([LAND],and(actNation(LAND),properPart(STATE,LAND)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557564).
lisp_trans(genls(tGroupedCity,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557707).
lisp_trans(genls(tGroupedCity,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557740).
lisp_trans(documentation(tGroupedCity,vEnglishLanguage,s("A","#$LandArea","of","relatively","small","size",",","inhabited","by","a","community","of","people",",","and","having","some","sort","of","political","structure",".","Note","that","this","class","includes","both","large","cities","and","small","settlements","like","towns",",","villages",",","hamlets",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':557765).
lisp_trans(genls(tGroupedCounty,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558031).
lisp_trans(genls(tGroupedCounty,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558066).
lisp_trans(documentation(tGroupedCounty,vEnglishLanguage,s("A","#$GeopoliticalArea","that","is","larger","than","a","city",",","usually","encompassing","several","cities",",","and","smaller","than","a","#$StateOrProvince",".","Aside","from","City",",","this","is","the","smallest","geopolitical","subdivision",",","and","it","is","known","by","various","names","in","various","counties",",","e",".","g",".","parrish",",","commune",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558093).
lisp_trans(=>(tGroupedCounty(STATE),exists([LAND],and(tSumoStateOrProvince(LAND),properPart(STATE,LAND)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558406).
lisp_trans(genls(tSumoTransitway,tPlaceLikeRegion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558549).
lisp_trans(genls(tSumoTransitway,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558578).
lisp_trans(documentation(tSumoTransitway,vEnglishLanguage,'Transitway is the broadest class of regions which may be passed through as a #$path in instances of #$Translocation.  #$Transitway includes land, air, and sea regions, and it includes both natural and artificial transitways.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558620).
lisp_trans(genls(tSumoLandTransitway,tSumoTransitway),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558893).
lisp_trans(genls(tSumoLandTransitway,tSumoLandArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558930).
lisp_trans(documentation(tSumoLandTransitway,vEnglishLanguage,'LandTransitway is the subclass of #$Transitway that represents areas intended for motion over the ground.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':558965).
lisp_trans(=>(tSumoTransitway(WAY),hasPurpose(WAY,exists([TRANSPORT],and(actTransportation(TRANSPORT),path(TRANSPORT,WAY))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559123).
lisp_trans(genls(tPlaceLikeRoadway,tSumoLandTransitway),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559292).
lisp_trans(documentation(tPlaceLikeRoadway,vEnglishLanguage,'Roadway is the subclass of #$LandTransitways that are areas intended for surface travel by self-powered, wheeled vehicles, excluding those that travel on tracks.  #$Roadways have been at least minimally improved to enable the passage of vehicles. #$Roadways include dirt and gravelled roads, paved streets, and expressways.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559326).
lisp_trans(genls(tWater,tSumoCompoundSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559695).
lisp_trans(documentation(tWater,vEnglishLanguage,s("The","#$Class","of","samples","of","the","compound","H20",".","Note","that","this","#$Class","covers","both","pure","and","impure","#$Water",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559730).
lisp_trans(genls(tMineral,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559876).
lisp_trans(documentation(tMineral,vEnglishLanguage,s("Any","of","various","naturally","occurring","homogeneous","substances","(","such","as","stone",",","coal",",","salt",",","sulfur",",","sand",",","petroleum",")",",","or","synthetic","substances","having","the","chemical","composition","and","crystalline","form","and","properties","of","a","naturally","occurring","mineral",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':559906).
lisp_trans(rtBinaryPredicate(developmentalForm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560187).
lisp_trans(rtAsymmetricRelation(developmentalForm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560232).
lisp_trans(rtTransitiveRelation(developmentalForm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560280).
lisp_trans(genlPreds(developmentalForm,sumoAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560328).
lisp_trans(argIsa(developmentalForm,1,tSumoOrganicObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560370).
lisp_trans(argIsa(developmentalForm,2,vtDevelopmentalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560413).
lisp_trans(documentation(developmentalForm,vEnglishLanguage,s("(","#$developmentalForm","?","OBJECT","?","FORM",")","means","that","?","FORM","describes","a","stage","in","the","individual","maturation","of","?","OBJECT",".","For","example",",","tadpole","and","caterpillar","are","#$developmentalForms","of","frogs","and","butterflies",",","respectively",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':560775).
lisp_trans(=>(and(holdsDuring(TIME1,developmentalForm(OBJ,ATTR1)),successorAttributeClosure(ATTR2,ATTR1)),exists([TIME2],and(earlier(TIME2,TIME1),holdsDuring(TIME2,developmentalForm(OBJ,ATTR2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561043).
lisp_trans(genls(tSumoOrganicObject,tSumoCorpuscularObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561293).
lisp_trans(genls(tSumoOrganicObject,actOrganicThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561336).
lisp_trans(sumo_partition(tSumoOrganicObject,tSumoOrganism,tSumoAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561374).
lisp_trans(documentation(tSumoOrganicObject,vEnglishLanguage,s("This","class","encompasses","#$Organisms",",","#$CorpuscularObjects","that","are","parts","of","#$Organisms",",","i",".","e",".","#$BodyParts",",","and","#$CorpuscularObjects","that","are","nonintentionally","produced","by","#$Organisms",",","e",".","g",".","#$ReproductiveBodies",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561429).
lisp_trans(genls(tSumoOrganism,tSumoOrganicObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561687).
lisp_trans(genls(tSumoOrganism,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561721).
lisp_trans(disjointWith(tSumoOrganism,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561747).
lisp_trans(sumo_partition(tSumoOrganism,tClazzAnimal,tClazzPlant,tClazzFungus,tMicroorganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561776).
lisp_trans(documentation(tSumoOrganism,vEnglishLanguage,s("Generally",",","a","living","individual",",","including","all","#$Plants","and","#$Animals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561831).
lisp_trans(=>(tSumoOrganism(ORGANISM),exists([BIRTH],and(tSumoBirth(BIRTH),experiencer(BIRTH,ORGANISM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':561945).
lisp_trans(rtBinaryPredicate(inhabits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562090).
lisp_trans(rtAsymmetricRelation(inhabits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562126).
lisp_trans(argIsa(inhabits,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562165).
lisp_trans(argIsa(inhabits,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562194).
lisp_trans(documentation(inhabits,vEnglishLanguage,s("A","very","basic","notion","of","living","within","something","else",".","(","#$inhabits","?","ORGANISM","?","OBJECT",")","means","that","?","OBJECT","is","the","residence","(","either","permanent","or","temporary",")",",","nest",",","etc",".","of","?","ORGANISM",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562221).
lisp_trans(=>(holdsDuring(T1,inhabits(ORGANISM,OBJ)),exists([TIME],and(timeOfTimeInterval(TIME),temporalPart(TIME,T1),holdsDuring(TIME,located(ORGANISM,OBJ))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562444).
lisp_trans(genlPreds(home,inhabits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562643).
lisp_trans(argIsa(home,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562671).
lisp_trans(argIsa(home,2,tSumoPermanentResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562693).
lisp_trans(documentation(home,vEnglishLanguage,s("The","relation","between","a","#$Human","and","a","#$PermanentResidence","of","the","#$Human",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562728).
lisp_trans(genlPreds(stays,inhabits),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562842).
lisp_trans(disjointRelation(stays,home),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562871).
lisp_trans(argIsa(stays,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562901).
lisp_trans(argIsa(stays,2,tSumoTemporaryResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562924).
lisp_trans(documentation(stays,vEnglishLanguage,s("The","relation","between","a","#$Human","and","a","#$TemporaryResidence","of","the","#$Human",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':562960).
lisp_trans(genls(tClazzPlant,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563075).
lisp_trans(documentation(tClazzPlant,vEnglishLanguage,s("An","#$Organism","having","cellulose","cell","walls",",","growing","by","synthesis","of","#$Substances",",","generally","distinguished","by","the","presence","of","chlorophyll",",","and","lacking","the","power","of","locomotion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563101).
lisp_trans(genls(tClazzFloweringPlant,tClazzPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563316).
lisp_trans(documentation(tClazzFloweringPlant,vEnglishLanguage,s("A","#$Plant","that","produces","seeds","and","flowers",".","This","class","includes","trees",",","shrubs",",","herbs",",","and","flowers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563348).
lisp_trans(genls(tSumoNonFloweringPlant,tClazzPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563496).
lisp_trans(disjointWith(tSumoNonFloweringPlant,tClazzFloweringPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563531).
lisp_trans(disjointDecomposition(tSumoNonFloweringPlant,tSumoAlga,tClazzFern,tClazzMoss),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563575).
lisp_trans(documentation(tSumoNonFloweringPlant,vEnglishLanguage,s("A","#$Plant","that","reproduces","with","spores","and","does","not","produce","flowers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563632).
lisp_trans(genls(tSumoAlga,tSumoNonFloweringPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563753).
lisp_trans(documentation(tSumoAlga,vEnglishLanguage,s("A","chiefly","aquatic","plant","that","contains","chlorophyll",",","but","does","not","form","embryos","during","development","and","lacks","vascular","tissue",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563787).
lisp_trans(=>(tSumoAlga(ALGA),exists([WATER],and(inhabits(ALGA,WATER),tWater(WATER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':563950).
lisp_trans(genls(tClazzFungus,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564070).
lisp_trans(documentation(tClazzFungus,vEnglishLanguage,s("A","eukaryotic","#$Organism","characterized","by","the","absence","of","chlorophyll","and","the","presence","of","rigid","cell","walls",".","Included","here","are","both","slime","molds","and","true","fungi","such","as","yeasts",",","molds",",","mildews",",","and","mushrooms",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564097).
lisp_trans(=>(and(tClazzFungus(FUNGUS),inhabits(FUNGUS,OBJ)),tSumoOrganism(OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564342).
lisp_trans(genls(tClazzMoss,tSumoNonFloweringPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564441).
lisp_trans(documentation(tClazzMoss,vEnglishLanguage,s("A","#$NonFloweringPlant","without","true","roots","and","little","if","any","vascular","tissue",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564475).
lisp_trans(genls(tClazzFern,tSumoNonFloweringPlant),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564591).
lisp_trans(documentation(tClazzFern,vEnglishLanguage,s("A","#$NonFloweringPlant","that","contains","vascular","tissue",".","This","class","includes","true","ferns",",","as","well","as","horsetails",",","club","mosses",",","and","whisk","ferns",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564625).
lisp_trans(genls(tClazzAnimal,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564803).
lisp_trans(sumo_partition(tClazzAnimal,tClazzVertebrate,tClazzInvertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564830).
lisp_trans(documentation(tClazzAnimal,vEnglishLanguage,s("An","#$Organism","with","eukaryotic","#$Cells",",","and","lacking","stiff","cell","walls",",","plastids",",","and","photosynthetic","pigments",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':564873).
lisp_trans(genls(tMicroorganism,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565023).
lisp_trans(documentation(tMicroorganism,vEnglishLanguage,s("An","#$Organism","that","can","be","seen","only","with","the","aid","of","a","microscope",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565057).
lisp_trans(genls(tClazzBacterium,tMicroorganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565172).
lisp_trans(documentation(tClazzBacterium,vEnglishLanguage,s("A","small",",","typically","one","-","celled",",","prokaryotic","#$Microorganism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565207).
lisp_trans(=>(tClazzBacterium(BACTERIUM),exists([CELL1],and(component(CELL1,BACTERIUM),tCell(CELL1),all([CELL2],=>(and(component(CELL2,BACTERIUM),tCell(CELL2)),equal(CELL1,CELL2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565312).
lisp_trans(=>(and(tClazzBacterium(BACTERIUM),inhabits(BACTERIUM,OBJ)),tSumoOrganism(OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565648).
lisp_trans(genls(tClazzVirus,tMicroorganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565756).
lisp_trans(documentation(tClazzVirus,vEnglishLanguage,s("An","#$Organism","consisting","of","a","core","of","a","single","nucleic","acid","enclosed","in","a","protective","coat","of","protein",".","A","virus","may","replicate","only","inside","a","host","living","cell",".","A","virus","exhibits","some","but","not","all","of","the","usual","characteristics","of","living","things",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':565787).
lisp_trans(=>(and(tClazzVirus(VIRUS),inhabits(VIRUS,OBJ)),tSumoOrganism(OBJ)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566065).
lisp_trans(=>(and(tClazzVirus(VIRUS),actReplication(PROC),agent(PROC,VIRUS)),exists([CELL],and(located(PROC,CELL),tCell(CELL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566161).
lisp_trans(genls(tClazzVertebrate,tClazzAnimal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566346).
lisp_trans(documentation(tClazzVertebrate,vEnglishLanguage,s("An","#$Animal","which","has","a","spinal","column",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566375).
lisp_trans(genls(tClazzInvertebrate,tClazzAnimal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566460).
lisp_trans(disjointDecomposition(tClazzInvertebrate,tClazzWorm,tClazzMollusk,tClazzArthropod),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566491).
lisp_trans(documentation(tClazzInvertebrate,vEnglishLanguage,s("An","#$Animal","which","has","no","spinal","column",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566551).
lisp_trans(genls(tClazzWorm,tClazzInvertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566639).
lisp_trans(documentation(tClazzWorm,vEnglishLanguage,s("Long",",","narrow",",","soft","-","bodied","#$Invertebrates",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566668).
lisp_trans(genls(tClazzMollusk,tClazzInvertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566751).
lisp_trans(documentation(tClazzMollusk,vEnglishLanguage,s("Soft","-","bodied","#$Invertebrate","that","is","usually","contained","in","a","shell",".","Includes","oysters",",","clams",",","mussels",",","snails",",","slugs",",","octopi",",","and","squid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566783).
lisp_trans(genls(tClazzArthropod,tClazzInvertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566960).
lisp_trans(disjointDecomposition(tClazzArthropod,tClazzArachnid,tClazzMyriapod,tClazzInsect,tClazzCrustacean),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':566994).
lisp_trans(documentation(tClazzArthropod,vEnglishLanguage,s("A","#$Class","of","#$Invertebrate","that","includes","#$Arachnids","and","#$Insects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567064).
lisp_trans(genls(tClazzArachnid,tClazzArthropod),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567178).
lisp_trans(documentation(tClazzArachnid,vEnglishLanguage,s("A","#$Class","of","#$Arthropods","that","includes","ticks","and","spiders",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567208).
lisp_trans(genls(tClazzMyriapod,tClazzArthropod),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567311).
lisp_trans(documentation(tClazzMyriapod,vEnglishLanguage,s("A","#$Class","of","#$Arthropods","that","includes","centipedes","and","millipedes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567341).
lisp_trans(genls(tClazzInsect,tClazzArthropod),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567452).
lisp_trans(documentation(tClazzInsect,vEnglishLanguage,s("A","#$Class","of","small","#$Arthropods","that","are","air","-","breathing","and","that","are","distinguished","by","appearance",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567480).
lisp_trans(genls(tClazzCrustacean,tClazzArthropod),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567619).
lisp_trans(documentation(tClazzCrustacean,vEnglishLanguage,s("A","#$Class","of","#$Arthropods","that","mainly","dwells","in","water","and","has","a","segmented","body","and","a","chitinous","exoskeleton",".","Includes","lobsters",",","crabs",",","shrimp",",","and","barnacles",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567651).
lisp_trans(genls(tSumoColdBloodedVertebrate,tClazzVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567855).
lisp_trans(disjointDecomposition(tSumoColdBloodedVertebrate,tClazzAmphibian,tClazzFish,tClazzReptile),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567899).
lisp_trans(documentation(tSumoColdBloodedVertebrate,vEnglishLanguage,'Vertebrates whose body temperature is not internally regulated.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':567968).
lisp_trans(genls(tSumoWarmBloodedVertebrate,tClazzVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568091).
lisp_trans(disjointWith(tSumoWarmBloodedVertebrate,tSumoColdBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568135).
lisp_trans(documentation(tSumoWarmBloodedVertebrate,vEnglishLanguage,'Vertebrates whose body temperature is internally regulated.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568190).
lisp_trans(genls(tClazzAmphibian,tSumoColdBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568309).
lisp_trans(documentation(tClazzAmphibian,vEnglishLanguage,s("A","cold","-","blooded",",","smooth","-","skinned","#$Vertebrate","which","characteristically","hatches","as","an","aquatic","larva",",","breathing","by","gills",".","When","mature",",","the","#$Amphibian","breathes","with","#$Lungs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568352).
lisp_trans(genls(tClazzBird,tSumoWarmBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568568).
lisp_trans(disjointWith(tClazzBird,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568606).
lisp_trans(documentation(tClazzBird,vEnglishLanguage,s("A","#$Vertebrate","having","a","constant","body","temperature","and","characterized","by","the","presence","of","feathers",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568629).
lisp_trans(genls(tClazzFish,tSumoColdBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568766).
lisp_trans(documentation(tClazzFish,vEnglishLanguage,s("A","cold","-","blooded","aquatic","#$Vertebrate","characterized","by","fins","and","breathing","by","gills",".","Included","here","are","#$Fish","having","either","a","bony","skeleton",",","such","as","a","perch",",","or","a","cartilaginous","skeleton",",","such","as","a","shark",".","Also","included","are","those","#$Fish","lacking","a","jaw",",","such","as","a","lamprey","or","hagfish",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':568804).
lisp_trans(=>(tClazzFish(FISH),exists([WATER],and(inhabits(FISH,WATER),tWater(WATER)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569121).
lisp_trans(genls(tClazzMammal,tSumoWarmBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569241).
lisp_trans(disjointDecomposition(tClazzMammal,tSumoAquaticMammal,tSumoHoofedMammal,tClazzMarsupial,tClazzRodent,tClazzPrimate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569281).
lisp_trans(documentation(tClazzMammal,vEnglishLanguage,s("A","#$Vertebrate","having","a","constant","body","temperature","and","characterized","by","the","presence","of","hair",",","mammary","glands",",","and","sweat","glands",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569364).
lisp_trans(genls(tSumoAquaticMammal,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569533).
lisp_trans(documentation(tSumoAquaticMammal,vEnglishLanguage,s("The","#$Class","of","#$Mammals","that","dwell","chiefly","in","the","water",".","Includes","whales",",","dolphins",",","manatees",",","seals",",","and","walruses",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569565).
lisp_trans(genls(tSumoHoofedMammal,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569731).
lisp_trans(documentation(tSumoHoofedMammal,vEnglishLanguage,s("The","#$Class","of","quadruped","#$Mammals","with","hooves",".","Includes","horses",",","cows",",","sheep",",","pigs",",","antelope",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569762).
lisp_trans(genls(tClazzMarsupial,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569909).
lisp_trans(documentation(tClazzMarsupial,vEnglishLanguage,s("The","#$Class","of","#$Mammals","which","have","a","pouch","for","their","young",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':569937).
lisp_trans(genls(tClazzCarnivore,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570043).
lisp_trans(documentation(tClazzCarnivore,vEnglishLanguage,s("The","#$Class","of","flesh","-","eating","#$Mammals",".","Members","of","this","#$Class","typically","have","four","or","five","claws","on","each","paw",".","Includes","cats",",","dogs",",","bears",",","racoons",",","and","skunks",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570071).
lisp_trans(=>(and(tClazzCarnivore(CARNIVORE),actEating(EAT),agent(EAT,CARNIVORE),patient(EAT,PREY)),tClazzAnimal(PREY)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570277).
lisp_trans(genls(tSumoCanine,tClazzCarnivore),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570443).
lisp_trans(disjointWith(tSumoCanine,tSumoFeline),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570471).
lisp_trans(documentation(tSumoCanine,vEnglishLanguage,s("The","#$Class","of","#$Carnivores","with","completely","separable","toes",",","nonretractable","claws",",","and","long","muzzles",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570496).
lisp_trans(genls(tSumoFeline,tClazzCarnivore),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570638).
lisp_trans(documentation(tSumoFeline,vEnglishLanguage,s("The","#$Class","of","#$Carnivores","with","completely","separable","toes",",","slim","bodies",",","and","rounded","heads",".","All","felines","other","than","the","cheetah","have","retractable","claws",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570666).
lisp_trans(genls(tClazzRodent,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570860).
lisp_trans(documentation(tClazzRodent,vEnglishLanguage,s("The","#$Class","of","#$Mammals","with","one","or","two","pairs","of","incisors","for","gnawing",".","Includes","rats",",","mice",",","guinea","pigs",",","and","rabbits",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':570885).
lisp_trans(genls(tClazzPrimate,tClazzMammal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571047).
lisp_trans(disjointDecomposition(tClazzPrimate,tClazzApe,tClazzMonkey,tSumoHominid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571073).
lisp_trans(documentation(tClazzPrimate,vEnglishLanguage,s("The","#$Class","of","#$Mammals","which","are","#$Primates",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571124).
lisp_trans(genls(tClazzApe,tClazzPrimate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571214).
lisp_trans(documentation(tClazzApe,vEnglishLanguage,s("Various","#$Primates","with","no","tails","or","only","short","tails",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571237).
lisp_trans(genls(tClazzMonkey,tClazzPrimate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571330).
lisp_trans(documentation(tClazzMonkey,vEnglishLanguage,s("Various","#$Primates","with","relatively","long","tails",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571356).
lisp_trans(genls(tSumoHominid,tClazzPrimate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571445).
lisp_trans(documentation(tSumoHominid,vEnglishLanguage,s("Includes","#$Humans","and","relatively","recent","ancestors","of","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571472).
lisp_trans(genls(tSumoHuman,tSumoHominid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571578).
lisp_trans(genls(tSumoHuman,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571603).
lisp_trans(sumo_partition(tSumoHuman,tSumoMan,tSumoWoman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571635).
lisp_trans(documentation(tSumoHuman,vEnglishLanguage,s("Modern","man",",","the","only","remaining","species","of","the","Homo","genus",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571663).
lisp_trans(genls(tSumoMan,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571762).
lisp_trans(documentation(tSumoMan,vEnglishLanguage,s("The","class","of","#$Male","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571783).
lisp_trans(=>(tSumoMan(MAN),sumoAttribute(MAN,tMale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571852).
lisp_trans(genls(tSumoWoman,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571906).
lisp_trans(documentation(tSumoWoman,vEnglishLanguage,s("The","class","of","#$Female","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':571929).
lisp_trans(=>(tSumoWoman(WOMAN),sumoAttribute(WOMAN,tFemale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572002).
lisp_trans(genls(tClazzReptile,tSumoColdBloodedVertebrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572064).
lisp_trans(documentation(tClazzReptile,vEnglishLanguage,s("A","#$ColdBloodedVertebrate","having","an","external","covering","of","scales","or","horny","plates",".","#$Reptiles","breathe","by","means","of","#$Lungs","and","generally","lay","eggs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572105).
lisp_trans(genls(tSumoBiologicallyActiveSubstance,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572379).
lisp_trans(documentation(tSumoBiologicallyActiveSubstance,vEnglishLanguage,s("A","#$Substance","that","is","capable","of","inducing","a","change","in","the","structure","or","functioning","of","an","#$Organism",".","This","#$Class","includes","#$Substances","used","in","the","treatment",",","diagnosis",",","prevention","or","analysis","of","normal","and","abnormal","body","function",".","This","#$Class","also","includes","#$Substances","that","occur","naturally","in","the","body","and","are","administered","therapeutically",".","Finally",",","#$BiologicallyActiveSubstance","includes","#$Nutrients",",","most","drugs","of","abuse",",","and","agents","that","require","special","handling","because","of","their","toxicity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572428).
lisp_trans(genls(tNutrient,tSumoBiologicallyActiveSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':572985).
lisp_trans(disjointDecomposition(tNutrient,tSumoProtein,tSumoCarbohydrate,tVitamin),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573033).
lisp_trans(documentation(tNutrient,vEnglishLanguage,s("A","#$BiologicallyActiveSubstance","required","by","an","#$Organism",".","It","is","generally","ingested","as","#$Food",",","and","it","is","of","primary","interest","because","of","its","role","in","the","biologic","functioning","of","the","#$Organism",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573095).
lisp_trans(genls(tSumoProtein,tNutrient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573331).
lisp_trans(documentation(tSumoProtein,vEnglishLanguage,s("A","#$Nutrient","made","up","of","amino","acids","joined","by","peptide","bonds",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573359).
lisp_trans(genls(tSumoEnzyme,tSumoProtein),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573463).
lisp_trans(documentation(tSumoEnzyme,vEnglishLanguage,s("A","complex","#$Protein","that","is","produced","by","living","cells","and","which","catalyzes","specific","biochemical","reactions",".","There","are","six","main","types","of","enzymes",":","oxidoreductases",",","transferases",",","hydrolases",",","lyases",",","isomerases",",","and","ligases",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573489).
lisp_trans(genls(tSumoCarbohydrate,tNutrient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573749).
lisp_trans(documentation(tSumoCarbohydrate,vEnglishLanguage,s("An","element","of","living","cells","and","a","source","of","energy","for","#$Animals",".","This","class","includes","both","simple","#$Carbohydrates",",","i",".","e",".","sugars",",","and","complex","#$Carbohydrates",",","i",".","e",".","starches",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':573782).
lisp_trans(genls(tVitamin,tNutrient),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574002).
lisp_trans(documentation(tVitamin,vEnglishLanguage,s("A","#$Nutrient","present","in","natural","products","or","made","synthetically",",","which","is","essential","in","the","diet","of","#$Humans","and","other","higher","#$Animals",".","Included","here","are","#$Vitamin","precursors","and","provitamins",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574030).
lisp_trans(genls(tSumoLiquidMixture,tMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574265).
lisp_trans(sumo_partition(tSumoLiquidMixture,tSolution,tSuspension),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574298).
lisp_trans(documentation(tSumoLiquidMixture,vEnglishLanguage,s("Any","#$Mixture","that","satisfies","two","conditions",",","viz",".","it","is","made","up","predominantly","of","things","which","are","a","#$Liquid","and","any","component","other","than","#$Liquid","in","the","#$Mixture","is","in","the","form","of","fine","particles","which","are","suspended","in","the","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574344).
lisp_trans(=>(tSumoLiquidMixture(MIX),exists([PART],and(part(PART,MIX),sumoAttribute(PART,tSumoLiquid)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574627).
lisp_trans(genls(tSolution,tSumoLiquidMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574759).
lisp_trans(documentation(tSolution,vEnglishLanguage,s("A","liquid","mixture",".","The","most","abundant","component","in","a","solution","is","called","the","solvent",".","Other","components","are","called","solutes",".","A","solution",",","though","homogeneous",",","may","nonetheless","have","variable","composition",".","Any","amount","of","salt",",","up","to","a","maximum","limit",",","can","be","dissolved","in","a","given","amount","of","water",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':574793).
lisp_trans(genls(tSuspension,tSumoLiquidMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575120).
lisp_trans(documentation(tSuspension,vEnglishLanguage,s("A","#$LiquidMixture","where","at","least","one","of","the","components","of","the","#$Mixture","is","equally","distributed","throughout","the","#$Mixture","but","is","not","dissolved","in","it",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575156).
lisp_trans(genls(tSumoGasMixture,tMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575350).
lisp_trans(disjointWith(tSumoGasMixture,tSumoLiquidMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575380).
lisp_trans(documentation(tSumoGasMixture,vEnglishLanguage,s("Any","#$Mixture","that","satisfies","two","conditions",",","viz",".","it","is","made","up","predominantly","of","things","which","are","a","#$Gas","and","any","component","other","than","#$Gas","in","the","#$Mixture","is","in","the","form","of","fine","particles","which","are","suspended","in","the","#$Gas",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575416).
lisp_trans(=>(tSumoGasMixture(MIX),exists([PART],and(part(PART,MIX),sumoAttribute(PART,tSumoGas)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575687).
lisp_trans(genls(tSumoCloud,tSumoGasMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575813).
lisp_trans(documentation(tSumoCloud,vEnglishLanguage,s("Any","#$GasMixture","that","is","visible",",","e",".","g",".","#$Smoke","produced","by","a","fire","or","clouds","of","water","vapor","in","the","sky",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575841).
lisp_trans(=>(tSumoCloud(CLOUD),capability(actSeeing,patient,CLOUD)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':575985).
lisp_trans(genls(tSmoke,tSumoCloud),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576056).
lisp_trans(documentation(tSmoke,vEnglishLanguage,s("A","mixture","of","fine","particles","suspended","in","a","gas","that","is","produced","by","#$Combustion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576079).
lisp_trans(=>(tSmoke(SMOKE),exists([BURNING],and(actCombustion(BURNING),result(BURNING,SMOKE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576201).
lisp_trans(genls(tSumoWaterCloud,tSumoCloud),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576343).
lisp_trans(documentation(tSumoWaterCloud,vEnglishLanguage,s("Any","#$Cloud","that","is","composed","primarily","of","water","vapor",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576371).
lisp_trans(=>(tSumoWaterCloud(CLOUD),exists([WATER],and(tWater(WATER),part(WATER,CLOUD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576472).
lisp_trans(=>(tSumoWaterCloud(CLOUD),all([PART],=>(and(part(PART,CLOUD),not(tWater(PART))),exists([WATER],and(tWater(WATER),part(WATER,CLOUD),measure(WATER,MEASURE1),measure(PART,MEASURE2),greaterThan(MEASURE1,MEASURE2)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':576606).
lisp_trans(genls(tAir,tSumoGasMixture),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577015).
lisp_trans(documentation(tAir,vEnglishLanguage,'Air is the gaseous stuff that makes up the atmosphere surrounding Earth.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577041).
lisp_trans(=>(tSumoWind(WIND),exists([AIR],and(patient(WIND,AIR),tAir(AIR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577155).
lisp_trans(genls(tSumoBodySubstance,tSumoSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577276).
lisp_trans(documentation(tSumoBodySubstance,vEnglishLanguage,s("Extracellular","material","and","mixtures","of","cells","and","extracellular","material","that","are","produced",",","excreted","or","accreted","by","an","#$Organism",".","Included","here","are","#$Substances","such","as","saliva",",","dental","enamel",",","sweat",",","hormones",",","and","gastric","acid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577311).
lisp_trans(genls(tSumoAnimalSubstance,tSumoBodySubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577588).
lisp_trans(documentation(tSumoAnimalSubstance,vEnglishLanguage,'BodySubstances that are produced exclusively by #$Animals.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577629).
lisp_trans(=>(and(tSumoAnimalSubstance(SUBSTANCE),tSumoOrganism(ANIMAL),part(SUBSTANCE,ANIMAL)),tClazzAnimal(ANIMAL)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577741).
lisp_trans(genls(tSumoPlantSubstance,tSumoBodySubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577895).
lisp_trans(documentation(tSumoPlantSubstance,vEnglishLanguage,'BodySubstances that are produced exclusively by #$Plants.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':577935).
lisp_trans(=>(and(tSumoPlantSubstance(SUBSTANCE),tSumoOrganism(PLANT),part(SUBSTANCE,PLANT)),tClazzPlant(PLANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':578045).
lisp_trans(genls(tHormone,tSumoBodySubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':578194).
lisp_trans(genls(tHormone,tSumoBiologicallyActiveSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':578227).
lisp_trans(documentation(tHormone,vEnglishLanguage,s("In","#$Animals",",","a","chemical","secreted","by","an","endocrine","gland","whose","products","are","released","into","the","circulating","fluid",".","#$Plant","hormones","or","synthetic","hormones","which","are","used","only","to","alter","or","control","various","physiologic","processes",",","e",".","g",".",",","reproductive","control","agents",",","are","assigned","to","the","#$Class","#$BiologicallyActiveSubstance",".","#$Hormones","act","as","chemical","messengers","and","regulate","various","physiologic","processes","such","as","growth",",","reproduction",",","metabolism",",","etc",".","They","usually","fall","into","two","broad","categories",",","viz",".","steroid","hormones","and","peptide","hormones",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':578274).
lisp_trans(=>(tHormone(HORMONE),exists([PROCESS,GLAND],and(tPartTypeGland(GLAND),instrument(PROCESS,GLAND),result(PROCESS,HORMONE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':578851).
lisp_trans(genls(tPartTypeBlood,tSumoBodySubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579037).
lisp_trans(documentation(tPartTypeBlood,vEnglishLanguage,s("A","fluid","present","in","#$Animals","that","transports","#$Nutrients","to","and","waste","products","away","from","various","#$BodyParts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579068).
lisp_trans(rtUnaryFunction(uFoodForFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579219).
lisp_trans(argGenl(uFoodForFn,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579254).
lisp_trans(resultGenl(uFoodForFn,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579292).
lisp_trans(documentation(uFoodForFn,vEnglishLanguage,s("A","#$Function","that","denotes","#$SelfConnectedObject","containing","#$Nutrients",",","such","as","carbohydrates",",","proteins",",","and","fats",",","that","can","be","ingested","by","a","the","given","class","of","living","#$Animal","and","metabolized","into","energy","and","body","tissue",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579338).
lisp_trans(=>(isa(FOOD,uFoodForFn(A)),exists([NUTRIENT],and(tNutrient(NUTRIENT),part(NUTRIENT,FOOD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579604).
lisp_trans(genls(tMeat,tSumoSelfConnectedObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579742).
lisp_trans(documentation(tMeat,vEnglishLanguage,s("Any","food","which","was","originally","part","of","an","#$Animal","and","is","not","ingested","by","drinking",",","including","eggs","and","animal","blood","that","is","eaten","as","food",".","Note","that","this","class","covers","both","raw","meat","and","meat","that","has","been","prepared","in","some","way",",","e",".","g",".","by","cooking",".","Note","too","that","preparations","involving","#$Meat","and","#$FruitOrVegetable","are","classed","directly","under","#$Food",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':579778).
lisp_trans(=>(tMeat(MEAT),all([PART],=>(part(PART,MEAT),exists([SUBPART,TIME,ANIMAL],and(part(SUBPART,PART),holdsDuring(TIME,and(tClazzAnimal(ANIMAL),part(SUBPART,ANIMAL)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':580163).
lisp_trans(genls(tSumoAnatomicalStructure,tSumoOrganicObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':580972).
lisp_trans(sumo_partition(tSumoAnatomicalStructure,tSumoBodyPart,tSumoAbnormalAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581017).
lisp_trans(sumo_partition(tSumoAnatomicalStructure,tSumoAnimalAnatomicalStructure,tSumoPlantAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581086).
lisp_trans(documentation(tSumoAnatomicalStructure,vEnglishLanguage,s("A","normal","or","pathological","part","of","the","anatomy","or","structural","organization","of","an","#$Organism",".","This","class","covers","#$BodyParts",",","as","well","as","structures","that","are","given","off","by","#$Organisms",",","e",".","g",".","#$ReproductiveBodies",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581169).
lisp_trans(=>(tSumoAnatomicalStructure(ANAT),exists([ORGANISM,TIME],and(tSumoOrganism(ORGANISM),temporalPart(TIME,uWhenFn(ORGANISM)),holdsDuring(TIME,part(ANAT,ORGANISM))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581430).
lisp_trans(=>(tSumoAnatomicalStructure(PART),exists([CELL],and(tCell(CELL),part(CELL,PART)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581671).
lisp_trans(genls(tSumoAbnormalAnatomicalStructure,tSumoAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581818).
lisp_trans(documentation(tSumoAbnormalAnatomicalStructure,vEnglishLanguage,s("Any","#$AnatomicalStructure","which","is","not","normally","found","in","the","#$Organism","of","which","it","is","a","part",",","i",".","e",".","it","is","the","result","of","a","#$PathologicProcess",".","This","class","covers","tumors",",","birth","marks",",","goiters",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':581877).
lisp_trans(=>(tSumoAbnormalAnatomicalStructure(STRUCTURE),exists([PROC],and(actPathologicProcess(PROC),result(PROC,STRUCTURE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582137).
lisp_trans(genls(tSumoBodyPart,tSumoAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582307).
lisp_trans(documentation(tSumoBodyPart,vEnglishLanguage,s("A","collection","of","#$Cells","and","#$Tissues","which","are","localized","to","a","specific","area","of","an","#$Organism","and","which","are","not","pathological",".","The","instances","of","this","#$Class","range","from","gross","structures","to","small","components","of","complex","#$Organs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582347).
lisp_trans(=>(tSumoBodyPart(PART),exists([ORGANISM,TIME],and(tSumoOrganism(ORGANISM),temporalPart(TIME,uWhenFn(ORGANISM)),holdsDuring(TIME,component(PART,ORGANISM))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582616).
lisp_trans(=>(tSumoBodyPart(PART),exists([PROC],and(actPhysiologicProcess(PROC),result(PROC,PART)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582851).
lisp_trans(genls(tSumoAnimalAnatomicalStructure,tSumoAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':582993).
lisp_trans(documentation(tSumoAnimalAnatomicalStructure,vEnglishLanguage,'AnatomicalStructures that are possessed exclusively by #$Animals.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583050).
lisp_trans(=>(and(tSumoAnimalAnatomicalStructure(STRUCTURE),tSumoOrganism(ANIMAL),part(STRUCTURE,ANIMAL)),tClazzAnimal(ANIMAL)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583179).
lisp_trans(genls(tSumoPlantAnatomicalStructure,tSumoAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583343).
lisp_trans(documentation(tSumoPlantAnatomicalStructure,vEnglishLanguage,'AnatomicalStructures that are possessed exclusively by #$Plants.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583399).
lisp_trans(=>(and(tSumoPlantAnatomicalStructure(STRUCTURE),tSumoOrganism(PLANT),part(STRUCTURE,PLANT)),tClazzPlant(PLANT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583526).
lisp_trans(genls(tSumoReproductiveBody,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583685).
lisp_trans(documentation(tSumoReproductiveBody,vEnglishLanguage,s("Reproductive","structure","of","#$Organisms",".","Consists","of","an","#$Embryonic","#$Object","and","a","nutritive","/","protective","envelope",".","Note","that","this","class","includes","seeds",",","spores",",","and","#$FruitOrVegetables",",","as","well","as","the","eggs","produced","by","#$Animals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583722).
lisp_trans(genls(tEgg,tSumoReproductiveBody),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':583999).
lisp_trans(genls(tEgg,tSumoAnimalAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584031).
lisp_trans(documentation(tEgg,vEnglishLanguage,s("The","fertilized","or","unfertilized","female","#$ReproductiveBody","of","an","#$Animal",".","This","includes","#$Bird","and","#$Reptile","eggs",",","as","well","as","mammalian","ova",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584072).
lisp_trans(genls(tPartTypeSeed,tSumoReproductiveBody),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584569).
lisp_trans(genls(tPartTypeSeed,tSumoPlantAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584602).
lisp_trans(documentation(tPartTypeSeed,vEnglishLanguage,s("The","fertilized","or","unfertilized","female","#$ReproductiveBody","of","a","#$FloweringPlant",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584643).
lisp_trans(=>(tPartTypeSeed(SEED),exists([PLANT,TIME],and(tClazzFloweringPlant(PLANT),holdsDuring(TIME,part(SEED,PLANT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584763).
lisp_trans(genls(tPartTypePollen,tSumoReproductiveBody),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584924).
lisp_trans(genls(tPartTypePollen,tSumoPlantAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':584959).
lisp_trans(documentation(tPartTypePollen,vEnglishLanguage,s("A","powder","produced","by","#$FloweringPlants","that","contains","male","gametes","and","is","capable","of","fertilizing","the","seeds","of","#$FloweringPlants","of","the","same","species",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585002).
lisp_trans(genls(tSumoFruitOrVegetable,tSumoPlantAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585192).
lisp_trans(genls(tSumoFruitOrVegetable,tSumoReproductiveBody),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585245).
lisp_trans(documentation(tSumoFruitOrVegetable,vEnglishLanguage,s("Any","fruit","or","vegetable",",","i",".","e",".","a","ripened","#$ReproductiveBody","of","a","#$Plant",".","Note","that","#$FruitOrVegetable","is","not","a","subclass","of","#$Food",",","because","some","fruits",",","e",".","g",".","poisonous","berries",",","are","not","edible",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585290).
lisp_trans(genls(tSumoSpore,tSumoReproductiveBody),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585534).
lisp_trans(genls(tSumoSpore,tSumoPlantAnatomicalStructure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585568).
lisp_trans(documentation(tSumoSpore,vEnglishLanguage,s("Any","#$ReproductiveBody","of","a","#$NonFloweringPlant",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585610).
lisp_trans(=>(tSumoSpore(SPORE),exists([PLANT,TIME],and(tSumoNonFloweringPlant(PLANT),holdsDuring(TIME,part(SPORE,PLANT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585700).
lisp_trans(genls(actBodyCovering,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585867).
lisp_trans(documentation(actBodyCovering,vEnglishLanguage,s("Any","#$BodyPart","which","is","a","covering","of","another","#$BodyPart","or","of","an","entire","#$Organism",".","This","would","include","the","rinds","of","#$FruitOrVegetables","and","the","skins","of","#$Animals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':585900).
lisp_trans(=>(actBodyCovering(COVER),exists([BODY],and(superficialPart(COVER,BODY),or(tSumoOrganism(BODY),tSumoBodyPart(BODY))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586114).
lisp_trans(genls(actBodyJunction,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586316).
lisp_trans(documentation(actBodyJunction,vEnglishLanguage,s("The","place","where","two","#$BodyParts","meet","or","connect",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586349).
lisp_trans(=>(actBodyJunction(JUNCT),exists([OBJ1,OBJ2],and(tSumoBodyPart(OBJ1),tSumoBodyPart(OBJ2),connects(JUNCT,OBJ1,OBJ2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586446).
lisp_trans(genls(tSumoBodyCavity,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586646).
lisp_trans(documentation(tSumoBodyCavity,vEnglishLanguage,s("Any","#$BodyPart","which","contains","an","unfilled","space",",","e",".","g",".","#$BodyVessels",",","the","atria","and","ventricles","of","the","heart",",","the","lungs",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586677).
lisp_trans(genls(tSumoBodyVessel,tSumoBodyCavity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586847).
lisp_trans(documentation(tSumoBodyVessel,vEnglishLanguage,s("Any","tube","-","like","structure","which","occurs","naturally","in","an","#$Organism","and","through","which","a","#$BodySubstance","can","circulate",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':586880).
lisp_trans(genls(tCell,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587041).
lisp_trans(documentation(tCell,vEnglishLanguage,s("The","fundamental","structural","and","functional","unit","of","living","#$Organisms",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587066).
lisp_trans(genls(tPartTypeOrgan,tSumoBodyPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587176).
lisp_trans(documentation(tPartTypeOrgan,vEnglishLanguage,s("A","somewhat","independent","#$BodyPart","that","performs","a","specialized","function",".","Note","that","this","functional","definition","covers","bodily","systems",",","e",".","g",".","the","digestive","system","or","the","central","nervous","system",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587202).
lisp_trans(=>(tPartTypeOrgan(ORGAN),exists([PURP],hasPurpose(ORGAN,PURP))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587433).
lisp_trans(genls(tPartTypeGland,tPartTypeOrgan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587518).
lisp_trans(documentation(tPartTypeGland,vEnglishLanguage,s("An","#$Organ","that","removes","#$Substances","from","the","#$Blood",",","alters","them","in","some","way",",","and","then","releases","them",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587541).
lisp_trans(genls(tSumoTissue,tSumoBodySubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587686).
lisp_trans(disjointDecomposition(tSumoTissue,tSumoBone,tPartTypeMuscle,tSumoFatTissue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587718).
lisp_trans(documentation(tSumoTissue,vEnglishLanguage,s("An","aggregation","of","similarly","specialized","#$Cells","and","the","associated","intercellular","substance",".","#$Tissues","are","relatively","non","-","localized","in","comparison","to","#$BodyParts",",","#$Organs","or","#$Organ","components",".","The","main","features","of","#$Tissues","are","self","-","connectivity","(","see","#$SelfConnectedObject",")","and","being","a","homogeneous","mass","(","all","parts","in","the","same","granularity","are","instances","of","#$Tissue","as","well",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':587771).
lisp_trans(=>(tSumoTissue(STUFF),exists([PART],and(tCell(PART),part(PART,STUFF)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588187).
lisp_trans(=>(tSumoTissue(STUFF),exists([ORGANISM],and(tSumoOrganism(ORGANISM),part(STUFF,ORGANISM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588323).
lisp_trans(genls(tSumoBone,tSumoTissue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588475).
lisp_trans(genls(tSumoBone,tSumoAnimalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588498).
lisp_trans(documentation(tSumoBone,vEnglishLanguage,s("Rigid","#$Tissue","composed","largely","of","calcium","that","makes","up","the","skeleton","of","#$Vertebrates",".","Note","that","this","#$Class","also","includes","teeth",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588530).
lisp_trans(=>(tSumoBone(BONE),exists([VERT],and(tClazzVertebrate(VERT),part(BONE,VERT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588703).
lisp_trans(genls(tPartTypeMuscle,tSumoTissue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588831).
lisp_trans(genls(tPartTypeMuscle,tSumoAnimalSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588856).
lisp_trans(documentation(tPartTypeMuscle,vEnglishLanguage,s("Nonrigid","#$Tissue","appearing","only","in","#$Animals","and","composed","largely","of","contractile","cells",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':588890).
lisp_trans(genls(tSumoFatTissue,tSumoTissue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589021).
lisp_trans(documentation(tSumoFatTissue,vEnglishLanguage,s("Nonrigid","#$Tissue","that","is","composed","largely","of","fat","cells",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589049).
lisp_trans(genls(xtNoun,tSumoWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589151).
lisp_trans(sumo_partition(tSumoWord,xtNoun,xtVerb,xtAdjective,xtAdverb,tSumoParticleWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589172).
lisp_trans(documentation(xtNoun,vEnglishLanguage,s("One","of","the","parts","of","speech",".","The","#$Class","of","#$Words","that","conventionally","denote","#$Objects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589229).
lisp_trans(genls(xtVerb,tSumoWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589359).
lisp_trans(documentation(xtVerb,vEnglishLanguage,s("One","of","the","parts","of","speech",".","The","#$Class","of","#$Words","that","conventionally","denote","#$Processes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589380).
lisp_trans(genls(xtAdjective,tSumoWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589512).
lisp_trans(documentation(xtAdjective,vEnglishLanguage,s("One","of","the","parts","of","speech",".","The","#$Class","of","#$Words","that","conventionally","denote","#$Attributes","of","#$Objects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589538).
lisp_trans(genls(xtAdverb,tSumoWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589689).
lisp_trans(documentation(xtAdverb,vEnglishLanguage,s("One","of","the","parts","of","speech",".","The","#$Class","of","#$Words","that","conventionally","denote","#$Attributes","of","#$Processes",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589712).
lisp_trans(genls(tSumoParticleWord,tSumoWord),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589862).
lisp_trans(documentation(tSumoParticleWord,vEnglishLanguage,s("An","umbrella","#$Class","for","any","#$Word","that","does","not","fit","into","the","other","subclasses","of","#$Word",".","A","#$ParticleWord","is","generally","a","small","term","that","serves","a","grammatical","or","logical","function",",","e",".","g",".","'","and","'",",","'","of","'",",","'","since","'",",","etc",".","At","some","point",",","this","class","might","be","broken","up","into","the","subclasses","'","Connective","'",",","'","Preposition","'",",","etc",".","Note","that","the","class","#$ParticleWord","includes","both","personal","and","possessive","pronouns",",","e",".","g",".","'","she","'",",","'","hers","'",",","'","it","'",",","'","its","'",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':589891).
lisp_trans(genls(tSumoMorpheme,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':590374).
lisp_trans(documentation(tSumoMorpheme,vEnglishLanguage,s("Part","of","a","#$Word","which","cannot","be","subdivided","and","which","expresses","a","meaning",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':590415).
lisp_trans(=>(tSumoMorpheme(MORPH),not(exists([OTHERMORPH],and(tSumoMorpheme(OTHERMORPH),part(OTHERMORPH,MORPH),not(equal(OTHERMORPH,MORPH)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':590534).
lisp_trans(=>(tSumoMorpheme(MORPH),exists([WORD],and(tSumoWord(WORD),part(MORPH,WORD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':590750).
lisp_trans(=>(tSumoWord(WORD),exists([PART],and(part(PART,WORD),tSumoMorpheme(PART)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':590887).
lisp_trans(genls(xtPhrase,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591023).
lisp_trans(disjointDecomposition(xtPhrase,xtVerbPhrase,xtNounPhrase,xtPrepositionalPhrase),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591062).
lisp_trans(documentation(xtPhrase,vEnglishLanguage,s("A","set","of","#$Words","in","a","#$Language","which","form","a","unit",",","i",".","e",".","express","a","meaning","in","the","#$Language",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591135).
lisp_trans(=>(xtPhrase(PHRASE),exists([PART1,PART2],and(part(PART1,PHRASE),part(PART2,PHRASE),tSumoWord(PART1),tSumoWord(PART2),not(equal(PART1,PART2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591271).
lisp_trans(genls(xtVerbPhrase,xtPhrase),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591490).
lisp_trans(documentation(xtVerbPhrase,vEnglishLanguage,s("A","#$Phrase","that","has","the","same","function","as","a","#$Verb",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591519).
lisp_trans(=>(xtVerbPhrase(PHRASE),exists([VERB],and(xtVerb(VERB),part(VERB,PHRASE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591616).
lisp_trans(genls(xtNounPhrase,xtPhrase),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591748).
lisp_trans(disjointWith(xtNounPhrase,xtVerbPhrase),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591777).
lisp_trans(documentation(xtNounPhrase,vEnglishLanguage,s("A","#$Phrase","that","has","the","same","function","as","a","#$Noun",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591810).
lisp_trans(=>(ftSentence(SENTENCE),exists([PHRASE1,PHRASE2],and(xtNounPhrase(PHRASE1),xtVerbPhrase(PHRASE2),part(PHRASE1,SENTENCE),part(PHRASE2,SENTENCE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':591907).
lisp_trans(=>(xtNounPhrase(PHRASE),exists([NOUN],and(xtNoun(NOUN),part(NOUN,PHRASE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592152).
lisp_trans(genls(xtPrepositionalPhrase,xtPhrase),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592284).
lisp_trans(documentation(xtPrepositionalPhrase,vEnglishLanguage,s("A","#$Phrase","that","begins","with","a","preposition","and","that","functions","as","an","#$Adjective","or","an","#$Adverb",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592322).
lisp_trans(=>(xtPrepositionalPhrase(PHRASE),exists([PREP],and(tSumoParticleWord(PREP),part(PREP,PHRASE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592472).
lisp_trans(genls(tSumoText,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592621).
lisp_trans(genls(tSumoText,tSumoContentBearingObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592658).
lisp_trans(genls(tSumoText,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592695).
lisp_trans(documentation(tSumoText,vEnglishLanguage,s("A","#$LinguisticExpression","or","set","of","#$LinguisticExpressions","that","perform","a","specific","function","related","to","#$Communication",",","e",".","g",".","express","a","discourse","about","a","particular","topic",",","and","that","are","inscribed","in","a","#$CorpuscularObject","by","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592720).
lisp_trans(=>(tSumoText(TEXT),exists([PART],and(part(PART,TEXT),ftLinguisticExpression(PART)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':592992).
lisp_trans(=>(tSumoText(TEXT),exists([WRITE],and(actWriting(WRITE),result(WRITE,TEXT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':593140).
lisp_trans(genls(tSumoFactualText,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':593270).
lisp_trans(disjointWith(tSumoFactualText,tSumoFictionalText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':593298).
lisp_trans(documentation(tSumoFactualText,vEnglishLanguage,s("The","class","of","#$Texts","that","purport","to","reveal","facts","about","the","world",".","Such","texts","are","often","known","as","information","or","as","non","-","fiction",".","Note","that","something","can","be","an","instance","of","#$FactualText",",","even","if","it","is","wholly","inaccurate",".","Whether","something","is","a","#$FactualText","is","determined","by","the","beliefs","of","the","agent","creating","the","text",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':593335).
lisp_trans(=>(and(isa(TEXT,CLASS),genls(CLASS,tSumoFactualText),authors(AGENT,CLASS),subsumesContentInstance(TEXT,CONTENT),ftFormula(CONTENT)),believes(AGENT,CONTENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':593989).
lisp_trans(genls(tSumoFictionalText,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':594211).
lisp_trans(documentation(tSumoFictionalText,vEnglishLanguage,s("The","class","of","#$Texts","that","purport","to","be","largely","a","product","of","the","author","'s","imagination",",","i",".","e",".","the","author","does","not","believe","that","most","of","the","content","conveyed","by","the","text","is","an","accurate","depiction","of","the","real","world",".","Note","that","something","can","be","an","instance","of","#$FictionalText",",","even","if","it","is","completely","true",".","Whether","something","is","a","#$FictionalText","is","determined","by","the","beliefs","of","the","agent","creating","the","text",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':594241).
lisp_trans(=>(and(isa(TEXT,CLASS),genls(CLASS,tSumoFictionalText),authors(AGENT,CLASS)),exists([CONTENT],and(subsumesContentInstance(TEXT,CONTENT),ftFormula(CONTENT),not(believes(AGENT,CONTENT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595092).
lisp_trans(genls(ftSentence,ftLinguisticExpression),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595369).
lisp_trans(documentation(ftSentence,vEnglishLanguage,s("A","syntactically","well","-","formed","formula","of","a","#$Language",".","It","includes",",","at","minimum",",","a","predicate","and","a","subject","(","which","may","be","explicit","or","implicit",")",",","and","it","expresses","a","#$Proposition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595410).
lisp_trans(=>(ftSentence(SENT),exists([PROP],and(tProposition(PROP),containsInformation(SENT,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595630).
lisp_trans(rtBinaryPredicate(authors),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595788).
lisp_trans(rtAsymmetricRelation(authors),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595823).
lisp_trans(argIsa(authors,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595861).
lisp_trans(argGenl(authors,2,tSumoContentBearingObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595886).
lisp_trans(documentation(authors,vEnglishLanguage,s("(","#$authors","?","AGENT","?","TEXTCLASS",")","means","that","?","AGENT","is","creatively","responsible","for","the","content","of","all","instances","of","?","TEXTCLASS",".","For","example",",","Agatha","Christie","is","author","of","Murder","_","on","_","the","_","Orient","_","Express",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':595948).
lisp_trans(=>(authors(AGENT,TEXTCLASS),exists([PROCESS,INSTANCE],and(agent(PROCESS,AGENT),isa(INSTANCE,TEXTCLASS),result(PROCESS,INSTANCE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596199).
lisp_trans(rtBinaryPredicate(editor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596418).
lisp_trans(rtAsymmetricRelation(editor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596452).
lisp_trans(argIsa(editor,1,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596489).
lisp_trans(argGenl(editor,2,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596513).
lisp_trans(documentation(editor,vEnglishLanguage,s("(","#$editor","?","AGENT","?","TEXTCLASS",")","means","that","?","AGENT","is","an","editor","of","the","content","contained","(","or","realized",")","in","all","instances","of","?","TEXTCLASS",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596558).
lisp_trans(rtBinaryPredicate(publishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596731).
lisp_trans(rtAsymmetricRelation(publishes),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596768).
lisp_trans(argIsa(publishes,1,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596808).
lisp_trans(argGenl(publishes,2,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596842).
lisp_trans(documentation(publishes,vEnglishLanguage,s("(","#$publishes","?","ORG","?","TEXTCLASS",")","means","that","?","ORG","publishes","all","instances","of","?","TEXTCLASS",".","For","example",",","Bantam","Books","publishes","Agatha","Christie","'s","Murder","_","on","_","the","_","Orient","_","Express",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':596890).
lisp_trans(=>(and(publishes(ORG,TEXTCLASS),isa(INST,TEXTCLASS)),exists([PUB],and(actPublication(PUB),agent(PUB,ORG),patient(PUB,INST)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597117).
lisp_trans(rtBinaryFunction(iCW_EditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597308).
lisp_trans(rtPartialValuedRelation(iCW_EditionFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597344).
lisp_trans(argGenl(iCW_EditionFn,1,tSumoContentBearingObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597387).
lisp_trans(argIsa(iCW_EditionFn,2,ftPositiveInteger),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597437).
lisp_trans(resultGenl(iCW_EditionFn,tSumoContentBearingObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597474).
lisp_trans(documentation(iCW_EditionFn,vEnglishLanguage,s("A","#$BinaryFunction","that","maps","a","type","of","text","(","e",".","g",".","Agatha","Christie","'s","Murder","_","on","_","the","_","Orient","_","Express",")","and","a","number","to","the","edition","of","the","text","type","corresponding","to","the","number",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597521).
lisp_trans(=>(and(equal(iCW_EditionFn(TEXT,INT1),EDITION1),equal(iCW_EditionFn(TEXT,INT2),EDITION2),greaterThan(INT2,INT1),actPublication(PUB1),actPublication(PUB2),isa(CBO1,EDITION1),isa(CBO2,EDITION2),patient(PUB1,CBO1),patient(PUB2,CBO2),date(PUB1,DATE1),date(PUB2,DATE2)),before(iTimeOf_EndFn(DATE1),iTimeOf_EndFn(DATE2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':597738).
lisp_trans(=>(equal(iCW_EditionFn(TEXT1,NUMBER),TEXT2),subsumesContentClass(TEXT1,TEXT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':598163).
lisp_trans(genls(tSumoSummary,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':600051).
lisp_trans(documentation(tSumoSummary,vEnglishLanguage,s("A","short","#$Text","that","is","a","summary","of","another",",","longer","#$Text",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':600075).
lisp_trans(=>(tSumoSummary(TEXT),exists([TEXT2],and(tSumoText(TEXT2),subsumesContentInstance(TEXT2,TEXT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':600178).
lisp_trans(genls(tSumoCertificate,tSumoText),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':601570).
lisp_trans(documentation(tSumoCertificate,vEnglishLanguage,s("A","#$Text","that","confers","a","right","or","obligation","on","the","holder","of","the","#$Certificate",".","Note","that","the","right","or","obligation","need","not","be","a","legal","one",",","as","in","the","case","of","an","academic","diploma","that","grants","certain","privileges","in","the","professional","world",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':601598).
lisp_trans(=>(tSumoCertificate(DOC),exists([PROP,NORM],or(confersNorm(DOC,PROP,NORM),deprivesNorm(DOC,PROP,NORM)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':601881).
lisp_trans(genls(tSumoFinancialInstrument,tSumoCertificate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602036).
lisp_trans(documentation(tSumoFinancialInstrument,vEnglishLanguage,s("A","document","having","monetary","value","or","recording","a","monetary","transaction")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602079).
lisp_trans(genls(tObjectCurrency,tSumoFinancialInstrument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602203).
lisp_trans(documentation(tObjectCurrency,vEnglishLanguage,s("Any","element","of","the","official","currrency","of","some","#$Nation",".","This","covers","both","#$CurrencyBills","and","#$CurrencyCoins",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602243).
lisp_trans(=>(tObjectCurrency(CURRENCY),exists([MEASURE],monetaryValue(CURRENCY,MEASURE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602398).
lisp_trans(genls(cwPatent,tSumoCertificate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602501).
lisp_trans(documentation(cwPatent,vEnglishLanguage,s("A","#$Certificate","that","expresses","the","content","of","an","invention","that","has","been","accorded","legal","protection","by","a","governemental","entity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602531).
lisp_trans(genls(tMolecule,tSumoCompoundSubstance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602699).
lisp_trans(documentation(tMolecule,vEnglishLanguage,s("A","molecule","is","the","smallest","unit","of","matter","of","a","#$CompoundSubstance","that","retains","all","the","physical","and","chemical","properties","of","that","substance",",","e",".","g",".",",","Ne",",","H2",",","H2O",".","A","molecule","is","two","or","more","#$Atoms","linked","by","a","chemical","bond",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':602737).
lisp_trans(=>(tMolecule(MOLE),exists([ATOM1,ATOM2],and(tSumoAtomMolecule(ATOM1),tSumoAtomMolecule(ATOM2),part(ATOM1,MOLE),part(ATOM2,MOLE),not(equal(ATOM1,ATOM2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603002).
lisp_trans(genls(tObjectArtifact,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603248).
lisp_trans(documentation(tObjectArtifact,vEnglishLanguage,s("An","#$Object","that","is","the","product","of","a","#$Making",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603275).
lisp_trans(=>(tObjectArtifact(ARTIFACT),exists([MAKING],and(actMaking(MAKING),result(MAKING,ARTIFACT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603366).
lisp_trans(genls(tProduct,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603510).
lisp_trans(documentation(tProduct,vEnglishLanguage,s("An","#$Artifact","that","is","produced","by","#$Manufacture",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603538).
lisp_trans(=>(tProduct(PRODUCT),exists([MANUFACTURE],and(tSumoManufacture(MANUFACTURE),result(MANUFACTURE,PRODUCT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603630).
lisp_trans(rtBinaryPredicate(version),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603791).
lisp_trans(rtAsymmetricRelation(version),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603826).
lisp_trans(rtTransitiveRelation(version),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603864).
lisp_trans(argGenl(version,1,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603902).
lisp_trans(argGenl(version,2,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603938).
lisp_trans(documentation(version,vEnglishLanguage,s("Some","#$Artifacts","have","a","life","cycle","with","discrete","stages","or","versions",".","(","#$version","ARTIFACT1","ARTIFACT2",")","means","that","ARTIFACT1","is","a","version","of","ARTIFACT2",".","Note","that","this","#$Predicate","relates","subclasses","of","#$Artifact","and","not","instances",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':603974).
lisp_trans(=>(version(ARTIFACT1,ARTIFACT2),genls(ARTIFACT1,ARTIFACT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':604247).
lisp_trans(genls(tObjectStationaryArtifact,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':604598).
lisp_trans(documentation(tObjectStationaryArtifact,vEnglishLanguage,s("A","#$StationaryArtifact","is","an","#$Artifact","that","has","a","fixed","spatial","location",".","Most","instances","of","this","#$Class","are","architectural","works",",","e",".","g",".","the","Eiffel","Tower",",","the","Great","Pyramids",",","office","towers",",","single","-","family","houses",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':604637).
lisp_trans(=>(tObjectStationaryArtifact(ARTIFACT),exists([PLACE],and(holdsDuring(uWhenFn(ARTIFACT),located(ARTIFACT,PLACE)),not(exists([P2],and(holdsDuring(uWhenFn(ARTIFACT),located(ARTIFACT,P2)),not(equal(PLACE,P2)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':604908).
lisp_trans(genls(tPlaceLikeBuilding,tObjectStationaryArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605223).
lisp_trans(documentation(tPlaceLikeBuilding,vEnglishLanguage,s("The","Class","of","#$StationaryArtifacts","which","are","intended","to","house","#$Humans","and","their","activities",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605262).
lisp_trans(=>(tPlaceLikeBuilding(BUILDING),exists([HUMAN],and(tSumoHuman(HUMAN),or(inhabits(HUMAN,BUILDING),exists([ACT],and(agent(ACT,HUMAN),located(ACT,BUILDING))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605400).
lisp_trans(genls(tSumoRoom,tObjectStationaryArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605689).
lisp_trans(disjointWith(tSumoRoom,tPlaceLikeBuilding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605724).
lisp_trans(documentation(tSumoRoom,vEnglishLanguage,s("A","#$properPart","of","a","#$Building","which","is","separated","from","the","exterior","of","the","#$Building","and","/","or","other","#$Rooms","of","the","#$Building","by","walls",".","Some","#$Rooms","may","have","a","specific","purpose",",","e",".","g",".","sleeping",",","bathing",",","cooking",",","entertainment",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':605749).
lisp_trans(=>(tSumoRoom(ROOM),exists([BUILD],and(tPlaceLikeBuilding(BUILD),properPart(ROOM,BUILD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606019).
lisp_trans(genls(tSumoHouse,tPlaceLikeResidentialBuilding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606154).
lisp_trans(genls(tSumoHouse,tSumoSingleFamilyResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606191).
lisp_trans(documentation(tSumoHouse,vEnglishLanguage,s("A","#$ResidentialBuilding","which","is","intended","to","be","inhabited","by","members","of","the","same","#$SocialUnit",".","#$Houses","are","distinguished","from","temporary","housing","like","hotels","and","multi","-","family","dwellings","like","condominium","and","apartment","buildings",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606230).
lisp_trans(genls(tSumoResidence,tObjectStationaryArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606498).
lisp_trans(disjointDecomposition(tSumoResidence,tSumoPermanentResidence,tSumoTemporaryResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606538).
lisp_trans(documentation(tSumoResidence,vEnglishLanguage,s("A","#$Building","or","part","of","a","#$Building","which","provides","some","accomodation","for","sleeping",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606610).
lisp_trans(=>(tSumoResidence(RESIDENCE),or(tSumoHouse(RESIDENCE),exists([BUILDING],and(tPlaceLikeResidentialBuilding(BUILDING),part(RESIDENCE,BUILDING))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606739).
lisp_trans(genls(tSumoPermanentResidence,tSumoResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606957).
lisp_trans(documentation(tSumoPermanentResidence,vEnglishLanguage,s("A","#$Residence","where","people","live",",","i",".","e",".","where","people","have","a","#$home",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':606997).
lisp_trans(=>(tSumoPermanentResidence(RESIDENCE),exists([PERSON],home(PERSON,RESIDENCE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607117).
lisp_trans(genls(tSumoTemporaryResidence,tSumoResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607221).
lisp_trans(documentation(tSumoTemporaryResidence,vEnglishLanguage,s("A","#$Residence","which","is","strictly","temporary",",","i",".","e",".","where","no","one","makes","his","/","her","#$home",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607261).
lisp_trans(=>(tSumoTemporaryResidence(RESIDENCE),not(exists([PERSON],home(PERSON,RESIDENCE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607398).
lisp_trans(genls(tPlaceLikeResidentialBuilding,tPlaceLikeBuilding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607510).
lisp_trans(genls(tPlaceLikeResidentialBuilding,tSumoResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607550).
lisp_trans(documentation(tPlaceLikeResidentialBuilding,vEnglishLanguage,s("A","#$Building","which","provides","some","accomodation","for","sleeping",".","Note","that","this","class","does","not","cover","just","permanent","residences",",","e",".","g",".","#$Houses","and","condominium","and","apartment","buildings",",","but","also","temporary","residences",",","e",".","g",".","hotels","and","dormitories",".","#$ResidentialBuildings","are","also","distinguished","from","#$CommercialBuildings",",","which","are","intended","to","serve","an","organizational","rather","than","a","residential","function",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':607591).
lisp_trans(genls(tSumoSingleFamilyResidence,tSumoPermanentResidence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':608335).
lisp_trans(documentation(tSumoSingleFamilyResidence,vEnglishLanguage,s("A","#$PermanentResidence","which","is","intended","to","be","the","#$home","of","a","single","#$SocialUnit",".","This","class","covers","#$Houses",",","#$ApartmentUnits",",","and","#$CondominiumUnits",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':608387).
lisp_trans(=>(tSumoSingleFamilyResidence(RESIDENCE),hasPurpose(RESIDENCE,all([AGENT1,AGENT2],=>(and(home(AGENT1,RESIDENCE),home(AGENT2,RESIDENCE)),exists([UNIT],and(tSumoSocialUnit(UNIT),member(AGENT1,UNIT),member(AGENT2,UNIT))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':608599).
lisp_trans(genls(tSumoArtWork,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':608936).
lisp_trans(documentation(tSumoArtWork,vEnglishLanguage,'Artifacts that are created primarily for aesthetic appreciation.  Note that this #$Class does not include most examples of architecture, which belong under #$StationaryArtifact.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':608964).
lisp_trans(=>(tSumoArtWork(AW),hasPurpose(AW,exists([H,P],and(tSumoHuman(H),actPerception(P),experiencer(P,H),patient(P,AW))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609187).
lisp_trans(=>(tSumoArtWork(AW),hasPurpose(AW,exists([P],and(tSumoHuman(H),desires(H,exists([P],and(actPerception(P),experiencer(P,H),patient(P,AW)))))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609384).
lisp_trans(genls(tSumoRepresentationalArtWork,tSumoArtWork),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609659).
lisp_trans(genls(tSumoRepresentationalArtWork,tSumoIcon),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609702).
lisp_trans(documentation(tSumoRepresentationalArtWork,vEnglishLanguage,s("Any","#$ArtWork","that","#$represents","something","#$Physical",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609742).
lisp_trans(=>(tSumoRepresentationalArtWork(RA),exists([P],and(tSumoPhysical(P),represents(RA,P)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609855).
lisp_trans(genls(tSumoFabric,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':609983).
lisp_trans(disjointWith(tSumoFabric,tObjectStationaryArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610010).
lisp_trans(documentation(tSumoFabric,vEnglishLanguage,'Artifacts that are created by weaving together natural or synthetic fibers or by treating the skins of certain sorts of #$Animals.  Note that this #$Class includes articles that are created by stitching together various types of fabrics, e.g. bedspreads.  On the other hand, #$Clothing is not a #$subclass of #$Fabric, because many clothing items contain elements that are not fabrics.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610047).
lisp_trans(genls(tSumoWearableItem,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610477).
lisp_trans(documentation(tSumoWearableItem,vEnglishLanguage,'WearableItem is the subclass of #$Artifacts that are made to be worn on the body.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610510).
lisp_trans(=>(tSumoWearableItem(WI),hasPurpose(WI,exists([H],and(tSumoHuman(H),wears(H,WI))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610642).
lisp_trans(genls(actClothing,tSumoWearableItem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610778).
lisp_trans(disjointWith(actClothing,tObjectStationaryArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610811).
lisp_trans(documentation(actClothing,vEnglishLanguage,'Artifact made out of fabrics and possibly other materials that are used to cover the bodies of #$Humans.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':610850).
lisp_trans(=>(actClothing(CLOTHING),exists([FABRIC],and(tSumoFabric(FABRIC),part(FABRIC,CLOTHING)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611001).
lisp_trans(rtBinaryPredicate(wears),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611143).
lisp_trans(argIsa(wears,1,tClazzAnimal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611176).
lisp_trans(argIsa(wears,2,tSumoWearableItem),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611200).
lisp_trans(documentation(wears,vEnglishLanguage,s("(","#$wears","?","AGENT","?","WI",")","means","that","?","AGENT","is","wearing","the","#$WearableItem","item","?","WI",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611230).
lisp_trans(=>(wears(AGENT,WI),located(WI,AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611350).
lisp_trans(=>(and(wears(A,C),part(P,C)),wears(A,P)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611402).
lisp_trans(genls(tSumoDevice,tObjectArtifact),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611467).
lisp_trans(documentation(tSumoDevice,vEnglishLanguage,s("A","#$Device","is","an","#$Artifact","whose","purpose","is","to","serve","as","an","#$instrument","in","a","specific","subclass","of","#$Process",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611494).
lisp_trans(=>(tSumoDevice(DEVICE),exists([PROC],capability(PROC,instrument,DEVICE))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611646).
lisp_trans(=>(tSumoDevice(DEVICE),exists([PROC],hasPurpose(DEVICE,exists([INST],and(isa(INST,PROC),instrument(INST,DEVICE)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611745).
lisp_trans(genls(tObjectMusicalInstrument,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611930).
lisp_trans(documentation(tObjectMusicalInstrument,vEnglishLanguage,s("A","#$Device","which","is","manipulated","by","a","#$Human","and","whose","purpose","is","#$MakingMusic",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':611966).
lisp_trans(=>(tObjectMusicalInstrument(INSTRUMENT),capability(tSumoMakingMusic,instrument,INSTRUMENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612100).
lisp_trans(genls(tObjectTransportationDevice,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612201).
lisp_trans(documentation(tObjectTransportationDevice,vEnglishLanguage,s("A","#$TransportationDevice","is","a","#$Device","which","serves","as","the","#$instrument","in","a","#$Transportation","#$Process","which","carries","the","#$patient","of","the","#$Process","from","one","point","to","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612240).
lisp_trans(=>(tObjectTransportationDevice(DEVICE),capability(actTransportation,instrument,DEVICE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612472).
lisp_trans(genls(tSumoVehicle,tObjectTransportationDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612571).
lisp_trans(documentation(tSumoVehicle,vEnglishLanguage,'Vehicle is the subclass of #$TransportationDevices that transport passengers or goods from one place to another by moving from one place to the other with them, e.g., cars, trucks, ferries, and airplanes.  Contrast with devices such as pipelines, escalators, or supermarket checkout belts, which carry items from one place to another by means of a moving part, without the device removing from the origin to the destination.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':612611).
lisp_trans(=>(and(tSumoVehicle(TRANSPORT),eventTranslocation(MOVE),instrument(MOVE,TRANSPORT),origin(MOVE,FROM)),holdsDuring(uBeginFn(uWhenFn(MOVE)),located(TRANSPORT,FROM))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613081).
lisp_trans(=>(and(tSumoVehicle(TRANSPORT),eventTranslocation(MOVE),instrument(MOVE,TRANSPORT),destination(MOVE,TO)),holdsDuring(uBeginFn(uWhenFn(MOVE)),located(TRANSPORT,TO))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613291).
lisp_trans(genls(tObjectMeasuringDevice,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613502).
lisp_trans(documentation(tObjectMeasuringDevice,vEnglishLanguage,s("Any","#$Device","whose","purpose","is","to","measure","a","#$PhysicalQuantity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613536).
lisp_trans(=>(tObjectMeasuringDevice(DEVICE),hasPurpose(DEVICE,exists([MEASURE],and(actMeasuring(MEASURE),instrument(MEASURE,DEVICE))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613650).
lisp_trans(genls(tSumoAttachingDevice,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613828).
lisp_trans(documentation(tSumoAttachingDevice,vEnglishLanguage,s("A","#$Device","whose","purpose","is","to","attach","one","thing","to","something","else",",","e",".","g",".","nails",",","screws",",","buttons",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':613862).
lisp_trans(=>(tSumoAttachingDevice(DEVICE),exists([ATTACH],and(actAttaching(ATTACH),instrument(ATTACH,DEVICE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614014).
lisp_trans(genls(tObjectWeapon,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614168).
lisp_trans(documentation(tObjectWeapon,vEnglishLanguage,s("The","#$Class","of","#$Devices","that","are","designed","primarily","to","damage","or","destroy","#$Humans","/","#$Animals",",","#$StationaryArtifacts","or","the","places","inhabited","by","#$Humans","/","#$Animals",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614193).
lisp_trans(=>(tObjectWeapon(WEAPON),capability(actDamaging,instrument,WEAPON)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614398).
lisp_trans(=>(tObjectWeapon(WEAPON),hasPurpose(WEAPON,exists([D,PATIENT],and(actDamaging(D),instrument(D,WEAPON),patient(D,PATIENT))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614477).
lisp_trans(genls(tSumoMachine,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614659).
lisp_trans(documentation(tSumoMachine,vEnglishLanguage,'Machines are #$Devices that that have a well-defined #$resource and #$result and that automatically convert the #$resource into the #$result.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614685).
lisp_trans(=>(tSumoMachine(MACHINE),all([PROC],=>(instrument(PROC,MACHINE),exists([RESOURCE,RESULT],and(resource(PROC,RESOURCE),result(PROC,RESULT)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':614872).
lisp_trans(genls(tSumoEngineeringComponent,tSumoDevice),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':615113).
lisp_trans(documentation(tSumoEngineeringComponent,vEnglishLanguage,s("A","fundamental","concept","that","applies","in","many","engineering","domains",".","An","#$EngineeringComponent","is","an","element","of","a","#$Device","that","is","a","physically","whole","object",",","such","as","one","might","see","listed","as","standard","parts","in","a","catalog",".","The","main","difference","betweeen","#$EngineeringComponents","and","arbitrary","globs","of","matter","is","that","#$EngineeringComponents","are","object","-","like","in","a","modeling","sense",".","Thus",",","an","#$EngineeringComponent","is","not","an","arbtrary","subregion",",","but","a","part","of","a","system","with","a","stable","identity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':615152).
lisp_trans(=>(tSumoEngineeringComponent(COMP),exists([DEVICE],and(tSumoDevice(DEVICE),component(COMP,DEVICE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':615686).
lisp_trans(=>(tSumoMachine(MACHINE),exists([COMP1,COMP2],and(tSumoEngineeringComponent(COMP1),tSumoEngineeringComponent(COMP2),not(equal(COMP1,COMP2)),part(COMP1,MACHINE),part(COMP2,MACHINE)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':615837).
lisp_trans(genlPreds(engineeringSubcomponent,properPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616111).
lisp_trans(argIsa(engineeringSubcomponent,1,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616160).
lisp_trans(argIsa(engineeringSubcomponent,2,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616216).
lisp_trans(documentation(engineeringSubcomponent,vEnglishLanguage,s("(","#$engineeringSubcomponent","?","SUB","?","SUPER",")","means","that","the","#$EngineeringComponent","?","SUB","is","structurally","a","#$properPart","of","?","SUPER",".","This","relation","is","an","#$AsymmetricRelation",",","since","two","#$EngineeringComponents","cannot","be","subcomponents","of","each","other",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616272).
lisp_trans(rtSymmetricRelation(connectedEngineeringComponents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616572).
lisp_trans(rtIrreflexiveRelation(connectedEngineeringComponents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616632).
lisp_trans(rtPartialValuedRelation(connectedEngineeringComponents),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616694).
lisp_trans(genlPreds(connectedEngineeringComponents,connected),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616758).
lisp_trans(argIsa(connectedEngineeringComponents,1,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616813).
lisp_trans(argIsa(connectedEngineeringComponents,2,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616876).
lisp_trans(documentation(connectedEngineeringComponents,vEnglishLanguage,s("This","is","the","most","general","connection","relation","between","#$EngineeringComponents",".","If","(","#$connectedEngineeringComponents","?","COMP1","?","COMP2",")",",","then","neither","?","COMP1","nor","?","COMP2","can","be","an","#$engineeringSubcomponent","of","the","other",".","The","relation","#$connectedEngineeringComponents","is","a","#$SymmetricRelation",",","there","is","no","information","in","the","direction","of","connection","between","two","components",".","It","is","also","an","#$IrreflexiveRelation",",","no","#$EngineeringComponent","bears","this","relation","to","itself",".","Note","that","this","relation","does","not","associate","a","name","or","type","with","the","connection",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':616939).
lisp_trans(=>(connectedEngineeringComponents(COMP1,COMP2),and(not(engineeringSubcomponent(COMP1,COMP2)),not(engineeringSubcomponent(COMP2,COMP1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':617545).
lisp_trans(genls(actEngineeringConnection,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':617732).
lisp_trans(documentation(actEngineeringConnection,vEnglishLanguage,s("An","#$EngineeringConnection","is","an","#$EngineeringComponent","that","represents","a","connection","relationship","between","two","other","#$EngineeringComponents",".","It","is","a","reification","of","the","#$Predicate","#$connectedEngineeringComponents",".","That","means","that","whenever","this","#$Predicate","holds","between","two","#$EngineeringComponents",",","there","exists","an","#$EngineeringConnection",".","The","practical","reason","for","reifying","a","relationship","is","to","be","able","to","attach","other","information","about","it",".","For","example",",","one","might","want","to","say","that","a","particular","connection","is","associated","with","some","shared","parameters",",","or","that","it","is","of","a","particular","type",".","#$EngineeringConnections","are","#$EngineeringComponents","and","can","therefore","be","an","#$engineeringSubcomponent","of","other","#$EngineeringComponents",".","However",",","to","provide","for","modular","regularity","in","component","systems",",","#$EngineeringConnections","cannot","be","connected",".","For","each","pair","of","#$EngineeringComponents","related","by","#$connectedEngineeringComponents",",","there","exists","at","least","one","#$EngineeringConnection",".","However",",","that","object","may","not","be","unique",",","and","the","same","#$EngineeringConnection","may","be","associated","with","several","pairs","of","#$EngineeringComponents",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':617786).
lisp_trans(=>(actEngineeringConnection(CONNECTION),exists([COMP1,COMP2],connectsEngineeringComponents(CONNECTION,COMP1,COMP2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':618960).
lisp_trans(=>(connectedEngineeringComponents(COMP1,COMP2),not(or(actEngineeringConnection(COMP1),actEngineeringConnection(COMP2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619106).
lisp_trans(<=>(connectedEngineeringComponents(COMP1,COMP2),exists([CONNECTION],connectsEngineeringComponents(CONNECTION,COMP1,COMP2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619280).
lisp_trans(genlPreds(connectsEngineeringComponents,connects),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619427).
lisp_trans(argIsa(connectsEngineeringComponents,1,actEngineeringConnection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619480).
lisp_trans(argIsa(connectsEngineeringComponents,2,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619543).
lisp_trans(argIsa(connectsEngineeringComponents,3,tSumoEngineeringComponent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619605).
lisp_trans(documentation(connectsEngineeringComponents,vEnglishLanguage,'connectsEngineeringComponents is a #$TernaryPredicate that maps from an #$EngineeringConnection to the #$EngineeringComponents it connects.  Since #$EngineeringComponents cannot be connected to themselves and there cannot be an #$EngineeringConnection without a #$connectedEngineeringComponents #$Predicate, the second and third arguments of any #$connectsEngineeringComponents relationship will always be distinct for any given first argument.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':619667).
lisp_trans(genls(mobCommercialAgent,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620296).
lisp_trans(documentation(mobCommercialAgent,vEnglishLanguage,s("An","#$Agent","that","provides","products","and","/","or","services","for","a","fee","with","the","aim","of","making","a","profit",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620329).
lisp_trans(genls(tGroupedBusiness,mobCommercialAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620502).
lisp_trans(genls(tGroupedBusiness,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620538).
lisp_trans(documentation(tGroupedBusiness,vEnglishLanguage,s("An","#$instance","of","#$Business","is","an","#$Organization","that","is","a","#$CommercialAgent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620571).
lisp_trans(genls(actCorporation,tGroupedBusiness),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620869).
lisp_trans(genls(actCorporation,mobLegalAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620913).
lisp_trans(documentation(actCorporation,vEnglishLanguage,s("An","#$Organization","that","has","a","special","legal","status","that","allows","a","group","of","persons","to","act","as","a","#$CommercialAgent","and","that","insulates","the","owners","(","shareholders",")","from","many","liabilities","that","might","result","from","the","corporation","'s","operation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':620948).
lisp_trans(genls(tSumoManufacturer,actCorporation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621225).
lisp_trans(documentation(tSumoManufacturer,vEnglishLanguage,s("Any","#$Corporation","which","manufactures","#$Products",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621261).
lisp_trans(=>(tSumoManufacturer(ORG),hasPurpose(ORG,exists([MANUFACTURE],and(tSumoManufacture(MANUFACTURE),tSumoCommercialService(MANUFACTURE),agent(MANUFACTURE,ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621358).
lisp_trans(genls(actMercantileOrganization,actCorporation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621583).
lisp_trans(documentation(actMercantileOrganization,vEnglishLanguage,s("Any","#$Corporation","which","sells","goods","or","services","to","customers","for","a","profit",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621629).
lisp_trans(=>(actMercantileOrganization(ORG),hasPurpose(ORG,exists([SELL],and(actSelling(SELL),tSumoCommercialService(SELL),agent(SELL,ORG))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621762).
lisp_trans(genls(tGroupedGroup,ttSumoCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621965).
lisp_trans(genls(tGroupedGroup,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':621993).
lisp_trans(documentation(tGroupedGroup,vEnglishLanguage,s("A","#$Collection","of","#$Agents",",","e",".","g",".","a","flock","of","sheep",",","a","herd","of","goats",",","or","the","local","Boy","Scout","troop",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622016).
lisp_trans(=>(and(tGroupedGroup(GROUP),member(MEMB,GROUP)),tAgent(MEMB)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622155).
lisp_trans(genls(tSumoGroupOfPeople,tGroupedGroup),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622248).
lisp_trans(documentation(tSumoGroupOfPeople,vEnglishLanguage,s("Any","#$Group","whose","#$members","are","exclusively","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622279).
lisp_trans(=>(and(tSumoGroupOfPeople(GROUP),member(MEMBER,GROUP)),tSumoHuman(MEMBER)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622382).
lisp_trans(genls(tSumoAgeGroup,tSumoGroupOfPeople),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622487).
lisp_trans(documentation(tSumoAgeGroup,vEnglishLanguage,s("A","#$GroupOfPeople","whose","#$members","all","have","the","same","#$age",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622521).
lisp_trans(=>(tSumoAgeGroup(GROUP),all([MEMB1,MEMB2,AGE1,AGE2],=>(and(member(MEMB1,GROUP),member(MEMB2,GROUP),age(MEMB1,AGE1),age(MEMB2,AGE2)),equal(AGE1,AGE2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622624).
lisp_trans(genls(tSumoFamilyGroup,tSumoGroupOfPeople),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622861).
lisp_trans(documentation(tSumoFamilyGroup,vEnglishLanguage,s("A","#$GroupOfPeople","whose","#$members","bear","#$familyRelations","to","one","another",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':622898).
lisp_trans(=>(tSumoFamilyGroup(GROUP),all([MEMB1,MEMB2],=>(and(member(MEMB1,GROUP),member(MEMB2,GROUP)),familyRelation(MEMB1,MEMB2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623018).
lisp_trans(genls(tSumoSocialUnit,tSumoGroupOfPeople),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623221).
lisp_trans(documentation(tSumoSocialUnit,vEnglishLanguage,s("A","#$GroupOfPeople","who","all","have","the","same","#$home",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623257).
lisp_trans(=>(tSumoSocialUnit(UNIT),exists([HOME],=>(member(MEMBER,UNIT),home(MEMBER,HOME)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623351).
lisp_trans(rtUnaryFunction(uImmediateFamilyFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623481).
lisp_trans(rtTotalValuedRelation(uImmediateFamilyFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623524).
lisp_trans(argIsa(uImmediateFamilyFn,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623573).
lisp_trans(resultIsa(uImmediateFamilyFn,tSumoFamilyGroup),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623608).
lisp_trans(documentation(uImmediateFamilyFn,vEnglishLanguage,s("(","#$ImmediateFamilyFn","?","PERSON",")","denotes","the","immediate","family","of","?","PERSON",",","i",".","e",".","the","#$Group","consisting","of","the","#$parents","of","?","PERSON","and","anyone","of","whom","?","PERSON","is","a","#$parent",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623646).
lisp_trans(=>(equal(uImmediateFamilyFn(P),FAMILY),all([MEMBER],=>(member(MEMBER,FAMILY),exists([OTHER],or(parent(MEMBER,OTHER),parent(OTHER,MEMBER)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':623868).
lisp_trans(=>(equal(uImmediateFamilyFn(PERSON),FAMILY),exists([MEMBER],and(member(MEMBER,FAMILY),or(parent(MEMBER,PERSON),parent(PERSON,MEMBER))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624081).
lisp_trans(rtBinaryPredicate(relative),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624272).
lisp_trans(rtSymmetricRelation(relative),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624308).
lisp_trans(argIsa(relative,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624346).
lisp_trans(argIsa(relative,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624375).
lisp_trans(documentation(relative,vEnglishLanguage,s("(","#$relative","?","O1","?","O2",")","means","that","?","O1","and","?","O2","are","relatives",",","whether","through","common","ancestry","(","consanguinity",")",",","someone","'s","marriage","(","affinity",")",",","or","someone","'s","adoption",".","This","definition","is","intentionally","broad",",","so","as","to","capture","a","wide","array","of","`","familial","'","relations",".","The","notion","of","who","counts","as","`","family","'","also","varies","between","cultures",",","but","that","aspect","of","meaning","is","not","addressed","here",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624405).
lisp_trans(genlPreds(familyRelation,relative),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624825).
lisp_trans(genlPreds(spouse,relative),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624863).
lisp_trans(=>(and(holdsDuring(T1,legalRelation(A1,A2)),tSumoOrganism(A1),tSumoOrganism(A2)),holdsDuring(T1,relative(A1,A2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':624894).
lisp_trans(rtBinaryPredicate(familyRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625046).
lisp_trans(argIsa(familyRelation,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625088).
lisp_trans(argIsa(familyRelation,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625123).
lisp_trans(documentation(familyRelation,vEnglishLanguage,s("A","very","general","#$Predicate","for","biological","relationships",".","(","#$familyRelation","?","ORGANISM1","?","ORGANISM2",")","means","that","?","ORGANISM1","and","?","ORGANISM2","are","biologically","derived","from","a","common","ancestor",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625158).
lisp_trans(=>(familyRelation(ORGANISM1,ORGANISM2),exists([ORGANISM3],and(ancestor(ORGANISM3,ORGANISM1),ancestor(ORGANISM3,ORGANISM2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625392).
lisp_trans(genlPreds(ancestor,familyRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625561).
lisp_trans(rtTransitiveRelation(ancestor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625599).
lisp_trans(rtIrreflexiveRelation(ancestor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625638).
lisp_trans(rtTotalValuedRelation(ancestor),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625678).
lisp_trans(argIsa(ancestor,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625718).
lisp_trans(argIsa(ancestor,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625747).
lisp_trans(documentation(ancestor,vEnglishLanguage,s("The","transitive","closure","of","the","#$parent","predicate",".","(","#$ancestor","?","DESCENDANT","?","ANCESTOR",")","means","that","?","ANCESTOR","is","either","the","#$parent","of","?","DESCENDANT","or","the","#$parent","of","the","#$parent","of","#$DESCENDANT","or","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':625776).
lisp_trans(rtBinaryPredicate(parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626174).
lisp_trans(genlPreds(parent,familyRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626208).
lisp_trans(rtAsymmetricRelation(parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626244).
lisp_trans(rtIntransitiveRelation(parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626281).
lisp_trans(rtTotalValuedRelation(parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626320).
lisp_trans(argIsa(parent,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626358).
lisp_trans(argIsa(parent,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626385).
lisp_trans(documentation(parent,vEnglishLanguage,s("The","general","relationship","of","parenthood",".","(","#$parent","?","CHILD","?","PARENT",")","means","that","?","PARENT","is","a","biological","parent","of","?","CHILD",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626412).
lisp_trans(=>(parent(CHILD,PARENT),ancestor(CHILD,PARENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626573).
lisp_trans(=>(parent(CHILD,PARENT),before(uBeginFn(uWhenFn(PARENT)),uBeginFn(uWhenFn(CHILD)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626633).
lisp_trans(=>(and(parent(CHILD,PARENT),genls(CLASS,tSumoOrganism),isa(PARENT,CLASS)),isa(CHILD,CLASS)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626731).
lisp_trans(=>(and(parent(CHILD,PARENT),actSexualReproduction(REP),agent(REP,PARENT),result(REP,CHILD)),or(mother(CHILD,PARENT),father(CHILD,PARENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':626869).
lisp_trans(=>(tSumoOrganism(ORGANISM),exists([PARENT],parent(ORGANISM,PARENT))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627063).
lisp_trans(rtSingleValuedRelation(mother),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627157).
lisp_trans(rtPartialValuedRelation(mother),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627196).
lisp_trans(genlPreds(mother,parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627236).
lisp_trans(argIsa(mother,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627264).
lisp_trans(argIsa(mother,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627291).
lisp_trans(documentation(mother,vEnglishLanguage,s("The","general","relationship","of","motherhood",".","(","#$mother","?","CHILD","?","MOTHER",")","means","that","?","MOTHER","is","the","biological","mother","of","?","CHILD",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627318).
lisp_trans(=>(mother(CHILD,MOTHER),sumoAttribute(MOTHER,tFemale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627481).
lisp_trans(rtSingleValuedRelation(father),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627544).
lisp_trans(rtPartialValuedRelation(father),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627583).
lisp_trans(genlPreds(father,parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627623).
lisp_trans(argIsa(father,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627651).
lisp_trans(argIsa(father,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627678).
lisp_trans(documentation(father,vEnglishLanguage,s("The","general","relationship","of","fatherhood",".","(","#$father","?","CHILD","?","FATHER",")","means","that","?","FATHER","is","the","biological","father","of","?","CHILD",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627705).
lisp_trans(=>(father(CHILD,FATHER),sumoAttribute(FATHER,tMale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627868).
lisp_trans(genlPreds(daughter,parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627929).
lisp_trans(argIsa(daughter,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627959).
lisp_trans(argIsa(daughter,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':627988).
lisp_trans(documentation(daughter,vEnglishLanguage,s("The","general","relationship","of","daughterhood",".","(","#$daughter","?","CHILD","?","PARENT",")","means","that","?","CHILD","is","the","biological","daughter","of","?","PARENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628017).
lisp_trans(=>(daughter(CHILD,PARENT),sumoAttribute(CHILD,tFemale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628188).
lisp_trans(genlPreds(son,parent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628252).
lisp_trans(argIsa(son,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628277).
lisp_trans(argIsa(son,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628301).
lisp_trans(documentation(son,vEnglishLanguage,s("The","general","relationship","of","being","a","son",".","(","#$son","?","CHILD","?","PARENT",")","means","that","?","CHILD","is","the","biological","son","of","?","PARENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628325).
lisp_trans(=>(son(CHILD,PARENT),sumoAttribute(CHILD,tMale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628480).
lisp_trans(rtBinaryPredicate(sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628537).
lisp_trans(rtPartialValuedRelation(sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628572).
lisp_trans(genlPreds(sibling,familyRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628613).
lisp_trans(rtSymmetricRelation(sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628650).
lisp_trans(rtIrreflexiveRelation(sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628687).
lisp_trans(argIsa(sibling,1,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628726).
lisp_trans(argIsa(sibling,2,tSumoOrganism),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628754).
lisp_trans(documentation(sibling,vEnglishLanguage,s("The","relationship","between","two","#$Organisms","that","have","the","same","#$mother","and","#$father",".","Note","that","this","relationship","does","not","hold","between","half","-","brothers",",","half","-","sisters",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628782).
lisp_trans(=>(and(parent(ORGANISM1,PARENT1),parent(ORGANISM2,PARENT1),parent(ORGANISM1,PARENT2),parent(ORGANISM2,PARENT2),not(equal(ORGANISM1,ORGANISM2)),not(equal(PARENT1,PARENT2))),sibling(ORGANISM1,ORGANISM2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':628993).
lisp_trans(=>(and(sibling(ORG1,ORG2),parent(ORG1,PARENT)),parent(ORG2,PARENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629249).
lisp_trans(=>(and(parent(CHILD,PARENT),sumoAttribute(PARENT,tMale)),father(CHILD,PARENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629341).
lisp_trans(=>(and(parent(CHILD,PARENT),sumoAttribute(PARENT,tFemale)),mother(CHILD,PARENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629438).
lisp_trans(genlPreds(brother,sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629537).
lisp_trans(rtIrreflexiveRelation(brother),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629567).
lisp_trans(rtTransitiveRelation(brother),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629606).
lisp_trans(rtPartialValuedRelation(brother),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629644).
lisp_trans(argIsa(brother,1,tSumoMan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629685).
lisp_trans(argIsa(brother,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629708).
lisp_trans(documentation(brother,vEnglishLanguage,s("The","general","relationship","of","being","a","brother",".","(","#$brother","?","MAN","?","PERSON",")","means","that","?","MAN","is","the","brother","of","?","PERSON",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629733).
lisp_trans(genlPreds(sister,sibling),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629889).
lisp_trans(rtIrreflexiveRelation(sister),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629918).
lisp_trans(rtTransitiveRelation(sister),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629956).
lisp_trans(rtPartialValuedRelation(sister),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':629993).
lisp_trans(argIsa(sister,1,tSumoWoman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630033).
lisp_trans(argIsa(sister,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630057).
lisp_trans(documentation(sister,vEnglishLanguage,s("The","general","relationship","of","being","a","sister",".","(","#$sister","?","WOMAN","?","PERSON",")","means","that","?","WOMAN","is","the","sister","of","?","PERSON",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630081).
lisp_trans(rtBinaryPredicate(legalRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630237).
lisp_trans(rtSymmetricRelation(legalRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630278).
lisp_trans(argIsa(legalRelation,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630321).
lisp_trans(argIsa(legalRelation,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630352).
lisp_trans(documentation(legalRelation,vEnglishLanguage,s("(","#$legalRelation","?","AGENT1","?","AGENT2",")","means","that","?","AGENT1","and","?","AGENT2","are","relatives","by","virtue","of","a","legal","relationship",".","Some","examples","include","marriage",",","adoption",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630383).
lisp_trans(=>(legalRelation(AGENT1,AGENT2),exists([DECLARE,OBLIGATION],and(actDeclaring(DECLARE),confersObligation(OBLIGATION,DECLARE,AGENT1),confersObligation(OBLIGATION,DECLARE,AGENT2)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630593).
lisp_trans(rtBinaryPredicate(acquaintance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630836).
lisp_trans(documentation(acquaintance,vEnglishLanguage,s("(","#$acquaintance","?","H1","?","H2",")","means","that","?","H1","has","met","and","knows","something","about","?","H2",",","such","as","?","H2","'s","name","and","appearance",".","Statements","made","with","this","predicate","should","be","temporally","specified","with","#$holdsDuring",".","Note","that","#$acquaintance","is","not","symmetric",".","For","the","symmetric","version",",","see","#$mutualAcquaintance",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':630877).
lisp_trans(argIsa(acquaintance,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631224).
lisp_trans(argIsa(acquaintance,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631254).
lisp_trans(rtBinaryPredicate(mutualAcquaintance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631285).
lisp_trans(rtSymmetricRelation(mutualAcquaintance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631331).
lisp_trans(documentation(mutualAcquaintance,vEnglishLanguage,s("(","#$mutualAcquaintance","?","H1","?","H2",")","means","that","?","H1","and","?","H2","have","met","each","other","and","know","something","about","each","other",",","such","as","name","and","appearance",".","Statements","made","with","this","predicate","should","be","temporally","specified","with","#$holdsDuring",".","See","also","the","weaker",",","non","-","symmetric","version","of","this","predicate",",","#$acquaintance",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631380).
lisp_trans(argIsa(mutualAcquaintance,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631741).
lisp_trans(argIsa(mutualAcquaintance,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631777).
lisp_trans(genlPreds(mutualAcquaintance,acquaintance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631813).
lisp_trans(genlPreds(spouse,mutualAcquaintance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631859).
lisp_trans(genlPreds(spouse,legalRelation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631900).
lisp_trans(rtIrreflexiveRelation(spouse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631935).
lisp_trans(rtSymmetricRelation(spouse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':631973).
lisp_trans(rtPartialValuedRelation(spouse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632009).
lisp_trans(argIsa(spouse,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632049).
lisp_trans(argIsa(spouse,2,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632073).
lisp_trans(documentation(spouse,vEnglishLanguage,s("The","relationship","of","marriage","between","two","#$Humans",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632097).
lisp_trans(genlPreds(husband,spouse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632190).
lisp_trans(rtAsymmetricRelation(husband),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632219).
lisp_trans(rtIrreflexiveRelation(husband),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632257).
lisp_trans(rtPartialValuedRelation(husband),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632296).
lisp_trans(argIsa(husband,1,tSumoMan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632337).
lisp_trans(argIsa(husband,2,tSumoWoman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632360).
lisp_trans(genlInverse(husband,wife),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632385).
lisp_trans(documentation(husband,vEnglishLanguage,s("(","#$husband","?","MAN","?","WOMAN",")","means","that","?","MAN","is","the","husband","of","?","WOMAN",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632408).
lisp_trans(genlPreds(wife,spouse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632517).
lisp_trans(rtAsymmetricRelation(wife),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632543).
lisp_trans(rtIrreflexiveRelation(wife),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632578).
lisp_trans(argIsa(wife,1,tSumoWoman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632614).
lisp_trans(argIsa(wife,2,tSumoMan),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632636).
lisp_trans(documentation(wife,vEnglishLanguage,s("(","#$wife","?","WOMAN","?","MAN",")","means","that","?","WOMAN","is","the","wife","of","?","MAN",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632656).
lisp_trans(genls(tSumoEthnicGroup,tSumoGroupOfPeople),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632756).
lisp_trans(documentation(tSumoEthnicGroup,vEnglishLanguage,s("A","#$GroupOfPeople","whose","#$members","originate","from","the","same","#$GeographicArea","or","share","the","same","#$Language","and","/","or","cultural","practices",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632793).
lisp_trans(genls(tSumoBeliefGroup,tSumoGroupOfPeople),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':632971).
lisp_trans(documentation(tSumoBeliefGroup,vEnglishLanguage,s("A","#$GroupOfPeople","whose","#$members","share","a","belief","or","set","of","beliefs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':633008).
lisp_trans(=>(tSumoBeliefGroup(GROUP),exists([BELIEF],all([MEMB],=>(member(MEMB,GROUP),believes(MEMB,BELIEF))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':633123).
lisp_trans(genls(tGroupedOrganization,tGroupedGroup),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':633292).
lisp_trans(genls(tGroupedOrganization,tAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':633393).
lisp_trans(documentation(tGroupedOrganization,vEnglishLanguage,s("An","#$Organization","is","a","corporate","or","similar","institution",".","The","#$members","of","an","#$Organization","typically","have","a","common","purpose","or","function",".","Note","that","this","class","also","covers","divisions",",","departments",",","etc",".","of","organizations",".","For","example",",","both","the","Shell","Corporation","and","the","accounting","department","at","Shell","would","both","be","instances","of","#$Organization",".","Note","too","that","the","existence","of","an","#$Organization","is","dependent","on","the","existence","of","at","least","one","#$member","(","since","#$Organization","is","a","subclass","of","#$Collection",")",".","Accordingly",",","in","cases","of","purely","legal","organizations",",","a","fictitious","#$member","should","be","assumed",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':633424).
lisp_trans(=>(tGroupedOrganization(ORG),exists([PURP],all([MEMBER],=>(member(MEMBER,ORG),hasPurpose(MEMBER,PURP))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634066).
lisp_trans(=>(and(tGroupedOrganization(ORG),member(AGENT,ORG)),tAgent(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634236).
lisp_trans(rtBinaryPredicate(employs),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634340).
lisp_trans(argIsa(employs,1,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634375).
lisp_trans(argIsa(employs,2,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634407).
lisp_trans(documentation(employs,vEnglishLanguage,s("(","#$employs","?","ORG","?","PERSON",")","means","that","?","ORG","has","hired","?","PERSON","and","currently","retains","?","PERSON",",","on","a","salaried",",","hourly","or","contractual","basis",",","to","provide","services","in","exchange","for","monetary","compensation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634441).
lisp_trans(genls(tGroupedPoliticalOrganization,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634677).
lisp_trans(documentation(tGroupedPoliticalOrganization,vEnglishLanguage,s("An","#$Organization","that","is","attempting","to","bring","about","some","sort","of","political","change",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634723).
lisp_trans(=>(tGroupedPoliticalOrganization(POL),exists([PROC],and(actPoliticalProcess(PROC),agent(PROC,POL)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':634863).
lisp_trans(genls(tSumoMilitaryForce,tGroupedPoliticalOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635013).
lisp_trans(documentation(tSumoMilitaryForce,vEnglishLanguage,'MilitaryForce is the subclass of #$Organizations that are organized along military lines and for the purpose of either defensive or offensive combat, whether or not the force is an official #$GovernmentOrganization.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635060).
lisp_trans(=>(tSumoMilitaryForce(ORG),capability(tSumoViolentContest,agent,ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635327).
lisp_trans(genls(tGroupedMilitaryOrganization,tSumoMilitaryForce),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635406).
lisp_trans(genls(tGroupedMilitaryOrganization,actGovernmentOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635452).
lisp_trans(documentation(tGroupedMilitaryOrganization,vEnglishLanguage,s("Any","heavily","armed","#$Organization","that","is","part","of","a","#$Government","and","that","is","charged","with","representing","the","#$Government","in","international","conflicts",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635507).
lisp_trans(genls(tGroupedParamilitaryOrganization,tSumoMilitaryForce),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635710).
lisp_trans(disjointWith(tGroupedParamilitaryOrganization,actGovernmentOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635760).
lisp_trans(documentation(tGroupedParamilitaryOrganization,vEnglishLanguage,s("An","#$Organization","which","is","much","like","a","#$MilitaryOrganization",",","e",".","g",".","it","is","made","up","of","armed","fighters",",","except","that","it","is","not","associated","with","a","#$Government",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':635819).
lisp_trans(genls(actGovernmentOrganization,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636034).
lisp_trans(documentation(actGovernmentOrganization,vEnglishLanguage,'GovernmentOrganization is the class of official #$Organizations that are concerned with the government of a #$GeopoliticalArea at some level.  They may be a #$subOrganization of a government.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636081).
lisp_trans(<=>(actGovernmentOrganization(ORG),exists([GOV],and(tSumoGovernment(GOV),subOrganization(ORG,GOV)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636333).
lisp_trans(=>(and(subOrganization(ORG,GOV),actGovernmentOrganization(GOV)),actGovernmentOrganization(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636486).
lisp_trans(genls(tSumoGovernment,actGovernmentOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636622).
lisp_trans(genls(tSumoGovernment,mobLegalAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636680).
lisp_trans(documentation(tSumoGovernment,vEnglishLanguage,s("The","ruling","body","of","a","#$GeopoliticalArea",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636714).
lisp_trans(rtUnaryFunction(iGroup_GovernmentFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636801).
lisp_trans(rtPartialValuedRelation(iGroup_GovernmentFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636839).
lisp_trans(argIsa(iGroup_GovernmentFn,1,tSumoGeopoliticalArea),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636885).
lisp_trans(resultIsa(iGroup_GovernmentFn,tSumoGovernment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636926).
lisp_trans(documentation(iGroup_GovernmentFn,vEnglishLanguage,s("(","#$GovernmentFn","?","AREA",")","denotes","the","#$Government","of","the","#$GeopoliticalArea","?","AREA",".","For","example",",","(","#$GovernmentFn","#$UnitedStates",")","denotes","the","Federal","-","level","government","of","the","United","States",",","(","#$GovernmentFn","#$PuertoRico",")","denotes","the","government","of","the","Commonwealth","of","Puerto","Rico",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':636958).
lisp_trans(genls(tGroupedPoliceOrganization,actGovernmentOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637281).
lisp_trans(documentation(tGroupedPoliceOrganization,vEnglishLanguage,s("Any","#$GovernmentOrganization","that","is","charged","with","domestic","enforcement","of","the","laws","of","the","#$Government",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637334).
lisp_trans(genls(tGroupedJudicialOrganization,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637492).
lisp_trans(documentation(tGroupedJudicialOrganization,vEnglishLanguage,'JudicialOrganization is the class of #$Organizations whose primary purpose is to render judgments according to the statutes or regulations of a government or other organization. Judicial bodies are not necessarily government organizations, for example, those associated with sporting associations.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637537).
lisp_trans(genls(tGroupedEducationalOrganization,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637893).
lisp_trans(documentation(tGroupedEducationalOrganization,vEnglishLanguage,s("A","#$EducationalOrganization","is","an","institution","of","learning",".","Some","examples","are","public","and","private","K","-12","schools",",","and","colleges","and","universities",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':637941).
lisp_trans(genls(tGroupedReligiousOrganization,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638141).
lisp_trans(genls(tGroupedReligiousOrganization,tSumoBeliefGroup),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638187).
lisp_trans(documentation(tGroupedReligiousOrganization,vEnglishLanguage,s("An","#$Organization","whose","members","share","a","set","of","religious","beliefs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638232).
lisp_trans(genlPreds(subOrganization,subCollection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638355).
lisp_trans(rtPartialOrderingRelation(subOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638399).
lisp_trans(argIsa(subOrganization,1,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638450).
lisp_trans(argIsa(subOrganization,2,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638490).
lisp_trans(documentation(subOrganization,vEnglishLanguage,s("(","#$subOrganization","?","ORG1","?","ORG2",")","means","that","?","ORG1","is","an","#$Organization","which","is","a","part","of","the","#$Organization","?","ORG2",".","Note","that","#$subOrganization","is","a","#$ReflexiveRelation",",","so","every","#$Organization","is","a","#$subOrganization","of","itself",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638530).
lisp_trans(rtBinaryPredicate(citizen),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638809).
lisp_trans(rtAsymmetricRelation(citizen),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638844).
lisp_trans(argIsa(citizen,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638882).
lisp_trans(argIsa(citizen,2,actNation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638907).
lisp_trans(documentation(citizen,vEnglishLanguage,s("(","#$citizen","?","PERSON","?","NATION",")","means","that","the","#$Human","?","PERSON","is","a","citizen","of","#$Nation","?","NATION",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':638933).
lisp_trans(genls(tFieldOfStudy,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639234).
lisp_trans(documentation(tFieldOfStudy,vEnglishLanguage,s("An","academic","or","applied","discipline","with","recognized","experts","and","with","a","core","of","accepted","theory","or","practice",".","Note","that","#$FieldOfStudy","is","a","#$subclass","of","#$Proposition",",","because","a","#$FieldOfStudy","is","understood","to","be","a","body","of","abstract",",","informational","content",",","with","varying","degrees","of","certainty","attached","to","each","element","of","this","content",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639270).
lisp_trans(genls(tSumoProcedure,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639648).
lisp_trans(documentation(tSumoProcedure,vEnglishLanguage,s("A","sequence","-","dependent","specification",".","Some","examples","are","#$ComputerPrograms",",","finite","-","state","machines",",","cooking","recipes",",","musical","scores",",","conference","schedules",",","driving","directions",",","and","the","scripts","of","plays","and","movies",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639681).
lisp_trans(genls(tSumoComputerProgram,tSumoProcedure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639936).
lisp_trans(documentation(tSumoComputerProgram,vEnglishLanguage,s("A","set","of","instructions","in","a","computer","programming","language","that","can","be","executed","by","a","computer",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':639973).
lisp_trans(genls(actComputerProgramming,tSumoContentDevelopment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640117).
lisp_trans(documentation(actComputerProgramming,vEnglishLanguage,s("The","process","of","developing","a","#$ComputerProgram")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640167).
lisp_trans(=>(actComputerProgramming(CP),exists([C],and(tSumoComputerProgram(C),result(CP,C)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640268).
lisp_trans(genls(cwPlan,tSumoProcedure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640395).
lisp_trans(documentation(cwPlan,vEnglishLanguage,s("A","specification","of","a","sequence","of","#$Processes","which","is","intended","to","satisfy","a","specified","purpose","at","some","future","time",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640421).
lisp_trans(=>(and(cwPlan(PLAN),tSumoContentBearingObject(OBJ),containsInformation(OBJ,PLAN)),exists([PLANNING],and(actPlanning(PLANNING),result(PLANNING,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640576).
lisp_trans(genls(tSumoArgument,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640817).
lisp_trans(sumo_partition(tSumoArgument,tSumoDeductiveArgument,tSumoInductiveArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640849).
lisp_trans(documentation(tSumoArgument,vEnglishLanguage,s("Any","proposition","which","has","the","form","of","a","deductive","or","inductive","argument",",","i",".","e",".","a","set","of","premises","which",",","it","is","claimed",",","imply","a","conclusion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':640906).
lisp_trans(=>(eventReasoning(REASON),exists([ARGUMENT],and(tSumoArgument(ARGUMENT),realization(REASON,ARGUMENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641088).
lisp_trans(=>(tSumoArgument(ARGUMENT),exists([PREMISES,CONCLUSION],and(equal(uPremisesFn(ARGUMENT),PREMISES),conclusion(CONCLUSION,ARGUMENT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641242).
lisp_trans(genls(tSumoDeductiveArgument,tSumoArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641423).
lisp_trans(sumo_partition(tSumoDeductiveArgument,tSumoValidDeductiveArgument,tSumoInvalidDeductiveArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641461).
lisp_trans(documentation(tSumoDeductiveArgument,vEnglishLanguage,s("An","#$Argument","which","has","the","form","of","a","deduction",",","i",".","e",".","it","is","claimed","that","the","set","of","#$premises","#$entails","the","#$conclusion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641539).
lisp_trans(genls(tSumoValidDeductiveArgument,tSumoDeductiveArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641715).
lisp_trans(documentation(tSumoValidDeductiveArgument,vEnglishLanguage,s("A","#$DeductiveArgument","which","is","valid",",","i",".","e",".","the","set","of","#$premises","in","fact","#$entails","the","#$conclusion",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641767).
lisp_trans(=>(and(tSumoValidDeductiveArgument(ARGUMENT),equal(PREMISES,uPremisesFn(ARGUMENT)),conclusion(CONCLUSION,ARGUMENT)),exists([FORMULA1,FORMULA2],and(containsInformation(FORMULA1,PREMISES),containsInformation(FORMULA2,CONCLUSION),entails(PREMISES,CONCLUSION)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':641926).
lisp_trans(genls(tSumoInvalidDeductiveArgument,tSumoDeductiveArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642270).
lisp_trans(documentation(tSumoInvalidDeductiveArgument,vEnglishLanguage,'DeductiveArguments that are not #$ValidDeductiveArguments, i.e. it is not the case that the set of #$premises in fact #$entails the #$conclusion.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642324).
lisp_trans(genls(cwExplanation,tSumoDeductiveArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642532).
lisp_trans(documentation(cwExplanation,vEnglishLanguage,s("An","#$Argument","where","the","conclusion","is","an","observed","fact","and","the","premises","are","other","facts","which","collectively","imply","the","conclusion",".","Note","that","this","is","the","they","hypothetico","-","deductive","model","of","explanation",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642573).
lisp_trans(genls(tSumoInductiveArgument,tSumoArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642821).
lisp_trans(documentation(tSumoInductiveArgument,vEnglishLanguage,s("An","#$Argument","which","is","inductive",",","i",".","e",".","it","is","claimed","that","a","set","of","specific","cases","makes","the","#$conclusion",",","which","generalizes","these","cases",",","more","likely","to","be","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':642859).
lisp_trans(rtBinaryPredicate(premise),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643073).
lisp_trans(rtTotalValuedRelation(premise),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643108).
lisp_trans(argIsa(premise,1,tSumoArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643147).
lisp_trans(argIsa(premise,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643175).
lisp_trans(documentation(premise,vEnglishLanguage,s("(","#$premise","?","ARGUMENT","?","PROPOSITION",")","means","that","the","#$Proposition","?","PROPOSITION","is","an","explicit","assumption","of","the","#$Argument","?","ARGUMENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643206).
lisp_trans(rtUnaryFunction(uPremisesFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643381).
lisp_trans(rtTotalValuedRelation(uPremisesFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643417).
lisp_trans(argIsa(uPremisesFn,1,tSumoArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643459).
lisp_trans(resultIsa(uPremisesFn,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643490).
lisp_trans(documentation(uPremisesFn,vEnglishLanguage,s("(","#$PremisesFn","?","ARGUMENT",")","returns","the","complete","set","of","#$premises","of","the","#$Argument","?","ARGUMENT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643521).
lisp_trans(=>(and(tSumoArgument(ARGUMENT),equal(PREMISES,uPremisesFn(ARGUMENT))),<=>(subProposition(PROPOSITION,PREMISES),premise(ARGUMENT,PROPOSITION))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643660).
lisp_trans(rtBinaryPredicate(conclusion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643852).
lisp_trans(rtSingleValuedRelation(conclusion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643890).
lisp_trans(rtTotalValuedRelation(conclusion),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643933).
lisp_trans(argIsa(conclusion,1,tSumoArgument),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':643975).
lisp_trans(argIsa(conclusion,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644006).
lisp_trans(documentation(conclusion,vEnglishLanguage,s("(","#$conclusion","?","ARGUMENT","?","PROPOSITION",")","means","that","the","#$Proposition","?","PROPOSITION","is","the","conclusion","explicitly","drawn","from","the","#$Argument","?","ARGUMENT",".","Note","that","it","may","or","may","not","be","the","case","that","?","ARGUMENT","#$entails","?","PROPOSITION",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644040).
lisp_trans(rtBinaryPredicate(consistent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644312).
lisp_trans(rtSymmetricRelation(consistent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644350).
lisp_trans(argIsa(consistent,1,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644390).
lisp_trans(argIsa(consistent,2,tProposition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644424).
lisp_trans(documentation(consistent,vEnglishLanguage,s("(","#$consistent","?","PROP1","?","PROP2",")","means","that","the","two","#$Propositions","?","PROP1","and","?","PROP2","are","consistent","with","one","another",",","i",".","e",".","it","is","possible","for","both","of","them","to","be","true","at","the","same","time",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644458).
lisp_trans(rtSpatialRelation(orientation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644684).
lisp_trans(rtTernaryPredicate(orientation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644723).
lisp_trans(argIsa(orientation,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644763).
lisp_trans(argIsa(orientation,2,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644793).
lisp_trans(argIsa(orientation,3,vtPositionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644823).
lisp_trans(documentation(orientation,vEnglishLanguage,s("A","general","#$Predicate","for","indicating","how","two","#$Objects","are","oriented","with","respect","to","one","another",".","For","example",",","(","orientation","?","OBJ1","?","OBJ2","North",")","means","that","?","OBJ1","is","north","of","?","OBJ2",",","and","(","orientation","?","OBJ1","?","OBJ2","Vertical",")","means","that","?","OBJ1","is","positioned","vertically","with","respect","to","?","OBJ2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':644866).
lisp_trans(=>(and(orientation(OBJ1,OBJ2,ATTR1),tN(contraryAttribute,ROW),inList(ATTR1,uN(vTheListFn,ROW)),inList(ATTR2,uN(vTheListFn,ROW)),not(equal(ATTR1,ATTR2))),not(orientation(OBJ1,OBJ2,ATTR2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645196).
lisp_trans(rtCaseRole(direction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645435).
lisp_trans(rtPartialValuedRelation(direction),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645465).
lisp_trans(argIsa(direction,1,actProcess),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645508).
lisp_trans(argIsa(direction,2,vtPositionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645537).
lisp_trans(genlPreds(direction,involvedInEvent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645578).
lisp_trans(documentation(direction,vEnglishLanguage,s("(","#$direction","?","PROC","?","ATTR",")","means","that","the","#$Process","?","PROC","is","moving","in","the","direction","?","ATTR",".","For","example",",","one","would","use","this","#$Predicate","to","represent","the","fact","that","Max","is","moving","#$North",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645618).
lisp_trans(=>(holdsDuring(TIME,direction(PROC,ATTR1)),all([ATTR2],=>(holdsDuring(TIME,direction(PROC,ATTR2)),equal(ATTR2,ATTR1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':645849).
lisp_trans(rtBinaryPredicate(faces),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646020).
lisp_trans(argIsa(faces,1,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646053).
lisp_trans(argIsa(faces,2,vtDirectionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646077).
lisp_trans(documentation(faces,vEnglishLanguage,s("(","#$faces","?","OBJ","?","DIRECTION",")","means","that","the","front","of","?","OBJ","(","see","#$FrontFn",")","is","positioned","towards","the","compass","direction","?","DIRECTION",".","More","precisely",",","it","means","that","if","a","line","were","extended","from","the","center","of","?","DIRECTION",",","the","line","would","intersect","with","the","front","of","?","OBJ","before","it","intersected","with","its","back","(","see","#$BackFn",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646115).
lisp_trans(=>(holdsDuring(TIME,faces(PROC,ATTR1)),all([ATTR2],=>(holdsDuring(TIME,faces(PROC,ATTR2)),equal(ATTR2,ATTR1)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646468).
lisp_trans(genls(vtTruthValue,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646631).
lisp_trans(documentation(vtTruthValue,vEnglishLanguage,s("The","#$Class","of","truth","values",",","e",".","g",".","#$True","and","#$False",".","These","are","#$Attributes","of","#$Sentences","and","#$Propositions",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646673).
lisp_trans(=>(and(sumoProperty(ITEM,VALUE),vtTruthValue(VALUE)),or(ftSentence(ITEM),tProposition(ITEM))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646832).
lisp_trans(vtTruthValue(vTrue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':646987).
lisp_trans(documentation(vTrue,vEnglishLanguage,s("The","#$TruthValue","of","being","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647014).
lisp_trans(vtTruthValue(vFalse),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647086).
lisp_trans(contraryAttribute(vFalse,vTrue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647114).
lisp_trans(documentation(vFalse,vEnglishLanguage,s("The","#$TruthValue","of","being","false",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647145).
lisp_trans(genlPreds(truth,sumoProperty),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647219).
lisp_trans(argIsa(truth,1,ftSentence),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647248).
lisp_trans(argIsa(truth,2,vtTruthValue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647274).
lisp_trans(documentation(truth,vEnglishLanguage,s("The","#$BinaryPredicate","that","relates","a","#$Sentence","to","its","#$TruthValue",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647302).
lisp_trans(genls(vtPositionalAttribute,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647412).
lisp_trans(documentation(vtPositionalAttribute,vEnglishLanguage,'Attributes characterizing the orientation of an #$Object, e.g. #$Vertical versus #$Horizontal, #$Left versus #$Right etc.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647463).
lisp_trans(genls(vtDirectionalAttribute,vtPositionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647642).
lisp_trans(documentation(vtDirectionalAttribute,vEnglishLanguage,s("The","subclass","of","#$PositionalAttributes","that","concern","compass","directions",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647694).
lisp_trans(=>(and(vtDirectionalAttribute(DIRECT),orientation(OBJ1,OBJ2,DIRECT),orientation(OBJ2,OBJ3,DIRECT)),cycBetween(OBJ1,OBJ2,OBJ3)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647822).
lisp_trans(vtDirectionalAttribute(tSumoNorth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':647986).
lisp_trans(contraryAttribute(tSumoNorth,tSumoSouth,tSumoEast,tSumoWest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648024).
lisp_trans(documentation(tSumoNorth,vEnglishLanguage,s("The","compass","direction","of","#$North",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648066).
lisp_trans(vtDirectionalAttribute(tSumoSouth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648141).
lisp_trans(documentation(tSumoSouth,vEnglishLanguage,s("The","compass","direction","of","#$South",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648179).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoNorth),orientation(OBJ2,OBJ1,tSumoSouth)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648254).
lisp_trans(vtDirectionalAttribute(tSumoEast),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648331).
lisp_trans(documentation(tSumoEast,vEnglishLanguage,s("The","compass","direction","of","#$East",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648368).
lisp_trans(vtDirectionalAttribute(tSumoWest),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648441).
lisp_trans(documentation(tSumoWest,vEnglishLanguage,s("The","compass","direction","of","#$West",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648478).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoEast),orientation(OBJ2,OBJ1,tSumoWest)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648551).
lisp_trans(vtPositionalAttribute(tSumoVertical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648626).
lisp_trans(documentation(tSumoVertical,vEnglishLanguage,s("Attribute","used","to","indicate","that","an","#$Object","is","positioned","height","-","wise","with","respect","to","another","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648666).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoVertical),orientation(OBJ2,OBJ1,tSumoVertical)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648814).
lisp_trans(vtPositionalAttribute(tSumoHorizontal),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648897).
lisp_trans(contraryAttribute(tSumoHorizontal,tSumoVertical),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648939).
lisp_trans(documentation(tSumoHorizontal,vEnglishLanguage,s("Attribute","used","to","indicate","that","an","#$Object","is","positioned","width","-","wise","with","respect","to","another","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':648979).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoHorizontal),orientation(OBJ2,OBJ1,tSumoHorizontal)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649128).
lisp_trans(genls(vtSymmetricPositionalAttribute,vtPositionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649215).
lisp_trans(documentation(vtSymmetricPositionalAttribute,vEnglishLanguage,'SymmetricAttribute is the class of #$PositionalAttribute that hold between two items regardless of their order or orientation.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649275).
lisp_trans(=>(and(vtSymmetricPositionalAttribute(P),orientation(O1,O2,P)),orientation(O2,O1,P)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649467).
lisp_trans(genls(vtAntiSymmetricPositionalAttribute,vtPositionalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649584).
lisp_trans(documentation(vtAntiSymmetricPositionalAttribute,vEnglishLanguage,'AntiSymmetricPositionalAttribute is the class of #$PositionalAttribute that hold in only one direction.  I.e. two objects cannot simulataneously be #$On each other.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649648).
lisp_trans(=>(and(vtAntiSymmetricPositionalAttribute(P),orientation(O1,O2,P)),not(orientation(O2,O1,P))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':649882).
lisp_trans(vtPositionalAttribute(tSumoAbove),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650009).
lisp_trans(vtAntiSymmetricPositionalAttribute(tSumoAbove),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650046).
lisp_trans(contraryAttribute(tSumoAbove,tSumoBelow),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650096).
lisp_trans(documentation(tSumoAbove,vEnglishLanguage,s("This","is","a","#$PositionalAttribute","derived","from","the","up","/","down","schema","and","not","involving","contact",".","Note","that","this","means","directly","above",",","i",".","e",".",",","if","one","object","is","#$Above","another","object",",","then","the","projections","of","the","two","objects","overlap",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650128).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoAbove),not(connected(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650394).
lisp_trans(vtPositionalAttribute(tSumoBelow),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650474).
lisp_trans(vtAntiSymmetricPositionalAttribute(tSumoBelow),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650511).
lisp_trans(documentation(tSumoBelow,vEnglishLanguage,s("This","#$PositionalAttribute","is","derived","from","the","up","/","down","schema","and","may","or","may","not","involve","contact",".","Note","that","this","means","directly","below",",","i",".","e",".",",","if","one","object","is","#$Below","another","object",",","then","the","projections","of","the","two","objects","overlap",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650561).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoBelow),or(orientation(OBJ2,OBJ1,tSumoOn),orientation(OBJ2,OBJ1,tSumoAbove))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650834).
lisp_trans(vtSymmetricPositionalAttribute(tSumoAdjacent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':650957).
lisp_trans(documentation(tSumoAdjacent,vEnglishLanguage,s("Used","to","assert","that","an","object","?","OBJ1","is","close","to",",","near","or","abutting","?","OBJ2",".","This","#$PositionalAttribute","covers","the","following","common","sense","notions",":","adjoins",",","abuts",",","is","contiguous","to",",","is","juxtaposed",",","and","is","close","to",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651006).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoAdjacent),or(orientation(OBJ1,OBJ2,tSumoNear),connected(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651261).
lisp_trans(vtPositionalAttribute(tSumoLeft),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651381).
lisp_trans(vtAntiSymmetricPositionalAttribute(tSumoLeft),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651417).
lisp_trans(documentation(tSumoLeft,vEnglishLanguage,s("This","#$PositionalAttribute","is","derived","from","the","left","/","right","schema",".","Note","that","this","means","directly","to","the","left",",","so","that",",","if","one","object","is","to","the","left","of","another",",","then","the","projections","of","the","two","objects","overlap",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651466).
lisp_trans(vtPositionalAttribute(tSumoRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651715).
lisp_trans(vtAntiSymmetricPositionalAttribute(tSumoRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651752).
lisp_trans(contraryAttribute(tSumoRight,tSumoLeft),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651802).
lisp_trans(documentation(tSumoRight,vEnglishLanguage,s("This","#$PositionalAttribute","is","derived","from","the","left","/","right","schema",".","Note","that","this","means","directly","to","the","right",",","so","that",",","if","one","object","is","to","the","right","of","another",",","then","the","projections","of","the","two","objects","overlap",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':651833).
lisp_trans(<=>(orientation(OBJ1,OBJ2,tSumoRight),orientation(OBJ2,OBJ1,tSumoLeft)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652085).
lisp_trans(vtSymmetricPositionalAttribute(tSumoNear),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652161).
lisp_trans(documentation(tSumoNear,vEnglishLanguage,s("The","relation","of","common","sense","adjacency",".","Note","that",",","if","an","object","is","#$Near","another","object",",","then","the","objects","are","not","#$connected",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652206).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoNear),not(connected(OBJ1,OBJ2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652375).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoNear),orientation(OBJ2,OBJ1,tSumoNear)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652454).
lisp_trans(vtAntiSymmetricPositionalAttribute(tSumoOn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652528).
lisp_trans(documentation(tSumoOn,vEnglishLanguage,s("This","is","used","to","assert","that","an","object","is","on","top","of","another","object",",","and","it","is","derived","from","the","up","/","down","schema","and","involves","contact",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652575).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoOn),connected(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652744).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoOn),located(OBJ1,OBJ2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652809).
lisp_trans(=>(orientation(OBJ1,OBJ2,tSumoOn),not(orientation(OBJ2,OBJ1,tSumoOn))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652872).
lisp_trans(genls(tPlaceLikeTimeZone,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652954).
lisp_trans(documentation(tPlaceLikeTimeZone,vEnglishLanguage,s("An","#$Attribute","which","is","used","to","specify","coordinates","in","which","time","measures","are","uniform",",","i",".","e",".","all","time","devices","are","synchronized","to","the","same","#$TimePositions",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':652994).
lisp_trans(tPlaceLikeTimeZone(timeCoordinatedUniversalTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653194).
lisp_trans(documentation(timeCoordinatedUniversalTimeZone,vEnglishLanguage,s("A","#$TimeZone","which","functions","as","the","standard","time","zone",".","It","is","also","known","as","Zulu","time","(","in","the","military",")",",","Greenwich","Mean","Time",",","and","the","Western","European","time","zone",".","Note","that","whenever","a","#$TimeZone","is","not","specified",",","the","#$TimePosition","is","understood","to","be","with","respect","to","the","#$CoordinatedUniversalTimeZone",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653243).
lisp_trans(tPlaceLikeTimeZone(timePacificTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653612).
lisp_trans(documentation(timePacificTimeZone,vEnglishLanguage,s("A","#$TimeZone","that","covers","much","of","the","western","part","of","the","United","States",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653648).
lisp_trans(=>(equal(timeRelativeTimeFn(TIME1,timePacificTimeZone),TIME2),equal(TIME2,uAdditionFn(TIME1,8))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653771).
lisp_trans(tPlaceLikeTimeZone(timeMountainTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653875).
lisp_trans(documentation(timeMountainTimeZone,vEnglishLanguage,s("A","#$TimeZone","that","covers","much","of","the","Rocky","Mountain","region","of","the","United","States",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':653912).
lisp_trans(=>(equal(timeRelativeTimeFn(TIME1,timeMountainTimeZone),TIME2),equal(TIME2,uAdditionFn(TIME1,7))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654045).
lisp_trans(tPlaceLikeTimeZone(timeCentralTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654150).
lisp_trans(documentation(timeCentralTimeZone,vEnglishLanguage,s("A","#$TimeZone","that","covers","much","of","the","midwestern","United","States",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654186).
lisp_trans(=>(equal(timeRelativeTimeFn(TIME1,timeCentralTimeZone),TIME2),equal(TIME2,uAdditionFn(TIME1,6))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654300).
lisp_trans(tPlaceLikeTimeZone(timeEasternTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654404).
lisp_trans(documentation(timeEasternTimeZone,vEnglishLanguage,s("A","#$TimeZone","that","covers","much","of","the","eastern","United","States",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654440).
lisp_trans(=>(equal(timeRelativeTimeFn(TIME1,timeEasternTimeZone),TIME2),equal(TIME2,uAdditionFn(TIME1,5))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654551).
lisp_trans(rtBinaryFunction(timeRelativeTimeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654655).
lisp_trans(rtTemporalRelation(timeRelativeTimeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654696).
lisp_trans(rtTotalValuedRelation(timeRelativeTimeFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654739).
lisp_trans(argIsa(timeRelativeTimeFn,1,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654785).
lisp_trans(argIsa(timeRelativeTimeFn,2,tPlaceLikeTimeZone),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654824).
lisp_trans(resultIsa(timeRelativeTimeFn,timeTimePosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654859).
lisp_trans(documentation(timeRelativeTimeFn,vEnglishLanguage,s("A","means","of","converting","#$TimePositions","between","different","#$TimeZones",".","(","#$RelativeTimeFn","?","TIME","?","ZONE",")","denotes","the","#$TimePosition","in","#$CoordinatedUniversalTime","that","is","contemporaneous","with","the","#$TimePosition","?","TIME","in","#$TimeZone","?","ZONE",".","For","example",",","(","#$RelativeTimeFn","(","#$MeasureFn","14","#$HourDuration",")","#$EasternTimeZone",")","would","return","the","value","(","#$MeasureFn","19","#$HourDuration",")",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':654895).
lisp_trans(genls(rtSocialRole,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655316).
lisp_trans(documentation(rtSocialRole,vEnglishLanguage,s("The","#$Class","of","all","#$Attributes","that","specify","the","position","or","status","of","a","#$CognitiveAgent","within","an","#$Organization","or","other","#$Group",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655358).
lisp_trans(=>(and(sumoAttribute(PERSON,ATTRIBUTE),rtSocialRole(ATTRIBUTE)),tSumoHuman(PERSON)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655537).
lisp_trans(rtSocialRole(tSumoUnemployed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655656).
lisp_trans(documentation(tSumoUnemployed,vEnglishLanguage,s("The","#$Attribute","of","a","#$CognitiveAgent","when","he","/","she","is","unemployed",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655689).
lisp_trans(<=>(and(tSumoHuman(PERSON),all([ORG],not(employs(ORG,PERSON)))),sumoAttribute(PERSON,tSumoUnemployed)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655800).
lisp_trans(genls(actPosition,rtSocialRole),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655953).
lisp_trans(documentation(actPosition,vEnglishLanguage,s("A","formal","position","of","reponsibility","within","an","#$Organization",".","Examples","of","#$Positions","include","president",",","laboratory","director",",","senior","researcher",",","sales","representative",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':655984).
lisp_trans(rtTernaryPredicate(occupiesPosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656199).
lisp_trans(argIsa(occupiesPosition,1,tSumoHuman),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656244).
lisp_trans(argIsa(occupiesPosition,2,actPosition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656278).
lisp_trans(argIsa(occupiesPosition,3,tGroupedOrganization),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656315).
lisp_trans(documentation(occupiesPosition,vEnglishLanguage,s("(","#$occupiesPosition","?","PERSON","?","POSITION","?","ORG",")","means","that","?","PERSON","holds","the","#$Position","?","POSITION","at","#$Organization","?","ORG",".","For","example",",","(","#$occupiesPosition","#$TomSmith","#$ResearchDirector","#$AcmeLaboratory",")","means","that","#$TomSmith","is","a","research","director","at","Acme","Labs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656356).
lisp_trans(=>(occupiesPosition(AGENT,POSITION,ORG),sumoAttribute(AGENT,POSITION)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656666).
lisp_trans(=>(employs(ORG,PERSON),exists([POSITION],occupiesPosition(PERSON,POSITION,ORG))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656746).
lisp_trans(=>(occupiesPosition(PERSON,POSITION,ORGANIZATION),member(PERSON,ORGANIZATION)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656850).
lisp_trans(genls(vtNormativeAttribute,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656944).
lisp_trans(documentation(vtNormativeAttribute,vEnglishLanguage,s("A","#$Class","containing","all","of","the","#$Attributes","that","are","specific","to","morality",",","legality",",","aesthetics",",","etiquette",",","etc",".","Many","of","these","attributes","express","a","judgement","that","something","ought","or","ought","not","to","be","the","case",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':656994).
lisp_trans(rtBinaryPredicate(modalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657258).
lisp_trans(rtAsymmetricRelation(modalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657300).
lisp_trans(rtIrreflexiveRelation(modalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657345).
lisp_trans(rtPartialValuedRelation(modalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657391).
lisp_trans(genlPreds(modalAttribute,sumoProperty),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657439).
lisp_trans(argIsa(modalAttribute,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657477).
lisp_trans(argIsa(modalAttribute,2,vtNormativeAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657511).
lisp_trans(documentation(modalAttribute,vEnglishLanguage,s("A","#$BinaryRelation","that","is","used","to","state","the","normative","force","of","a","#$Proposition",".","(","#$modalAttribute","?","FORMULA","?","PROP",")","means","that","the","#$Proposition","expressed","by","?","FORMULA","has","the","#$NormativeAttribute","?","PROP",".","For","example",",","(","#$modalAttribute","(","#$exists","(","?","ACT","?","OBJ",")","(","#$and","(","#$instance","?","ACT","#$Giving",")","(","#$agent","?","ACT","John",")","(","#$patient","?","ACT","?","OBJ",")","(","#$destination","?","ACT","Tom",")",")",")","#$Obligation",")","means","that","John","is","obligated","to","give","Tom","something",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':657556).
lisp_trans(=>(and(modalAttribute(FORMULA1,PROP),entails(FORMULA1,FORMULA2)),modalAttribute(FORMULA2,PROP)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658032).
lisp_trans(=>(modalAttribute(FORMULA,cwPermission),modalAttribute(FORMULA,tSumoPossibility)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658158).
lisp_trans(genls(vtSubjectiveAssessmentAttribute,vtNormativeAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658247).
lisp_trans(disjointWith(vtSubjectiveAssessmentAttribute,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658307).
lisp_trans(documentation(vtSubjectiveAssessmentAttribute,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","which","lack","an","objective","criterion","for","their","attribution",",","i",".","e",".","the","attribution","of","these","#$Attributes","varies","from","subject","to","subject","and","even","with","respect","to","the","same","subject","over","time",".","This","#$Class","is",",","generally","speaking",",","only","used","when","mapping","external","knowledge","sources","to","the","SUMO",".","If","a","term","from","such","a","knowledge","source","seems","to","lack","objective","criteria","for","its","attribution",",","it","is","assigned","to","this","#$Class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658362).
lisp_trans(=>(and(sumoAttribute(OBJ,ATR),vtSubjectiveAssessmentAttribute(ATR)),exists([TIME,JUDGE,AGENT],and(actJudging(JUDGE),agent(JUDGE,AGENT),patient(JUDGE,OBJ),patient(JUDGE,sumoAttribute(OBJ,ATR)),holdsDuring(TIME,believes(AGENT,sumoProperty(OBJ,ATR)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':658875).
lisp_trans(genls(vtSubjectiveStrongPositiveAttribute,vtSubjectiveAssessmentAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':659280).
lisp_trans(documentation(vtSubjectiveStrongPositiveAttribute,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","which","lack","an","objective","criterion","for","their","attribution",",","though","statistically","tends","to","be","used","in","a","strongly","positive","sense",".","This","#$Class","is",",","generally","speaking",",","only","used","when","mapping","external","knowledge","sources","to","the","SUMO",".","If","a","term","from","such","a","knowledge","source","seems","to","lack","objective","criteria","for","its","attribution",",","it","is","assigned","to","this","#$Class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':659355).
lisp_trans(genls(vtSubjectiveWeakPositiveAttribute,vtSubjectiveAssessmentAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':659813).
lisp_trans(documentation(vtSubjectiveWeakPositiveAttribute,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","which","lack","an","objective","criterion","for","their","attribution",",","though","statistically","tends","to","be","used","in","a","weakly","positive","sense",".","This","#$Class","is",",","generally","speaking",",","only","used","when","mapping","external","knowledge","sources","to","the","SUMO",".","If","a","term","from","such","a","knowledge","source","seems","to","lack","objective","criteria","for","its","attribution",",","it","is","assigned","to","this","#$Class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':659886).
lisp_trans(genls(vtSubjectiveStrongNegativeAttribute,vtSubjectiveAssessmentAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':660340).
lisp_trans(documentation(vtSubjectiveStrongNegativeAttribute,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","which","lack","an","objective","criterion","for","their","attribution",",","though","statistically","tends","to","be","used","in","a","strongly","negative","sense",".","This","#$Class","is",",","generally","speaking",",","only","used","when","mapping","external","knowledge","sources","to","the","SUMO",".","If","a","term","from","such","a","knowledge","source","seems","to","lack","objective","criteria","for","its","attribution",",","it","is","assigned","to","this","#$Class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':660415).
lisp_trans(genls(vtSubjectiveWeakNegativeAttribute,vtSubjectiveAssessmentAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':660873).
lisp_trans(documentation(vtSubjectiveWeakNegativeAttribute,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","which","lack","an","objective","criterion","for","their","attribution",",","though","statistically","tends","to","be","used","in","a","weakly","negative","sense",".","This","#$Class","is",",","generally","speaking",",","only","used","when","mapping","external","knowledge","sources","to","the","SUMO",".","If","a","term","from","such","a","knowledge","source","seems","to","lack","objective","criteria","for","its","attribution",",","it","is","assigned","to","this","#$Class",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':660946).
lisp_trans(genls(tSumoObjectiveNorm,vtNormativeAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':661400).
lisp_trans(documentation(tSumoObjectiveNorm,vEnglishLanguage,s("The","#$Class","of","#$NormativeAttributes","that","are","associated","with","an","objective","criterion","for","their","attribution",",","i",".","e",".","there","is","broad","consensus","about","the","cases","where","these","attributes","are","applicable",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':661444).
lisp_trans(genls(vtContestAttribute,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':661686).
lisp_trans(documentation(vtContestAttribute,vEnglishLanguage,s("A","#$Class","containing","#$Attributes","that","are","specific","to","participants","in","a","#$Contest",".","In","particular",",","these","#$Attributes","indicate","the","position","of","one","of","the","#$agents","in","the","#$Contest","with","respect","to","other","#$agent","(","s",")","in","the","#$Contest",".","Some","examples","of","these","#$Attributes","are","winning",",","losing",",","won",",","lost",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':661728).
lisp_trans(=>(and(sumoProperty(THING,ATTR),vtContestAttribute(ATTR)),exists([CONTEST],and(tSumoContest(CONTEST),or(agent(CONTEST,THING),patient(CONTEST,THING),subProcess(THING,CONTEST))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662087).
lisp_trans(genls(vtAlethicAttribute,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662373).
lisp_trans(documentation(vtAlethicAttribute,vEnglishLanguage,s("A","#$Class","containing","all","of","the","#$Attributes","relating","to","the","notions","of","possibility","and","necessity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662415).
lisp_trans(vtAlethicAttribute(tSumoPossibility),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662566).
lisp_trans(documentation(tSumoPossibility,vEnglishLanguage,s("Attribute","that","applies","to","#$Propositions","that","are","possible",",","i",".","e",".","true","in","at","least","one","possible","world",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662606).
lisp_trans(vtAlethicAttribute(tSumoNecessity),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662755).
lisp_trans(documentation(tSumoNecessity,vEnglishLanguage,s("Attribute","that","applies","to","#$Propositions","that","are","necessary",",","i",".","e",".","true","in","every","possible","world",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662793).
lisp_trans(<=>(modalAttribute(FORMULA,tSumoNecessity),not(modalAttribute(not(FORMULA),tSumoPossibility))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':662934).
lisp_trans(=>(modalAttribute(FORMULA,tSumoNecessity),modalAttribute(FORMULA,tSumoPossibility)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663033).
lisp_trans(rtBinaryPredicate(holdsRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663119).
lisp_trans(rtAsymmetricRelation(holdsRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663157).
lisp_trans(argIsa(holdsRight,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663198).
lisp_trans(argIsa(holdsRight,2,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663228).
lisp_trans(documentation(holdsRight,vEnglishLanguage,s("Expresses","a","relationship","between","a","#$Formula","and","a","#$CognitiveAgent","whereby","the","#$CognitiveAgent","has","the","right","to","bring","it","about","that","the","#$Formula","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663265).
lisp_trans(rtTernaryPredicate(confersRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663468).
lisp_trans(argIsa(confersRight,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663509).
lisp_trans(argIsa(confersRight,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663541).
lisp_trans(argIsa(confersRight,3,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663572).
lisp_trans(documentation(confersRight,vEnglishLanguage,s("Expresses","the","relationship","between","a","#$Formula",",","an","#$Entity",",","and","a","#$CognitiveAgent","when","the","#$Entity","authorizes","the","#$CognitiveAgent","to","bring","it","about","that","the","#$Formula","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663611).
lisp_trans(=>(confersRight(FORMULA,AGENT1,AGENT2),holdsRight(FORMULA,AGENT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663839).
lisp_trans(rtBinaryPredicate(holdsObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663921).
lisp_trans(rtAsymmetricRelation(holdsObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':663964).
lisp_trans(argIsa(holdsObligation,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664010).
lisp_trans(argIsa(holdsObligation,2,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664045).
lisp_trans(relatedInternalConcept(holdsObligation,holdsRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664087).
lisp_trans(documentation(holdsObligation,vEnglishLanguage,s("Expresses","a","relationship","between","a","#$Formula","and","a","#$CognitiveAgent","whereby","the","#$CognitiveAgent","has","the","obligation","to","bring","it","about","that","the","#$Formula","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664139).
lisp_trans(rtTernaryPredicate(confersObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664352).
lisp_trans(argIsa(confersObligation,1,ftFormula),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664398).
lisp_trans(argIsa(confersObligation,2,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664435).
lisp_trans(argIsa(confersObligation,3,mobCognitiveAgent),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664471).
lisp_trans(relatedInternalConcept(confersObligation,confersRight),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664515).
lisp_trans(documentation(confersObligation,vEnglishLanguage,s("Expresses","the","relationship","between","a","a","#$Formula",",","an","#$Entity",",","and","a","#$CognitiveAgent","when","the","#$Entity","obligates","the","#$CognitiveAgent","to","bring","it","about","that","the","#$Formula","is","true",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664571).
lisp_trans(=>(confersObligation(FORMULA,AGENT1,AGENT2),holdsObligation(FORMULA,AGENT2)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664805).
lisp_trans(genls(vtDeonticAttribute,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664897).
lisp_trans(documentation(vtDeonticAttribute,vEnglishLanguage,s("A","#$Class","containing","all","of","the","#$Attributes","relating","to","the","notions","of","permission",",","obligation",",","and","prohibition",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':664939).
lisp_trans(vtDeonticAttribute(cwPermission),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665104).
lisp_trans(documentation(cwPermission,vEnglishLanguage,'Attribute that applies to #$Propositions that an #$Agent is permitted, by some authority, to make true.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665143).
lisp_trans(vtDeonticAttribute(cwObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665295).
lisp_trans(documentation(cwObligation,vEnglishLanguage,'Attribute that applies to #$Propositions that an #$Agent is required, by some authority, to make true.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665334).
lisp_trans(<=>(modalAttribute(FORMULA,cwObligation),not(modalAttribute(not(FORMULA),cwPermission))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665485).
lisp_trans(=>(modalAttribute(FORMULA,cwObligation),modalAttribute(FORMULA,cwPermission)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665584).
lisp_trans(subAttribute(cwLaw,cwObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665670).
lisp_trans(vtDeonticAttribute(cwLaw),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665700).
lisp_trans(documentation(cwLaw,vEnglishLanguage,'Attribute that applies to #$Propositions that are required by a government or a branch of the government and that are enforced with penalties for noncompliance.  These #$Propositions may be codified as legislation or they may be more informal, as in the case of government policy.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':665732).
lisp_trans(subAttribute(eventPromise,cwObligation),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':666054).
lisp_trans(documentation(eventPromise,vEnglishLanguage,'Attribute that applies to #$Propositions that an #$Agent promises to make true.  #$Promises may be implicit or explicit. They may be expressed in a written or verbal or gestural manner.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':666088).
lisp_trans(vtDeonticAttribute(cwProhibition),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':666701).
lisp_trans(documentation(cwProhibition,vEnglishLanguage,'Prohibition is the #$DeonticAttribute that applies to #$Formulas that an #$Agent is forbidden, by some authority, to make true.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':666741).
lisp_trans(<=>(modalAttribute(FORMULA,cwProhibition),not(modalAttribute(FORMULA,cwPermission))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':666918).
lisp_trans(genls(vtProbabilityAttribute,tSumoObjectiveNorm),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667010).
lisp_trans(documentation(vtProbabilityAttribute,vEnglishLanguage,s("A","class","containing","all","of","the","#$Attributes","relating","to","objective",",","qualitative","assessments","of","probability",",","e",".","g",".","#$Likely","and","#$Unlikely",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667056).
lisp_trans(vtProbabilityAttribute(tSumoLikely),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667248).
lisp_trans(contraryAttribute(tSumoLikely,tSumoUnlikely),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667287).
lisp_trans(documentation(tSumoLikely,vEnglishLanguage,s("The","#$ProbabilityAttribute","of","being","probable",",","i",".","e",".","more","likely","than","not","to","be","#$True",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667323).
lisp_trans(=>(modalAttribute(FORMULA,tSumoLikely),greaterThan(vProbabilityFn(truth(FORMULA,vTrue)),vProbabilityFn(truth(FORMULA,vFalse)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667451).
lisp_trans(vtProbabilityAttribute(tSumoUnlikely),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667587).
lisp_trans(documentation(tSumoUnlikely,vEnglishLanguage,s("The","#$ProbabilityAttribute","of","being","improbable",",","i",".","e",".","more","likely","than","not","to","be","#$False",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667628).
lisp_trans(=>(modalAttribute(FORMULA,tSumoUnlikely),greaterThan(vProbabilityFn(truth(FORMULA,vFalse)),vProbabilityFn(truth(FORMULA,vTrue)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667761).
lisp_trans(genls(tSumoPhysicalState,vtInternalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667899).
lisp_trans(contraryAttribute(tSumoSolid,tSumoLiquid,tSumoGas,tSumoPlasma),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667942).
lisp_trans(exhaustiveAttribute(tSumoPhysicalState,tSumoSolid,tSumoFluid,tSumoLiquid,tSumoGas,tSumoPlasma),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':667986).
lisp_trans(documentation(tSumoPhysicalState,vEnglishLanguage,s("The","physical","state","of","an","#$Object",".","There","are","three","reified","instances","of","this","#$Class",":","#$Solid",",","#$Liquid",",","and","#$Gas",".","Physical","changes","are","not","characterized","by","the","transformation","of","one","substance","into","another",",","but","rather","by","the","change","of","the","form","(","physical","states",")","of","a","given","substance",".","For","example",",","melting","an","iron","nail","yields","a","substance","still","called","iron",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668052).
lisp_trans(tSumoPhysicalState(tSumoSolid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668461).
lisp_trans(documentation(tSumoSolid,vEnglishLanguage,s("An","#$Object","has","the","#$Attribute","of","#$Solid","if","it","has","a","fixed","shape","and","a","fixed","volume",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668492).
lisp_trans(tSumoPhysicalState(tSumoFluid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668620).
lisp_trans(documentation(tSumoFluid,vEnglishLanguage,'Fluid is the #$PhysicalState attribute of an #$Object that does not have a fixed shape and thus tends to flow or to conform to the shape of a container.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668651).
lisp_trans(tSumoPhysicalState(tSumoLiquid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668847).
lisp_trans(subAttribute(tSumoLiquid,tSumoFluid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668879).
lisp_trans(documentation(tSumoLiquid,vEnglishLanguage,s("An","#$Object","has","the","#$Attribute","of","#$Liquid","if","it","has","a","fixed","volume","but","not","a","fixed","shape",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':668907).
lisp_trans(=>(tSolution(OBJ),sumoAttribute(OBJ,tSumoLiquid)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669041).
lisp_trans(tSumoPhysicalState(tSumoGas),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669102).
lisp_trans(subAttribute(tSumoGas,tSumoFluid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669131).
lisp_trans(documentation(tSumoGas,vEnglishLanguage,s("An","#$Object","has","the","#$Attribute","of","#$Gas","if","it","has","neither","a","fixed","volume","nor","a","fixed","shape",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669156).
lisp_trans(<=>(tSumoSubstance(OBJ),exists([ATTR],and(tSumoPhysicalState(ATTR),sumoAttribute(OBJ,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669288).
lisp_trans(tSumoPhysicalState(tSumoPlasma),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669428).
lisp_trans(subAttribute(tSumoPlasma,tSumoFluid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669460).
lisp_trans(documentation(tSumoPlasma,vEnglishLanguage,s("An","extremely","energetic","#$PhysicalState","that","consists","of","atomic","nuclei","stripped","of","electrons",".","That","is",",","a","plasma","is","composed","of","positive","ions","and","free","electrons",".","#$Plasma","behaves","differently","enough","from","#$Gas","that","it","is","referred","to","as","the","fourth","state","of","matter",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':669488).
lisp_trans(genls(vtPerceptualAttribute,vtRelationalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670317).
lisp_trans(documentation(vtPerceptualAttribute,vEnglishLanguage,s("Any","#$Attribute","whose","presence","is","detected","by","an","act","of","#$Perception",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670368).
lisp_trans(=>(and(actPerception(PERCEPTION),patient(PERCEPTION,OBJ)),exists([PROP],and(vtPerceptualAttribute(PROP),sumoAttribute(OBJ,PROP)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670493).
lisp_trans(genls(vtTasteAttribute,vtPerceptualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670691).
lisp_trans(documentation(vtTasteAttribute,vEnglishLanguage,s("The","#$Class","of","#$Attributes","relating","to","the","taste","of","#$Objects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670737).
lisp_trans(=>(isa(OBJ,uFoodForFn(tClazzAnimal)),exists([ATTR],and(vtTasteAttribute(ATTR),sumoAttribute(OBJ,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':670851).
lisp_trans(genls(vtOlfactoryAttribute,vtPerceptualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671000).
lisp_trans(documentation(vtOlfactoryAttribute,vEnglishLanguage,s("The","#$Class","of","properties","that","are","detectable","by","smell",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671050).
lisp_trans(genls(vtVisualAttribute,vtPerceptualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671160).
lisp_trans(documentation(vtVisualAttribute,vEnglishLanguage,s("The","#$Class","of","visually","discernible","properties",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671207).
lisp_trans(vtVisualAttribute(tSumoIlluminated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671306).
lisp_trans(documentation(tSumoIlluminated,vEnglishLanguage,s("The","#$Attribute","of","#$Regions","that","are","illuminated","to","some","degree",",","i",".","e",".","in","which","some","shapes","are","visually","discernable",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671345).
lisp_trans(vtVisualAttribute(tSumoUnilluminated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671510).
lisp_trans(contraryAttribute(tSumoUnilluminated,tSumoIlluminated),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671551).
lisp_trans(documentation(tSumoUnilluminated,vEnglishLanguage,s("The","#$Attribute","of","#$Regions","that","are","unilluminated",",","i",".","e","in","which","no","shapes","are","visually","discernable",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671597).
lisp_trans(genls(vtColorAttribute,vtVisualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671823).
lisp_trans(documentation(vtColorAttribute,vEnglishLanguage,s("The","#$Class","of","#$Attributes","relating","to","the","color","of","#$Objects",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671866).
lisp_trans(genls(tSumoPrimaryColor,vtColorAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':671980).
lisp_trans(documentation(tSumoPrimaryColor,vEnglishLanguage,s("Colors","which","can","be","blended","to","form","any","color","and","which","cannot","be","derived","from","any","other","colors",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672019).
lisp_trans(tSumoPrimaryColor(tSumoRed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672164).
lisp_trans(documentation(tSumoRed,vEnglishLanguage,s("The","#$Attribute","of","redness",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672192).
lisp_trans(tSumoPrimaryColor(tSumoBlue),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672259).
lisp_trans(documentation(tSumoBlue,vEnglishLanguage,s("The","#$Attribute","of","being","blue","in","color",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672288).
lisp_trans(tSumoPrimaryColor(tSumoYellow),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672368).
lisp_trans(documentation(tSumoYellow,vEnglishLanguage,s("The","#$Attribute","of","being","yellow","in","color",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672399).
lisp_trans(tSumoPrimaryColor(tSumoWhite),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672483).
lisp_trans(documentation(tSumoWhite,vEnglishLanguage,s("The","#$Attribute","of","being","white","in","color",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672513).
lisp_trans(tSumoPrimaryColor(tSumoBlack),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672595).
lisp_trans(documentation(tSumoBlack,vEnglishLanguage,s("The","#$Attribute","of","being","black","in","color",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672625).
lisp_trans(vtColorAttribute(tSumoMonochromatic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672707).
lisp_trans(documentation(tSumoMonochromatic,vEnglishLanguage,s("An","#$Object","with","this","#$Attribute","has","the","same","color","on","every","part","of","its","surface",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672747).
lisp_trans(=>(and(sumoAttribute(OBJ,tSumoMonochromatic),superficialPart(PART,OBJ),sumoAttribute(PART,COLOR),tSumoPrimaryColor(COLOR)),all([ELEMENT],=>(superficialPart(ELEMENT,OBJ),sumoAttribute(ELEMENT,COLOR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':672879).
lisp_trans(=>(tSumoObject(OBJ),or(sumoAttribute(OBJ,tSumoMonochromatic),sumoAttribute(OBJ,tSumoPolychromatic))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673146).
lisp_trans(vtColorAttribute(tSumoPolychromatic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673260).
lisp_trans(contraryAttribute(tSumoPolychromatic,tSumoMonochromatic),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673300).
lisp_trans(documentation(tSumoPolychromatic,vEnglishLanguage,s("An","#$Object","with","this","#$Attribute","has","different","colors","on","different","parts","of","its","surface",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673348).
lisp_trans(=>(sumoAttribute(OBJ,tSumoPolychromatic),exists([PART1,PART2,COLOR1,COLOR2],and(superficialPart(PART1,OBJ),superficialPart(PART2,OBJ),sumoAttribute(PART1,COLOR1),sumoAttribute(PART2,COLOR2),vtColorAttribute(COLOR1),vtColorAttribute(COLOR2),not(equal(COLOR1,COLOR2))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673487).
lisp_trans(genls(vtStructureAttribute,vtInternalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673890).
lisp_trans(documentation(vtStructureAttribute,vEnglishLanguage,s("Each","#$subclass","of","#$StructureAttribute","denotes","some","facet","of","the","structure","of","physical","entities",".","Each","#$instance","of","#$StructureAttribute","denotes","some","structural","characteristic","that","may","pertain","to","some","#$Physical","entity",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':673938).
lisp_trans(genls(vtShapeAttribute,vtStructureAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674214).
lisp_trans(documentation(vtShapeAttribute,vEnglishLanguage,s("Any","#$Attribute","that","relates","to","the","shape","of","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674385).
lisp_trans(=>(and(vtShapeAttribute(ATTRIBUTE),sumoAttribute(OBJ,ATTRIBUTE),surface(SURFACE,OBJ)),sumoAttribute(SURFACE,ATTRIBUTE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674493).
lisp_trans(vtInternalAttribute(tSumoPliable),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674649).
lisp_trans(documentation(tSumoPliable,vEnglishLanguage,s("The","shape","of","an","#$Object","with","this","#$Attribute","can","easily","be","altered",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674686).
lisp_trans(=>(and(tSumoObject(OBJ),sumoAttribute(OBJ,tSumoPliable)),exists([CHANGE],and(tSumoShapeChange(CHANGE),patient(CHANGE,OBJ)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674799).
lisp_trans(vtInternalAttribute(tRigid),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':674966).
lisp_trans(contraryAttribute(tRigid,tSumoPliable),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675001).
lisp_trans(documentation(tRigid,vEnglishLanguage,s("The","shape","of","an","#$Object","with","this","#$Attribute","cannot","be","altered","without","breaking",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675035).
lisp_trans(genls(vtTextureAttribute,vtPerceptualAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675159).
lisp_trans(documentation(vtTextureAttribute,vEnglishLanguage,s("Any","#$Attribute","that","characterizes","the","texture","of","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675207).
lisp_trans(=>(and(vtTextureAttribute(ATTRIBUTE),sumoAttribute(OBJ,ATTRIBUTE),surface(SURFACE,OBJ)),sumoAttribute(SURFACE,ATTRIBUTE)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675322).
lisp_trans(vtTextureAttribute(vSmooth),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675481).
lisp_trans(documentation(vSmooth,vEnglishLanguage,s("An","#$Object","with","this","#$Attribute","has","a","smooth","surface",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675516).
lisp_trans(vtTextureAttribute(vRough),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675614).
lisp_trans(contraryAttribute(vSmooth,vRough),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675648).
lisp_trans(documentation(vRough,vEnglishLanguage,s("An","#$Object","with","this","#$Attribute","has","a","rough","surface",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675681).
lisp_trans(genls(tGeometricFigure,vtShapeAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675777).
lisp_trans(sumo_partition(tGeometricFigure,tSumoGeometricPoint,tSumoOneDimensionalFigure,tSumoTwoDimensionalFigure,tSumoThreeDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675819).
lisp_trans(documentation(tGeometricFigure,vEnglishLanguage,s("The","class","of","all","geometric","figures",",","i",".","e",".","the","class","of","all","abstract",",","spatial","representations",".","The","instances","of","this","class","are","#$GeometricPoints",",","#$TwoDimensionalFigures","or","#$ThreeDimensionalFigures",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':675927).
lisp_trans(genls(tSumoGeometricPoint,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676177).
lisp_trans(documentation(tSumoGeometricPoint,vEnglishLanguage,s("The","class","of","zero","-","dimensional","#$GeometricFigures",",","i",".","e",".","the","class","of","#$GeometricFigures","that","have","position","but","lack","extension","in","any","dimension",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676219).
lisp_trans(genls(tSumoOneDimensionalFigure,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676412).
lisp_trans(documentation(tSumoOneDimensionalFigure,vEnglishLanguage,s("The","class","of","#$GeometricFigures","that","have","position","and","an","extension","along","a","single","dimension",",","viz",".","straight","lines",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676460).
lisp_trans(genls(tSumoTwoDimensionalFigure,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676631).
lisp_trans(sumo_partition(tSumoTwoDimensionalFigure,tSumoOpenTwoDimensionalFigure,tSumoClosedTwoDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676679).
lisp_trans(documentation(tSumoTwoDimensionalFigure,vEnglishLanguage,s("The","class","of","#$GeometricFigures","that","have","position","and","an","extension","along","two","dimensions",",","viz",".","plane","figures","like","circles","and","polygons",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676764).
lisp_trans(genls(tSumoOpenTwoDimensionalFigure,tSumoTwoDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':676956).
lisp_trans(documentation(tSumoOpenTwoDimensionalFigure,vEnglishLanguage,s("The","class","of","#$TwoDimensionalFigures","that","are","not","#$ClosedTwoDimensionalFigures",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677013).
lisp_trans(genls(tSumoTwoDimensionalAngle,tSumoOpenTwoDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677154).
lisp_trans(documentation(tSumoTwoDimensionalAngle,vEnglishLanguage,s("Any","two","#$OneDimensionalFigures","(","i",".","e",".","straight","lines",")","meeting","at","a","single","#$GeometricPoint",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677210).
lisp_trans(genls(tSumoClosedTwoDimensionalFigure,tSumoTwoDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677357).
lisp_trans(documentation(tSumoClosedTwoDimensionalFigure,vEnglishLanguage,s("Any","#$TwoDimensionalFigure","which","has","a","well","defined","interior","and","exterior",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677416).
lisp_trans(genls(tSumoThreeDimensionalFigure,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677553).
lisp_trans(documentation(tSumoThreeDimensionalFigure,vEnglishLanguage,s("The","class","of","#$GeometricFigures","that","have","position","and","an","extension","along","three","dimensions",",","viz",".","geometric","solids","like","polyhedrons","and","cylinders",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677603).
lisp_trans(rtBinaryPredicate(geometricPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677807).
lisp_trans(rtPartialOrderingRelation(geometricPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677848).
lisp_trans(argIsa(geometricPart,1,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677897).
lisp_trans(argIsa(geometricPart,2,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677938).
lisp_trans(documentation(geometricPart,vEnglishLanguage,s("(","#$geometricPart","?","PART","?","WHOLE",")","means","that","the","#$GeometricFigure","?","PART","is","part","of","the","#$GeometricFigure","?","WHOLE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':677979).
lisp_trans(genlPreds(pointOfFigure,geometricPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678139).
lisp_trans(rtBinaryPredicate(pointOfFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678181).
lisp_trans(argIsa(pointOfFigure,1,tSumoGeometricPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678222).
lisp_trans(argIsa(pointOfFigure,2,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678262).
lisp_trans(documentation(pointOfFigure,vEnglishLanguage,s("(","#$pointOfFigure","?","POINT","?","FIGURE",")","means","that","the","#$GeometricPoint","?","POINT","is","part","of","the","#$GeometricFigure","?","FIGURE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678303).
lisp_trans(genlPreds(angleOfFigure,geometricPart),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678466).
lisp_trans(rtBinaryPredicate(angleOfFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678508).
lisp_trans(argIsa(angleOfFigure,1,tSumoTwoDimensionalAngle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678549).
lisp_trans(argIsa(angleOfFigure,2,tGeometricFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678594).
lisp_trans(documentation(angleOfFigure,vEnglishLanguage,s("(","#$angleOfFigure","?","ANGLE","?","FIGURE",")","means","that","the","#$TwoDimensionalAngle","?","ANGLE","is","part","of","the","#$GeometricFigure","?","FIGURE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678635).
lisp_trans(rtTernaryPredicate(pointOfIntersection),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678803).
lisp_trans(argIsa(pointOfIntersection,1,tSumoOneDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678851).
lisp_trans(argIsa(pointOfIntersection,2,tSumoOneDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678903).
lisp_trans(argIsa(pointOfIntersection,3,tSumoGeometricPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':678955).
lisp_trans(documentation(pointOfIntersection,vEnglishLanguage,s("(","#$pointOfIntersection","?","FIGURE1","?","FIGURE2","?","POINT",")","means","that","the","two","straight","lines","?","FIGURE1","and","?","FIGURE2","meet","at","the","point","?","POINT",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679001).
lisp_trans(=>(pointOfIntersection(FIGURE1,FIGURE2,POINT),and(pointOfFigure(POINT,FIGURE1),pointOfFigure(POINT,FIGURE2))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679187).
lisp_trans(rtBinaryPredicate(parallel),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679328).
lisp_trans(argIsa(parallel,1,tSumoOneDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679364).
lisp_trans(argIsa(parallel,2,tSumoOneDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679405).
lisp_trans(documentation(parallel,vEnglishLanguage,s("(","#$parallel","?","LINE1","?","LINE2",")","means","that","the","#$OneDimensionalFigures","?","LINE1","and","?","LINE2","are","parallel","to","one","another",",","i",".","e",".","they","are","equidistant","from","one","another","at","every","point",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679446).
lisp_trans(=>(parallel(LINE1,LINE2),not(exists([POINT],pointOfIntersection(LINE1,LINE2,POINT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679662).
lisp_trans(rtBinaryPredicate(angularMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679774).
lisp_trans(rtTotalValuedRelation(angularMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679816).
lisp_trans(argIsa(angularMeasure,1,tSumoTwoDimensionalAngle),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679862).
lisp_trans(argIsa(angularMeasure,2,vtPlaneAngleMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679908).
lisp_trans(documentation(angularMeasure,vEnglishLanguage,s("(","#$angularMeasure","?","ANGLE","?","MEASURE",")","means","that","the","two","-","dimensional","geometric","angle","?","ANGLE","has","the","#$PlaneAngleMeasure","of","?","MEASURE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':679952).
lisp_trans(rtBinaryPredicate(lineMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680132).
lisp_trans(rtTotalValuedRelation(lineMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680171).
lisp_trans(argIsa(lineMeasure,1,tSumoOneDimensionalFigure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680214).
lisp_trans(argIsa(lineMeasure,2,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680258).
lisp_trans(documentation(lineMeasure,vEnglishLanguage,s("(","#$lineMeasure","?","LINE","?","MEASURE",")","means","that","the","straight","line","?","LINE","has","the","#$LengthMeasure","of","?","MEASURE",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680295).
lisp_trans(rtTernaryPredicate(geometricDistance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680445).
lisp_trans(rtSingleValuedRelation(geometricDistance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680491).
lisp_trans(rtTotalValuedRelation(geometricDistance),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680541).
lisp_trans(argIsa(geometricDistance,1,tSumoGeometricPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680590).
lisp_trans(argIsa(geometricDistance,2,tSumoGeometricPoint),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680634).
lisp_trans(argIsa(geometricDistance,3,vtLengthMeasure),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680678).
lisp_trans(documentation(geometricDistance,vEnglishLanguage,s("(","#$geometricDistance","?","POINT1","?","POINT2","?","LENGTH",")","means","that","?","LENGTH","is","the","distance","between","the","two","#$GeometricPoints","?","POINT1","and","?","POINT2",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680721).
lisp_trans(=>(geometricDistance(POINT1,POINT2,LENGTH),geometricDistance(POINT2,POINT1,LENGTH)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':680910).
lisp_trans(genls(vtSaturationAttribute,vtInternalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681010).
lisp_trans(documentation(vtSaturationAttribute,vEnglishLanguage,s("A","#$Class","of","#$Attributes","that","specify",",","in","a","qualitative","manner",",","the","extent","of","the","presence","of","one","kind","of","#$Object","in","another","kind","of","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681059).
lisp_trans(vtSaturationAttribute(vDry),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681259).
lisp_trans(contraryAttribute(vDry,vDamp),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681294).
lisp_trans(documentation(vDry,vEnglishLanguage,s("An","#$Attribute","which","indicates","that","the","associated","#$Object","contains","no","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681323).
lisp_trans(=>(sumoAttribute(OBJ,vDry),not(exists([SUBOBJ],and(part(SUBOBJ,OBJ),sumoAttribute(SUBOBJ,tSumoLiquid))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681444).
lisp_trans(vtSaturationAttribute(vDamp),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681594).
lisp_trans(documentation(vDamp,vEnglishLanguage,s("An","#$Attribute","which","indicates","that","the","associated","#$Object","contains","some","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681630).
lisp_trans(vtSaturationAttribute(vWet),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681754).
lisp_trans(subAttribute(vWet,vDamp),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681789).
lisp_trans(documentation(vWet,vEnglishLanguage,s("An","#$Attribute","which","indicates","that","the","associated","#$Object","is","fully","saturated","with","a","#$Liquid",",","i",".","e",".","every","part","of","the","#$Object","has","a","subpart","which","is","a","#$Liquid",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':681813).
lisp_trans(=>(sumoAttribute(OBJ,vWet),all([PART],=>(part(PART,OBJ),exists([SUBPART],and(part(SUBPART,PART),sumoAttribute(SUBPART,tSumoLiquid)))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682015).
lisp_trans(genls(vtBiologicalAttribute,vtInternalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682230).
lisp_trans(documentation(vtBiologicalAttribute,vEnglishLanguage,'Attributes that apply specifically to instances of #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682279).
lisp_trans(=>(and(sumoAttribute(ORG,ATT),vtBiologicalAttribute(ATT)),tSumoOrganicObject(ORG)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682658).
lisp_trans(genls(actBodyPosition,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682782).
lisp_trans(documentation(actBodyPosition,vEnglishLanguage,s("The","class","of","#$Attributes","expressing","configurations","of","bodies","or","parts","of","bodies","of","animals","or","humans",",","e",".","g",".","standing",",","sitting",",","kneeling",",","lying","down",",","etc",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':682826).
lisp_trans(=>(tClazzAnimal(ANIMAL),or(exists([MOTION],and(actBodyMotion(MOTION),agent(MOTION,ANIMAL))),exists([ATTR],and(actBodyPosition(ATTR),sumoAttribute(ANIMAL,ATTR))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683028).
lisp_trans(actBodyPosition(actStanding),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683307).
lisp_trans(documentation(actStanding,vEnglishLanguage,s("The","#$BodyPosition","of","being","upright",",","i",".","e",".","being","fully","extended","and","supported","by","nothing","other","than","one","'s","own","feet",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683340).
lisp_trans(=>(and(actAmbulating(AMBULATE),agent(AMBULATE,AGENT)),sumoAttribute(AGENT,actStanding)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683499).
lisp_trans(actBodyPosition(actSitting),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683614).
lisp_trans(documentation(actSitting,vEnglishLanguage,s("The","#$BodyPosition","of","being","recumbent",",","i",".","e",".","knees","bent","and","back","side","supported",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683646).
lisp_trans(actBodyPosition(tSumoProstrate),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683769).
lisp_trans(documentation(tSumoProstrate,vEnglishLanguage,s("The","#$BodyPosition","of","lying","down",",","being","in","a","horizontal","position",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683803).
lisp_trans(genls(vtAnimacyAttribute,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683914).
lisp_trans(exhaustiveAttribute(vtAnimacyAttribute,actLiving,tDead),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':683962).
lisp_trans(documentation(vtAnimacyAttribute,vEnglishLanguage,'Attributes that indicate whether an #$Organism is alive or not.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684013).
lisp_trans(vtAnimacyAttribute(actLiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684131).
lisp_trans(documentation(actLiving,vEnglishLanguage,s("This","#$Attribute","applies","to","#$Organisms","that","are","alive",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684166).
lisp_trans(=>(and(tSumoOrganism(ORGANISM),agent(PROCESS,ORGANISM)),holdsDuring(uWhenFn(PROCESS),sumoAttribute(ORGANISM,actLiving))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684264).
lisp_trans(vtAnimacyAttribute(tDead),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684412).
lisp_trans(subAttribute(tDead,mobUnconscious),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684445).
lisp_trans(contraryAttribute(tDead,actLiving),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684477).
lisp_trans(documentation(tDead,vEnglishLanguage,s("This","#$Attribute","applies","to","#$Organisms","that","are","not","alive",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684509).
lisp_trans(=>(tSumoOrganism(ORG),exists([ATTR],and(vtAnimacyAttribute(ATTR),sumoAttribute(ORG,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684609).
lisp_trans(genls(vtSexAttribute,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684750).
lisp_trans(exhaustiveAttribute(vtSexAttribute,tFemale,tMale),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684794).
lisp_trans(documentation(vtSexAttribute,vEnglishLanguage,'Attributes that indicate the sex of an #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684841).
lisp_trans(vtSexAttribute(tFemale),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684942).
lisp_trans(documentation(tFemale,vEnglishLanguage,s("An","#$Attribute","indicating","that","an","#$Organism","is","female","in","nature",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':684973).
lisp_trans(=>(and(tSumoReproductiveBody(BODY),part(BODY,ORG),tSumoOrganism(ORG)),sumoAttribute(ORG,tFemale)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685081).
lisp_trans(vtSexAttribute(tMale),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685215).
lisp_trans(contraryAttribute(tMale,tFemale),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685244).
lisp_trans(documentation(tMale,vEnglishLanguage,s("An","#$Attribute","indicating","that","an","#$Organism","is","male","in","nature",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685276).
lisp_trans(=>(tClazzAnimal(ANIMAL),exists([ATTR],and(vtSexAttribute(ATTR),sumoAttribute(ANIMAL,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685380).
lisp_trans(genls(vtDevelopmentalAttribute,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685521).
lisp_trans(exhaustiveAttribute(vtDevelopmentalAttribute,tSumoFullyFormed,tSumoNonFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685575).
lisp_trans(documentation(vtDevelopmentalAttribute,vEnglishLanguage,'Attributes that indicate the stage of development of an #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685647).
lisp_trans(vtDevelopmentalAttribute(tSumoFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685775).
lisp_trans(documentation(tSumoFullyFormed,vEnglishLanguage,s("The","stage","of","an","#$Organism","when","it","has","reached","the","end","of","its","growth","phase",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685821).
lisp_trans(=>(sumoAttribute(OBJ,tSumoFullyFormed),exists([GROWTH],and(tSumoGrowth(GROWTH),experiencer(GROWTH,OBJ),holdsDuring(uBeginFn(uWhenFn(OBJ)),sumoAttribute(OBJ,tSumoNonFullyFormed))))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':685944).
lisp_trans(vtDevelopmentalAttribute(tSumoNonFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686166).
lisp_trans(contraryAttribute(tSumoNonFullyFormed,tSumoFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686215).
lisp_trans(successorAttribute(tSumoNonFullyFormed,tSumoFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686262).
lisp_trans(documentation(tSumoNonFullyFormed,vEnglishLanguage,s("The","stage","of","an","#$Organism","before","it","is","#$FullyFormed",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686310).
lisp_trans(=>(tSumoOrganism(ORG),exists([ATTR],and(vtDevelopmentalAttribute(ATTR),sumoAttribute(ORG,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686415).
lisp_trans(subAttribute(tSumoLarval,tSumoNonFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686562).
lisp_trans(documentation(tSumoLarval,vEnglishLanguage,s("Form","of","most","#$Invertebrates",",","#$Amphibians",",","and","#$Fish","immediately","after","they","hatch",".","This","form","is","fundamentally","unlike","the","adult","form",",","and","metamorphosis","is","required","to","reach","the","latter","form",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':686599).
lisp_trans(=>(and(holdsDuring(TIME,sumoAttribute(ORG,tSumoLarval)),tSumoBirth(BIRTH),equal(BW,uWhenFn(BIRTH)),experiencer(BIRTH,ORG)),meetsTemporally(BW,TIME)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687086).
lisp_trans(subAttribute(tSumoEmbryonic,tSumoNonFullyFormed),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687268).
lisp_trans(contraryAttribute(tSumoEmbryonic,tSumoLarval),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687308).
lisp_trans(documentation(tSumoEmbryonic,vEnglishLanguage,s("The","stage","of","an","#$Organism","or","an","#$AnatomicalStructure","that","exists","only","before","the","#$Organism","is","born",".","#$Mammals",",","for","example",",","have","this","#$Attribute","only","prior","to","their","birth",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687345).
lisp_trans(=>(sumoAttribute(ORG,tSumoEmbryonic),exists([BODY],and(tSumoReproductiveBody(BODY),located(ORG,BODY)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687566).
lisp_trans(=>(and(holdsDuring(TIME,sumoAttribute(ORG,tSumoEmbryonic)),tSumoBirth(BIRTH),equal(BW,uWhenFn(BIRTH)),experiencer(BIRTH,ORG)),not(overlapsTemporally(TIME,BW))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':687999).
lisp_trans(genls(tSumoDiseaseOrSyndrome,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':688193).
lisp_trans(documentation(tSumoDiseaseOrSyndrome,vEnglishLanguage,s("A","#$BiologicalAttribute","which","qualifies","something","that","alters","or","interferes","with","a","normal","process",",","state","or","activity","of","an","#$Organism",".","It","is","usually","characterized","by","the","abnormal","functioning","of","one","or","more","of","the","host","'s","systems",",","parts",",","or","#$Organs",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':688242).
lisp_trans(genls(vtPsychologicalAttribute,vtBiologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':688686).
lisp_trans(sumo_partition(vtPsychologicalAttribute,tSumoStateOfMind,vtTraitAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':688741).
lisp_trans(documentation(vtPsychologicalAttribute,vEnglishLanguage,'Attributes that characterize the mental or behavioral life of an #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':688803).
lisp_trans(=>(vtPsychologicalAttribute(ATTR),=>(and(holdsDuring(TIME,sumoAttribute(ORGANISM,ATTR)),tSumoOrganism(ORGANISM)),holdsDuring(TIME,sumoAttribute(ORGANISM,actLiving)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689148).
lisp_trans(=>(and(vtPsychologicalAttribute(ATTR),sumoAttribute(AGENT,ATTR)),mobSentientAgent(AGENT)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689366).
lisp_trans(genls(tSumoStateOfMind,vtPsychologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689493).
lisp_trans(documentation(tSumoStateOfMind,vEnglishLanguage,s("The","class","#$StateOfMind","is","distinguished","from","its","complement","#$TraitAttribute","by","the","fact","that","instances","of","the","former","are","transient","while","instances","of","the","latter","are","persistent","features","of","a","creature","'s","behavioral","/","psychological","make","-","up",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689539).
lisp_trans(genls(tSumoEmotionalState,tSumoStateOfMind),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689824).
lisp_trans(documentation(tSumoEmotionalState,vEnglishLanguage,s("The","#$Class","of","#$Attributes","that","denote","emotional","states","of","#$Organisms",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689862).
lisp_trans(genls(vtConsciousnessAttribute,tSumoStateOfMind),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':689985).
lisp_trans(documentation(vtConsciousnessAttribute,vEnglishLanguage,'Attributes that indicate whether an #$Organism is conscious or the qualitative degree of consciousness of an #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690031).
lisp_trans(<=>(and(mobSentientAgent(AGENT),sumoAttribute(AGENT,actLiving)),exists([ATTR],and(vtConsciousnessAttribute(ATTR),sumoAttribute(AGENT,ATTR)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690212).
lisp_trans(vtConsciousnessAttribute(mobAsleep),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690413).
lisp_trans(documentation(mobAsleep,vEnglishLanguage,'Attribute that applies to #$Organisms that are sleeping.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690454).
lisp_trans(vtConsciousnessAttribute(mobUnconscious),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690555).
lisp_trans(contraryAttribute(mobUnconscious,mobAwake),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690601).
lisp_trans(documentation(mobUnconscious,vEnglishLanguage,'Attribute that applies to #$Organisms that are unconscious.  An #$Organism may be #$Unconscious because it is #$Dead or because of a blow to the head, a drug, etc.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690639).
lisp_trans(vtConsciousnessAttribute(mobAwake),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690852).
lisp_trans(documentation(mobAwake,vEnglishLanguage,'Attribute that applies to #$Organisms that are neither #$Unconscious nor #$Asleep.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':690892).
lisp_trans(=>(or(sumoAttribute(AGENT,mobAsleep),sumoAttribute(AGENT,mobAwake)),sumoAttribute(AGENT,actLiving)),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691018).
lisp_trans(genls(vtTraitAttribute,vtPsychologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691124).
lisp_trans(documentation(vtTraitAttribute,vEnglishLanguage,'Attributes that indicate the the behavior/personality traits of an #$Organism.'),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691173).
lisp_trans(genls(actPsychologicalDysfunction,vtPsychologicalAttribute),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691304).
lisp_trans(genls(actPsychologicalDysfunction,tSumoDiseaseOrSyndrome),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691363).
lisp_trans(documentation(actPsychologicalDysfunction,vEnglishLanguage,s("A","clinically","significant","dysfunction","whose","major","manifestation","is","behavioral","or","psychological",".","These","dysfunctions","may","have","identified","or","presumed","biological","etiologies","or","manifestations",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691417).
lisp_trans(rtTernaryPredicate(comment),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691664).
lisp_trans(documentation(comment,vEnglishLanguage,s("(","#$comment","?","ENT","?","STR","?","PER",")","is","a","convenience","relationship","that","allows","ontologists","represented","by","#$SymbolicString","?","PER","to","write","down","commentaries","?","STR","on","a","defined","#$Entity","?","ENT")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691700).
lisp_trans(termFormat(vEnglishLanguage,comment,"comment"),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691919).
lisp_trans(argIsa(comment,1,tThing),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691967).
lisp_trans(argIsa(comment,2,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':691993).
lisp_trans(argIsa(comment,3,ftString),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692027).
lisp_trans(rtUnaryFunction(actMakingFn),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692062).
lisp_trans(argGenl(actMakingFn,1,actMaking),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692096).
lisp_trans(resultGenl(actMakingFn,tSumoObject),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692131).
lisp_trans(documentation(actMakingFn,vEnglishLanguage,s("A","#$Function","that","denotes","the","creation","of","an","#$Object",".")),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692163).
lisp_trans(=>(isa(X,actMakingFn(Y)),exists([OBJECT],and(isa(OBJECT,Y),result(X,OBJECT)))),'/mnt/gggg/logicmoo_workspace/pack/prologmud_samples/prolog/ontologyportal_sumo/Merge.kif':692262).
