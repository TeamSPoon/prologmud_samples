prolog
l
look
s
jump
prolog
bformat("hi",[]).
y
use_module(library(logicmoo/butterfly_console)).
l
notrace.
nodebug.
use_module(library(logicmoo/butterfly_console)).
butterfly:hi_there.
getenv('COLORTERM',butterfly).
is_butterfly_console.
make.
is_butterfly_console.
thread_self(X).
make.
thread_self(X).
!.
.
thread_self(X).
prolog
is_butterfly_console.
use_module(library(logicmoo/butterfly_console)).
is_butterfly_console.
thread_self(X).
hi_there_fred3.
hi_there_fred.
make.
hi_there_fred3.
hi_there_fred.
make.
hi_there_fred3.
prolog
fly_test1.
l
notrace.
nodebug.
fly_test1.
fly_test2.
fly_test3.
fly_test4.
fly_test5.
fly_test6.
cls.
ls.
fly_test6.
fly_test1.
fly_test.
lisitng(fly_test).
y
listing(fly_test).
fly_test1.
make.
fly_test.
fly_test1.
make.
fly_test.
fly_test1.
make.
fly_test1.
make.
fly_test1.
fly_test.
fly_test2.
make.
fly_test2.
fly_test1.
make.
fly_test1.
make.
mouse_over_span.
make.
fly_test1.
make.
fly_test1.
make.
fly_test1.
make.
fly_test1.
fly_test2.
fly_test.
make.
fly_test.
fly_test1.
make.
fly_test1.
make.
fly_test1.
make.
fly_test1.
make.
fly_test1.
make.
fly_test1.
make.
fly_test5a.
fly_test5.
make.
fly_test4.
make.
fly_test4.
fly_test0.
make.
trace.
notrace.
nodebug.
make.
